//Mejdu FrameWork powered by PIXI

var GS;var GodStep=GS=GodStep||{};var GodPath=GodPath||'';GodStep.ver=1;var pro;GodStep.includes=[];GodStep.version='1.1.3';(function(){var root=this;var PIXI=PIXI||{};PIXI.WEBGL_RENDERER=0;PIXI.CANVAS_RENDERER=1;PIXI.VERSION="v2.2.7";PIXI.blendModes={NORMAL:0,ADD:1,MULTIPLY:2,SCREEN:3,OVERLAY:4,DARKEN:5,LIGHTEN:6,COLOR_DODGE:7,COLOR_BURN:8,HARD_LIGHT:9,SOFT_LIGHT:10,DIFFERENCE:11,EXCLUSION:12,HUE:13,SATURATION:14,COLOR:15,LUMINOSITY:16};PIXI.scaleModes={DEFAULT:0,LINEAR:0,NEAREST:1};PIXI._UID=0;if(typeof(Float32Array)!='undefined')
{PIXI.Float32Array=Float32Array;PIXI.Uint16Array=Uint16Array;PIXI.Uint32Array=Uint32Array;PIXI.ArrayBuffer=ArrayBuffer;}
else
{PIXI.Float32Array=Array;PIXI.Uint16Array=Array;}
 PIXI.INTERACTION_FREQUENCY=30;PIXI.AUTO_PREVENT_DEFAULT=true;PIXI.PI_2=Math.PI*2;PIXI.RAD_TO_DEG=180/Math.PI;PIXI.DEG_TO_RAD=Math.PI/180;PIXI.RETINA_PREFIX="@2x";PIXI.dontSayHello=false;PIXI.defaultRenderOptions={view:null,transparent:false,antialias:false,preserveDrawingBuffer:false,resolution:1,clearBeforeRender:true,autoResize:false}
 PIXI.sayHello=function(type)
 {if(PIXI.dontSayHello)return;if(navigator.userAgent.toLowerCase().indexOf('chrome')>-1)
 {var args=['%c %c %c Pixi.js '+PIXI.VERSION+' - '+type+'  %c '+' %c '+' /www.pixijs.com/  %c %c ♥%c♥%c♥ ','background: #ff66a5','background: #ff66a5','color: #ff66a5; background: #030307;','background: #ff66a5','background: #ffc3dc','background: #ff66a5','color: #ff2424; background: #fff','color: #ff2424; background: #fff','color: #ff2424; background: #fff'];console.log.apply(console,args);}
 else if(window['console'])
 {console.log('Pixi.js '+PIXI.VERSION+' - /www.pixijs.com/');}
  PIXI.dontSayHello=true;};PIXI.Point=function(x,y)
 {this.x=x||0;this.y=y||0;};PIXI.Point.prototype.clone=function()
 {return new PIXI.Point(this.x,this.y);};PIXI.Point.prototype.set=function(x,y)
 {this.x=x||0;this.y=y||((y!==0)?this.x:0);};PIXI.Point.prototype.constructor=PIXI.Point;PIXI.Rectangle=function(x,y,width,height)
 {this.x=x||0;this.y=y||0;this.width=width||0;this.height=height||0;};PIXI.Rectangle.prototype.clone=function()
 {return new PIXI.Rectangle(this.x,this.y,this.width,this.height);};PIXI.Rectangle.prototype.contains=function(x,y)
 {if(this.width<=0||this.height<=0)
  return false;var x1=this.x;if(x>=x1&&x<=x1+this.width)
 {var y1=this.y;if(y>=y1&&y<=y1+this.height)
 {return true;}}
  return false;};PIXI.Rectangle.prototype.constructor=PIXI.Rectangle;PIXI.EmptyRectangle=new PIXI.Rectangle(0,0,0,0);PIXI.Polygon=function(points)
 {if(!(points instanceof Array))points=Array.prototype.slice.call(arguments);if(points[0]instanceof PIXI.Point)
 {var p=[];for(var i=0,il=points.length;i<il;i++)
 {p.push(points[i].x,points[i].y);}
  points=p;}
  this.closed=true;this.points=points;};PIXI.Polygon.prototype.clone=function()
 {var points=this.points.slice();return new PIXI.Polygon(points);};PIXI.Polygon.prototype.contains=function(x,y)
 {var inside=false;var length=this.points.length/2;for(var i=0,j=length-1;i<length;j=i++)
 {var xi=this.points[i*2],yi=this.points[i*2+1],xj=this.points[j*2],yj=this.points[j*2+1],intersect=((yi>y)!==(yj>y))&&(x<(xj-xi)*(y-yi)/(yj-yi)+xi);if(intersect)inside=!inside;}
  return inside;};PIXI.Polygon.prototype.constructor=PIXI.Polygon;PIXI.Circle=function(x,y,radius)
 {this.x=x||0;this.y=y||0;this.radius=radius||0;};PIXI.Circle.prototype.clone=function()
 {return new PIXI.Circle(this.x,this.y,this.radius);};PIXI.Circle.prototype.contains=function(x,y)
 {if(this.radius<=0)
  return false;var dx=(this.x-x),dy=(this.y-y),r2=this.radius*this.radius;dx*=dx;dy*=dy;return(dx+dy<=r2);};PIXI.Circle.prototype.getBounds=function()
 {return new PIXI.Rectangle(this.x-this.radius,this.y-this.radius,this.radius*2,this.radius*2);};PIXI.Circle.prototype.constructor=PIXI.Circle;PIXI.Ellipse=function(x,y,width,height)
 {this.x=x||0;this.y=y||0;this.width=width||0;this.height=height||0;};PIXI.Ellipse.prototype.clone=function()
 {return new PIXI.Ellipse(this.x,this.y,this.width,this.height);};PIXI.Ellipse.prototype.contains=function(x,y)
 {if(this.width<=0||this.height<=0)
  return false;var normx=((x-this.x)/this.width),normy=((y-this.y)/this.height);normx*=normx;normy*=normy;return(normx+normy<=1);};PIXI.Ellipse.prototype.getBounds=function()
 {return new PIXI.Rectangle(this.x-this.width,this.y-this.height,this.width,this.height);};PIXI.Ellipse.prototype.constructor=PIXI.Ellipse;PIXI.RoundedRectangle=function(x,y,width,height,radius)
 {this.x=x||0;this.y=y||0;this.width=width||0;this.height=height||0;this.radius=radius||20;};PIXI.RoundedRectangle.prototype.clone=function()
 {return new PIXI.RoundedRectangle(this.x,this.y,this.width,this.height,this.radius);};PIXI.RoundedRectangle.prototype.contains=function(x,y)
 {if(this.width<=0||this.height<=0)
  return false;var x1=this.x;if(x>=x1&&x<=x1+this.width)
 {var y1=this.y;if(y>=y1&&y<=y1+this.height)
 {return true;}}
  return false;};PIXI.RoundedRectangle.prototype.constructor=PIXI.RoundedRectangle;PIXI.Matrix=function(a,b,c,d,tx,ty)
 {this.a=a||1;this.b=b||0;this.c=c||0;this.d=d||1;this.tx=tx||0;this.ty=ty||0;};PIXI.Matrix.prototype.fromArray=function(array)
 {this.a=array[0];this.b=array[1];this.c=array[3];this.d=array[4];this.tx=array[2];this.ty=array[5];};PIXI.Matrix.prototype.toArray=function(transpose)
 {if(!this.array)this.array=new PIXI.Float32Array(9);var array=this.array;if(transpose)
 {array[0]=this.a;array[1]=this.b;array[2]=0;array[3]=this.c;array[4]=this.d;array[5]=0;array[6]=this.tx;array[7]=this.ty;array[8]=1;}
 else
 {array[0]=this.a;array[1]=this.c;array[2]=this.tx;array[3]=this.b;array[4]=this.d;array[5]=this.ty;array[6]=0;array[7]=0;array[8]=1;}
  return array;};PIXI.Matrix.prototype.apply=function(pos,newPos)
 {newPos=newPos||new PIXI.Point();newPos.x=this.a*pos.x+this.c*pos.y+this.tx;newPos.y=this.b*pos.x+this.d*pos.y+this.ty;return newPos;};PIXI.Matrix.prototype.applyInverse=function(pos,newPos)
 {newPos=newPos||new PIXI.Point();var id=1/(this.a*this.d+this.c*-this.b);newPos.x=this.d*id*pos.x+-this.c*id*pos.y+(this.ty*this.c-this.tx*this.d)*id;newPos.y=this.a*id*pos.y+-this.b*id*pos.x+(-this.ty*this.a+this.tx*this.b)*id;return newPos;};PIXI.Matrix.prototype.translate=function(x,y)
 {this.tx+=x;this.ty+=y;return this;};PIXI.Matrix.prototype.scale=function(x,y)
 {this.a*=x;this.d*=y;this.c*=x;this.b*=y;this.tx*=x;this.ty*=y;return this;};PIXI.Matrix.prototype.rotate=function(angle)
 {var cos=Math.cos(angle);var sin=Math.sin(angle);var a1=this.a;var c1=this.c;var tx1=this.tx;this.a=a1*cos-this.b*sin;this.b=a1*sin+this.b*cos;this.c=c1*cos-this.d*sin;this.d=c1*sin+this.d*cos;this.tx=tx1*cos-this.ty*sin;this.ty=tx1*sin+this.ty*cos;return this;};PIXI.Matrix.prototype.append=function(matrix)
 {var a1=this.a;var b1=this.b;var c1=this.c;var d1=this.d;this.a=matrix.a*a1+matrix.b*c1;this.b=matrix.a*b1+matrix.b*d1;this.c=matrix.c*a1+matrix.d*c1;this.d=matrix.c*b1+matrix.d*d1;this.tx=matrix.tx*a1+matrix.ty*c1+this.tx;this.ty=matrix.tx*b1+matrix.ty*d1+this.ty;return this;};PIXI.Matrix.prototype.identity=function()
 {this.a=1;this.b=0;this.c=0;this.d=1;this.tx=0;this.ty=0;return this;};PIXI.identityMatrix=new PIXI.Matrix();PIXI.DisplayObject=function()
 {this.position=new PIXI.Point();this.scale=new PIXI.Point(1,1);this.pivot=new PIXI.Point(0,0);this.rotation=0;this.alpha=1;this.visible=true;this.hitArea=null;this.buttonMode=false;this.renderable=false;this.parent=null;this.stage=null;this.worldAlpha=1;this._interactive=false;this.defaultCursor='pointer';this.worldTransform=new PIXI.Matrix();this._sr=0;this._cr=1;this.filterArea=null;this._bounds=new PIXI.Rectangle(0,0,1,1);this._currentBounds=null;this._mask=null;this._cacheAsBitmap=false;this._cacheIsDirty=false;};PIXI.DisplayObject.prototype.constructor=PIXI.DisplayObject;Object.defineProperty(PIXI.DisplayObject.prototype,'interactive',{get:function(){return this._interactive;},set:function(value){this._interactive=value;if(this.stage)this.stage.dirty=true;}});Object.defineProperty(PIXI.DisplayObject.prototype,'worldVisible',{get:function(){var item=this;do
 {if(!item.visible)return false;item=item.parent;}
 while(item);return true;}});Object.defineProperty(PIXI.DisplayObject.prototype,'mask',{get:function(){return this._mask;},set:function(value){if(this._mask)this._mask.isMask=false;this._mask=value;if(this._mask)this._mask.isMask=true;}});Object.defineProperty(PIXI.DisplayObject.prototype,'filters',{get:function(){return this._filters;},set:function(value){if(value)
 {var passes=[];for(var i=0;i<value.length;i++)
 {var filterPasses=value[i].passes;for(var j=0;j<filterPasses.length;j++)
 {passes.push(filterPasses[j]);}}
  this._filterBlock={target:this,filterPasses:passes};}
  this._filters=value;}});Object.defineProperty(PIXI.DisplayObject.prototype,'cacheAsBitmap',{get:function(){return this._cacheAsBitmap;},set:function(value){if(this._cacheAsBitmap===value)return;if(value)
 {this._generateCachedSprite();}
 else
 {this._destroyCachedSprite();}
  this._cacheAsBitmap=value;}});PIXI.DisplayObject.prototype.updateTransform=function()
 {var pt=this.parent.worldTransform;var wt=this.worldTransform;var a,b,c,d,tx,ty;if(this.rotation%PIXI.PI_2)
 {if(this.rotation!==this.rotationCache)
 {this.rotationCache=this.rotation;this._sr=Math.sin(this.rotation);this._cr=Math.cos(this.rotation);}
  a=this._cr*this.scale.x;b=this._sr*this.scale.x;c=-this._sr*this.scale.y;d=this._cr*this.scale.y;tx=this.position.x;ty=this.position.y;if(this.pivot.x||this.pivot.y)
 {tx-=this.pivot.x*a+this.pivot.y*c;ty-=this.pivot.x*b+this.pivot.y*d;}
  wt.a=a*pt.a+b*pt.c;wt.b=a*pt.b+b*pt.d;wt.c=c*pt.a+d*pt.c;wt.d=c*pt.b+d*pt.d;wt.tx=tx*pt.a+ty*pt.c+pt.tx;wt.ty=tx*pt.b+ty*pt.d+pt.ty;}
 else
 {a=this.scale.x;d=this.scale.y;tx=this.position.x-this.pivot.x*a;ty=this.position.y-this.pivot.y*d;wt.a=a*pt.a;wt.b=a*pt.b;wt.c=d*pt.c;wt.d=d*pt.d;wt.tx=tx*pt.a+ty*pt.c+pt.tx;wt.ty=tx*pt.b+ty*pt.d+pt.ty;}
  this.worldAlpha=this.alpha*this.parent.worldAlpha;};PIXI.DisplayObject.prototype.displayObjectUpdateTransform=PIXI.DisplayObject.prototype.updateTransform;PIXI.DisplayObject.prototype.getBounds=function(matrix)
 {matrix=matrix;return PIXI.EmptyRectangle;};PIXI.DisplayObject.prototype.getLocalBounds=function()
 {return this.getBounds(PIXI.identityMatrix);};PIXI.DisplayObject.prototype.setStageReference=function(stage)
 {this.stage=stage;if(this._interactive)this.stage.dirty=true;};PIXI.DisplayObject.prototype.generateTexture=function(resolution,scaleMode,renderer)
 {var bounds=this.getLocalBounds();var renderTexture=new PIXI.RenderTexture(bounds.width|0,bounds.height|0,renderer,scaleMode,resolution);PIXI.DisplayObject._tempMatrix.tx=-bounds.x;PIXI.DisplayObject._tempMatrix.ty=-bounds.y;renderTexture.render(this,PIXI.DisplayObject._tempMatrix);return renderTexture;};PIXI.DisplayObject.prototype.updateCache=function()
 {this._generateCachedSprite();};PIXI.DisplayObject.prototype.toGlobal=function(position)
 {this.displayObjectUpdateTransform();return this.worldTransform.apply(position);};PIXI.DisplayObject.prototype.toLocal=function(position,from)
 {if(from)
 {position=from.toGlobal(position);}
  this.displayObjectUpdateTransform();return this.worldTransform.applyInverse(position);};PIXI.DisplayObject.prototype._renderCachedSprite=function(renderSession)
 {this._cachedSprite.worldAlpha=this.worldAlpha;if(renderSession.gl)
 {PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite,renderSession);}
 else
 {PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite,renderSession);}};PIXI.DisplayObject.prototype._generateCachedSprite=function()
 {this._cacheAsBitmap=false;var bounds=this.getLocalBounds();if(!this._cachedSprite)
 {var renderTexture=new PIXI.RenderTexture(bounds.width|0,bounds.height|0);this._cachedSprite=new PIXI.Sprite(renderTexture);this._cachedSprite.worldTransform=this.worldTransform;}
 else
 {this._cachedSprite.texture.resize(bounds.width|0,bounds.height|0);}
  var tempFilters=this._filters;this._filters=null;this._cachedSprite.filters=tempFilters;PIXI.DisplayObject._tempMatrix.tx=-bounds.x;PIXI.DisplayObject._tempMatrix.ty=-bounds.y;this._cachedSprite.texture.render(this,PIXI.DisplayObject._tempMatrix,true);this._cachedSprite.anchor.x=-(bounds.x/bounds.width);this._cachedSprite.anchor.y=-(bounds.y/bounds.height);this._filters=tempFilters;this._cacheAsBitmap=true;};PIXI.DisplayObject.prototype._destroyCachedSprite=function()
 {if(!this._cachedSprite)return;this._cachedSprite.texture.destroy(true);this._cachedSprite=null;};PIXI.DisplayObject.prototype._renderWebGL=function(renderSession)
 {renderSession=renderSession;};PIXI.DisplayObject.prototype._renderCanvas=function(renderSession)
 {renderSession=renderSession;};PIXI.DisplayObject._tempMatrix=new PIXI.Matrix();Object.defineProperty(PIXI.DisplayObject.prototype,'x',{get:function(){return this.position.x;},set:function(value){this.position.x=value;}});Object.defineProperty(PIXI.DisplayObject.prototype,'y',{get:function(){return this.position.y;},set:function(value){this.position.y=value;}});PIXI.DisplayObjectContainer=function()
 {PIXI.DisplayObject.call(this);this.children=[];};PIXI.DisplayObjectContainer.prototype=Object.create(PIXI.DisplayObject.prototype);PIXI.DisplayObjectContainer.prototype.constructor=PIXI.DisplayObjectContainer;Object.defineProperty(PIXI.DisplayObjectContainer.prototype,'width',{get:function(){return this.scale.x*this.getLocalBounds().width;},set:function(value){var width=this.getLocalBounds().width;if(width!==0)
 {this.scale.x=value/width;}
 else
 {this.scale.x=1;}
  this._width=value;}});Object.defineProperty(PIXI.DisplayObjectContainer.prototype,'height',{get:function(){return this.scale.y*this.getLocalBounds().height;},set:function(value){var height=this.getLocalBounds().height;if(height!==0)
 {this.scale.y=value/height;}
 else
 {this.scale.y=1;}
  this._height=value;}});PIXI.DisplayObjectContainer.prototype.addChild=function(child)
 {return this.addChildAt(child,this.children.length);};PIXI.DisplayObjectContainer.prototype.addChildAt=function(child,index)
 {if(index>=0&&index<=this.children.length)
 {if(child.parent)
 {child.parent.removeChild(child);}
  child.parent=this;this.children.splice(index,0,child);if(this.stage)child.setStageReference(this.stage);return child;}
 else
 {throw new Error(child+'addChildAt: The index '+index+' supplied is out of bounds '+this.children.length);}};PIXI.DisplayObjectContainer.prototype.swapChildren=function(child,child2)
 {if(child===child2){return;}
  var index1=this.getChildIndex(child);var index2=this.getChildIndex(child2);if(index1<0||index2<0){throw new Error('swapChildren: Both the supplied DisplayObjects must be a child of the caller.');}
  this.children[index1]=child2;this.children[index2]=child;};PIXI.DisplayObjectContainer.prototype.getChildIndex=function(child)
 {var index=this.children.indexOf(child);if(index===-1)
 {throw new Error('The supplied DisplayObject must be a child of the caller');}
  return index;};PIXI.DisplayObjectContainer.prototype.setChildIndex=function(child,index)
 {if(index<0||index>=this.children.length)
 {throw new Error('The supplied index is out of bounds');}
  var currentIndex=this.getChildIndex(child);this.children.splice(currentIndex,1);this.children.splice(index,0,child);};PIXI.DisplayObjectContainer.prototype.getChildAt=function(index)
 {if(index<0||index>=this.children.length)
 {throw new Error('getChildAt: Supplied index '+index+' does not exist in the child list, or the supplied DisplayObject must be a child of the caller');}
  return this.children[index];};PIXI.DisplayObjectContainer.prototype.removeChild=function(child)
 {var index=this.children.indexOf(child);if(index===-1)return;return this.removeChildAt(index);};PIXI.DisplayObjectContainer.prototype.removeChildAt=function(index)
 {var child=this.getChildAt(index);if(this.stage)
  child.removeStageReference();child.parent=undefined;this.children.splice(index,1);return child;};PIXI.DisplayObjectContainer.prototype.removeChildren=function(beginIndex,endIndex)
 {var begin=beginIndex||0;var end=typeof endIndex==='number'?endIndex:this.children.length;var range=end-begin;if(range>0&&range<=end)
 {var removed=this.children.splice(begin,range);for(var i=0;i<removed.length;i++){var child=removed[i];if(this.stage)
  child.removeStageReference();child.parent=undefined;}
  return removed;}
 else if(range===0&&this.children.length===0)
 {return[];}
 else
 {throw new Error('removeChildren: Range Error, numeric values are outside the acceptable range');}};PIXI.DisplayObjectContainer.prototype.updateTransform=function()
 {if(!this.visible)return;this.displayObjectUpdateTransform();if(this._cacheAsBitmap)return;for(var i=0,j=this.children.length;i<j;i++)
 {this.children[i].updateTransform();}};PIXI.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform=PIXI.DisplayObjectContainer.prototype.updateTransform;PIXI.DisplayObjectContainer.prototype.getBounds=function()
 {if(this.children.length===0)return PIXI.EmptyRectangle;var minX=Infinity;var minY=Infinity;var maxX=-Infinity;var maxY=-Infinity;var childBounds;var childMaxX;var childMaxY;var childVisible=false;for(var i=0,j=this.children.length;i<j;i++)
 {var child=this.children[i];if(!child.visible)continue;childVisible=true;childBounds=this.children[i].getBounds();minX=minX<childBounds.x?minX:childBounds.x;minY=minY<childBounds.y?minY:childBounds.y;childMaxX=childBounds.width+childBounds.x;childMaxY=childBounds.height+childBounds.y;maxX=maxX>childMaxX?maxX:childMaxX;maxY=maxY>childMaxY?maxY:childMaxY;}
  if(!childVisible)
   return PIXI.EmptyRectangle;var bounds=this._bounds;bounds.x=minX;bounds.y=minY;bounds.width=maxX-minX;bounds.height=maxY-minY;return bounds;};PIXI.DisplayObjectContainer.prototype.getLocalBounds=function()
 {var matrixCache=this.worldTransform;this.worldTransform=PIXI.identityMatrix;for(var i=0,j=this.children.length;i<j;i++)
 {this.children[i].updateTransform();}
  var bounds=this.getBounds();this.worldTransform=matrixCache;return bounds;};PIXI.DisplayObjectContainer.prototype.setStageReference=function(stage)
 {this.stage=stage;if(this._interactive)this.stage.dirty=true;for(var i=0,j=this.children.length;i<j;i++)
 {var child=this.children[i];child.setStageReference(stage);}};PIXI.DisplayObjectContainer.prototype.removeStageReference=function()
 {for(var i=0,j=this.children.length;i<j;i++)
 {var child=this.children[i];child.removeStageReference();}
  if(this._interactive)this.stage.dirty=true;this.stage=null;};PIXI.DisplayObjectContainer.prototype._renderWebGL=function(renderSession)
 {if(!this.visible||this.alpha<=0)return;if(this._cacheAsBitmap)
 {this._renderCachedSprite(renderSession);return;}
  var i,j;if(this._mask||this._filters)
 {if(this._filters)
 {renderSession.spriteBatch.flush();renderSession.filterManager.pushFilter(this._filterBlock);}
  if(this._mask)
  {renderSession.spriteBatch.stop();renderSession.maskManager.pushMask(this.mask,renderSession);renderSession.spriteBatch.start();}
  for(i=0,j=this.children.length;i<j;i++)
  {this.children[i]._renderWebGL(renderSession);}
  renderSession.spriteBatch.stop();if(this._mask)renderSession.maskManager.popMask(this._mask,renderSession);if(this._filters)renderSession.filterManager.popFilter();renderSession.spriteBatch.start();}
 else
 {for(i=0,j=this.children.length;i<j;i++)
 {this.children[i]._renderWebGL(renderSession);}}};PIXI.DisplayObjectContainer.prototype._renderCanvas=function(renderSession)
 {if(this.visible===false||this.alpha===0)return;if(this._cacheAsBitmap)
 {this._renderCachedSprite(renderSession);return;}
  if(this._mask)
  {renderSession.maskManager.pushMask(this._mask,renderSession);}
  for(var i=0,j=this.children.length;i<j;i++)
  {var child=this.children[i];child._renderCanvas(renderSession);}
  if(this._mask)
  {renderSession.maskManager.popMask(renderSession);}};PIXI.Sprite=function(texture)
 {PIXI.DisplayObjectContainer.call(this);this.anchor=new PIXI.Point();this.texture=texture||PIXI.Texture.emptyTexture;this._width=0;this._height=0;this.tint=0xFFFFFF;this.blendMode=PIXI.blendModes.NORMAL;this.shader=null;if(this.texture.baseTexture.hasLoaded)
 {this.onTextureUpdate();}
 else
 {this.texture.on('update',this.onTextureUpdate.bind(this));}
  this.renderable=true;};PIXI.Sprite.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.Sprite.prototype.constructor=PIXI.Sprite;Object.defineProperty(PIXI.Sprite.prototype,'width',{get:function(){return this.scale.x*this.texture.frame.width;},set:function(value){this.scale.x=value/this.texture.frame.width;this._width=value;}});Object.defineProperty(PIXI.Sprite.prototype,'height',{get:function(){return this.scale.y*this.texture.frame.height;},set:function(value){this.scale.y=value/this.texture.frame.height;this._height=value;}});PIXI.Sprite.prototype.setTexture=function(texture)
 {this.texture=texture;this.cachedTint=0xFFFFFF;};PIXI.Sprite.prototype.onTextureUpdate=function()
 {if(this._width)this.scale.x=this._width/this.texture.frame.width;if(this._height)this.scale.y=this._height/this.texture.frame.height;};PIXI.Sprite.prototype.getBounds=function(matrix)
 {var width=this.texture.frame.width;var height=this.texture.frame.height;var w0=width*(1-this.anchor.x);var w1=width*-this.anchor.x;var h0=height*(1-this.anchor.y);var h1=height*-this.anchor.y;var worldTransform=matrix||this.worldTransform;var a=worldTransform.a;var b=worldTransform.b;var c=worldTransform.c;var d=worldTransform.d;var tx=worldTransform.tx;var ty=worldTransform.ty;var maxX=-Infinity;var maxY=-Infinity;var minX=Infinity;var minY=Infinity;if(b===0&&c===0)
 {if(a<0)a*=-1;if(d<0)d*=-1;minX=a*w1+tx;maxX=a*w0+tx;minY=d*h1+ty;maxY=d*h0+ty;}
 else
 {var x1=a*w1+c*h1+tx;var y1=d*h1+b*w1+ty;var x2=a*w0+c*h1+tx;var y2=d*h1+b*w0+ty;var x3=a*w0+c*h0+tx;var y3=d*h0+b*w0+ty;var x4=a*w1+c*h0+tx;var y4=d*h0+b*w1+ty;minX=x1<minX?x1:minX;minX=x2<minX?x2:minX;minX=x3<minX?x3:minX;minX=x4<minX?x4:minX;minY=y1<minY?y1:minY;minY=y2<minY?y2:minY;minY=y3<minY?y3:minY;minY=y4<minY?y4:minY;maxX=x1>maxX?x1:maxX;maxX=x2>maxX?x2:maxX;maxX=x3>maxX?x3:maxX;maxX=x4>maxX?x4:maxX;maxY=y1>maxY?y1:maxY;maxY=y2>maxY?y2:maxY;maxY=y3>maxY?y3:maxY;maxY=y4>maxY?y4:maxY;}
  var bounds=this._bounds;bounds.x=minX;bounds.width=maxX-minX;bounds.y=minY;bounds.height=maxY-minY;this._currentBounds=bounds;return bounds;};PIXI.Sprite.prototype._renderWebGL=function(renderSession)
 {if(!this.visible||this.alpha<=0)return;var i,j;if(this._mask||this._filters)
 {var spriteBatch=renderSession.spriteBatch;if(this._filters)
 {spriteBatch.flush();renderSession.filterManager.pushFilter(this._filterBlock);}
  if(this._mask)
  {spriteBatch.stop();renderSession.maskManager.pushMask(this.mask,renderSession);spriteBatch.start();}
  spriteBatch.render(this);for(i=0,j=this.children.length;i<j;i++)
 {this.children[i]._renderWebGL(renderSession);}
  spriteBatch.stop();if(this._mask)renderSession.maskManager.popMask(this._mask,renderSession);if(this._filters)renderSession.filterManager.popFilter();spriteBatch.start();}
 else
 {renderSession.spriteBatch.render(this);for(i=0,j=this.children.length;i<j;i++)
 {this.children[i]._renderWebGL(renderSession);}}};PIXI.Sprite.prototype._renderCanvas=function(renderSession)
 {if(this.visible===false||this.alpha===0||this.texture.crop.width<=0||this.texture.crop.height<=0)return;if(this.blendMode!==renderSession.currentBlendMode)
 {renderSession.currentBlendMode=this.blendMode;renderSession.context.globalCompositeOperation=PIXI.blendModesCanvas[renderSession.currentBlendMode];}
  if(this._mask)
  {renderSession.maskManager.pushMask(this._mask,renderSession);}
  if(this.texture.valid)
  {var resolution=this.texture.baseTexture.resolution/renderSession.resolution;renderSession.context.globalAlpha=this.worldAlpha;if(renderSession.smoothProperty&&renderSession.scaleMode!==this.texture.baseTexture.scaleMode)
  {renderSession.scaleMode=this.texture.baseTexture.scaleMode;renderSession.context[renderSession.smoothProperty]=(renderSession.scaleMode===PIXI.scaleModes.LINEAR);}
   var dx=(this.texture.trim)?this.texture.trim.x-this.anchor.x*this.texture.trim.width:this.anchor.x*-this.texture.frame.width;var dy=(this.texture.trim)?this.texture.trim.y-this.anchor.y*this.texture.trim.height:this.anchor.y*-this.texture.frame.height;if(renderSession.roundPixels)
  {renderSession.context.setTransform(this.worldTransform.a,this.worldTransform.b,this.worldTransform.c,this.worldTransform.d,(this.worldTransform.tx*renderSession.resolution)|0,(this.worldTransform.ty*renderSession.resolution)|0);dx=dx|0;dy=dy|0;}
  else
  {renderSession.context.setTransform(this.worldTransform.a,this.worldTransform.b,this.worldTransform.c,this.worldTransform.d,this.worldTransform.tx*renderSession.resolution,this.worldTransform.ty*renderSession.resolution);}
   if(this.tint!==0xFFFFFF)
   {if(this.cachedTint!==this.tint)
   {this.cachedTint=this.tint;this.tintedTexture=PIXI.CanvasTinter.getTintedTexture(this,this.tint);}
    renderSession.context.drawImage(this.tintedTexture,0,0,this.texture.crop.width,this.texture.crop.height,dx/resolution,dy/resolution,this.texture.crop.width/resolution,this.texture.crop.height/resolution);}
   else
   {renderSession.context.drawImage(this.texture.baseTexture.source,this.texture.crop.x,this.texture.crop.y,this.texture.crop.width,this.texture.crop.height,dx/resolution,dy/resolution,this.texture.crop.width/resolution,this.texture.crop.height/resolution);}}
  for(var i=0,j=this.children.length;i<j;i++)
  {this.children[i]._renderCanvas(renderSession);}
  if(this._mask)
  {renderSession.maskManager.popMask(renderSession);}};PIXI.Sprite.fromFrame=function(frameId)
 {var texture=PIXI.TextureCache[frameId];if(!texture)throw new Error('The frameId "'+frameId+'" does not exist in the texture cache'+this);return new PIXI.Sprite(texture);};PIXI.Sprite.fromImage=function(imageId,crossorigin,scaleMode)
 {var texture=PIXI.Texture.fromImage(imageId,crossorigin,scaleMode);return new PIXI.Sprite(texture);};PIXI.SpriteBatch=function(texture)
 {PIXI.DisplayObjectContainer.call(this);this.textureThing=texture;this.ready=false;};PIXI.SpriteBatch.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.SpriteBatch.prototype.constructor=PIXI.SpriteBatch;PIXI.SpriteBatch.prototype.initWebGL=function(gl)
 {this.fastSpriteBatch=new PIXI.WebGLFastSpriteBatch(gl);this.ready=true;};PIXI.SpriteBatch.prototype.updateTransform=function()
 {this.displayObjectUpdateTransform();};PIXI.SpriteBatch.prototype._renderWebGL=function(renderSession)
 {if(!this.visible||this.alpha<=0||!this.children.length)return;if(!this.ready)this.initWebGL(renderSession.gl);if(this.fastSpriteBatch.gl!==renderSession.gl)this.fastSpriteBatch.setContext(renderSession.gl);renderSession.spriteBatch.stop();renderSession.shaderManager.setShader(renderSession.shaderManager.fastShader);this.fastSpriteBatch.begin(this,renderSession);this.fastSpriteBatch.render(this);renderSession.spriteBatch.start();};PIXI.SpriteBatch.prototype._renderCanvas=function(renderSession)
 {if(!this.visible||this.alpha<=0||!this.children.length)return;var context=renderSession.context;context.globalAlpha=this.worldAlpha;this.displayObjectUpdateTransform();var transform=this.worldTransform;var isRotated=true;for(var i=0;i<this.children.length;i++){var child=this.children[i];if(!child.visible)continue;var texture=child.texture;var frame=texture.frame;context.globalAlpha=this.worldAlpha*child.alpha;if(child.rotation%(Math.PI*2)===0)
 {if(isRotated)
 {context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);isRotated=false;}
  context.drawImage(texture.baseTexture.source,frame.x,frame.y,frame.width,frame.height,((child.anchor.x)*(-frame.width*child.scale.x)+child.position.x+0.5)|0,((child.anchor.y)*(-frame.height*child.scale.y)+child.position.y+0.5)|0,frame.width*child.scale.x,frame.height*child.scale.y);}
 else
 {if(!isRotated)isRotated=true;child.displayObjectUpdateTransform();var childTransform=child.worldTransform;if(renderSession.roundPixels)
 {context.setTransform(childTransform.a,childTransform.b,childTransform.c,childTransform.d,childTransform.tx|0,childTransform.ty|0);}
 else
 {context.setTransform(childTransform.a,childTransform.b,childTransform.c,childTransform.d,childTransform.tx,childTransform.ty);}
  context.drawImage(texture.baseTexture.source,frame.x,frame.y,frame.width,frame.height,((child.anchor.x)*(-frame.width)+0.5)|0,((child.anchor.y)*(-frame.height)+0.5)|0,frame.width,frame.height);}}};PIXI.MovieClip=function(textures)
 {PIXI.Sprite.call(this,textures[0]);this.textures=textures;this.animationSpeed=1;this.loop=true;this.onComplete=null;this.currentFrame=0;this.playing=false;};PIXI.MovieClip.prototype=Object.create(PIXI.Sprite.prototype);PIXI.MovieClip.prototype.constructor=PIXI.MovieClip;Object.defineProperty(PIXI.MovieClip.prototype,'totalFrames',{get:function(){return this.textures.length;}});PIXI.MovieClip.prototype.stop=function()
 {this.playing=false;};PIXI.MovieClip.prototype.play=function()
 {this.playing=true;};PIXI.MovieClip.prototype.gotoAndStop=function(frameNumber)
 {this.playing=false;this.currentFrame=frameNumber;var round=(this.currentFrame+0.5)|0;this.setTexture(this.textures[round%this.textures.length]);};PIXI.MovieClip.prototype.gotoAndPlay=function(frameNumber)
 {this.currentFrame=frameNumber;this.playing=true;};PIXI.MovieClip.prototype.updateTransform=function()
 {this.displayObjectContainerUpdateTransform();if(!this.playing)return;this.currentFrame+=this.animationSpeed;var round=(this.currentFrame+0.5)|0;this.currentFrame=this.currentFrame%this.textures.length;if(this.loop||round<this.textures.length)
 {this.setTexture(this.textures[round%this.textures.length]);}
 else if(round>=this.textures.length)
 {this.gotoAndStop(this.textures.length-1);if(this.onComplete)
 {this.onComplete();}}};PIXI.MovieClip.fromFrames=function(frames)
 {var textures=[];for(var i=0;i<frames.length;i++)
 {textures.push(new PIXI.Texture.fromFrame(frames[i]));}
  return new PIXI.MovieClip(textures);};PIXI.MovieClip.fromImages=function(images)
 {var textures=[];for(var i=0;i<images.length;i++)
 {textures.push(new PIXI.Texture.fromImage(images[i]));}
  return new PIXI.MovieClip(textures);};PIXI.FilterBlock=function()
 {this.visible=true;this.renderable=true;};PIXI.FilterBlock.prototype.constructor=PIXI.FilterBlock;PIXI.Text=function(text,style)
 {this.canvas=document.createElement('canvas');this.context=this.canvas.getContext('2d');this.resolution=1;PIXI.Sprite.call(this,PIXI.Texture.fromCanvas(this.canvas));this.setText(text);this.setStyle(style);};PIXI.Text.prototype=Object.create(PIXI.Sprite.prototype);PIXI.Text.prototype.constructor=PIXI.Text;Object.defineProperty(PIXI.Text.prototype,'width',{get:function(){if(this.dirty)
 {this.updateText();this.dirty=false;}
  return this.scale.x*this.texture.frame.width;},set:function(value){this.scale.x=value/this.texture.frame.width;this._width=value;}});Object.defineProperty(PIXI.Text.prototype,'height',{get:function(){if(this.dirty)
 {this.updateText();this.dirty=false;}
  return this.scale.y*this.texture.frame.height;},set:function(value){this.scale.y=value/this.texture.frame.height;this._height=value;}});PIXI.Text.prototype.setStyle=function(style)
 {style=style||{};style.font=style.font||'bold 20pt Arial';style.fill=style.fill||'black';style.align=style.align||'left';style.stroke=style.stroke||'black';style.strokeThickness=style.strokeThickness||0;style.wordWrap=style.wordWrap||false;style.wordWrapWidth=style.wordWrapWidth||100;style.dropShadow=style.dropShadow||false;style.dropShadowAngle=style.dropShadowAngle||Math.PI/6;style.dropShadowDistance=style.dropShadowDistance||4;style.dropShadowColor=style.dropShadowColor||'black';this.style=style;this.dirty=true;};PIXI.Text.prototype.setText=function(text)
 {this.text=text.toString()||' ';this.dirty=true;};PIXI.Text.prototype.updateText=function()
 {this.texture.baseTexture.resolution=this.resolution;this.context.font=this.style.font;var outputText=this.text;if(this.style.wordWrap)outputText=this.wordWrap(this.text);var lines=outputText.split(/(?:\r\n|\r|\n)/);var lineWidths=[];var maxLineWidth=0;var fontProperties=this.determineFontProperties(this.style.font);for(var i=0;i<lines.length;i++)
 {var lineWidth=this.context.measureText(lines[i]).width;lineWidths[i]=lineWidth;maxLineWidth=Math.max(maxLineWidth,lineWidth);}
  var width=maxLineWidth+this.style.strokeThickness;if(this.style.dropShadow)width+=this.style.dropShadowDistance;this.canvas.width=(width+this.context.lineWidth)*this.resolution;var lineHeight=fontProperties.fontSize+this.style.strokeThickness;var height=lineHeight*lines.length;if(this.style.dropShadow)height+=this.style.dropShadowDistance;this.canvas.height=height*this.resolution;this.context.scale(this.resolution,this.resolution);if(navigator.isCocoonJS)this.context.clearRect(0,0,this.canvas.width,this.canvas.height);this.context.font=this.style.font;this.context.strokeStyle=this.style.stroke;this.context.lineWidth=this.style.strokeThickness;this.context.textBaseline='alphabetic';var linePositionX;var linePositionY;if(this.style.dropShadow)
 {this.context.fillStyle=this.style.dropShadowColor;var xShadowOffset=Math.sin(this.style.dropShadowAngle)*this.style.dropShadowDistance;var yShadowOffset=Math.cos(this.style.dropShadowAngle)*this.style.dropShadowDistance;for(i=0;i<lines.length;i++)
 {linePositionX=this.style.strokeThickness/2;linePositionY=(this.style.strokeThickness/2+i*lineHeight)+fontProperties.ascent;if(this.style.align==='right')
 {linePositionX+=maxLineWidth-lineWidths[i];}
 else if(this.style.align==='center')
 {linePositionX+=(maxLineWidth-lineWidths[i])/2;}
  if(this.style.fill)
  {this.context.fillText(lines[i],linePositionX+xShadowOffset,linePositionY+yShadowOffset);}}}
  this.context.fillStyle=this.style.fill;for(i=0;i<lines.length;i++)
 {linePositionX=this.style.strokeThickness/2;linePositionY=(this.style.strokeThickness/2+i*lineHeight)+fontProperties.ascent;if(this.style.align==='right')
 {linePositionX+=maxLineWidth-lineWidths[i];}
 else if(this.style.align==='center')
 {linePositionX+=(maxLineWidth-lineWidths[i])/2;}
  if(this.style.stroke&&this.style.strokeThickness)
  {this.context.strokeText(lines[i],linePositionX,linePositionY);}
  if(this.style.fill)
  {this.context.fillText(lines[i],linePositionX,linePositionY);}}
  this.updateTexture();};PIXI.Text.prototype.updateTexture=function()
 {this.texture.baseTexture.width=this.canvas.width;this.texture.baseTexture.height=this.canvas.height;this.texture.crop.width=this.texture.frame.width=this.canvas.width;this.texture.crop.height=this.texture.frame.height=this.canvas.height;this._width=this.canvas.width;this._height=this.canvas.height;this.texture.baseTexture.dirty();};PIXI.Text.prototype._renderWebGL=function(renderSession)
 {if(this.dirty)
 {this.resolution=renderSession.resolution;this.updateText();this.dirty=false;}
  PIXI.Sprite.prototype._renderWebGL.call(this,renderSession);};PIXI.Text.prototype._renderCanvas=function(renderSession)
 {if(this.dirty)
 {this.resolution=renderSession.resolution;this.updateText();this.dirty=false;}
  PIXI.Sprite.prototype._renderCanvas.call(this,renderSession);};PIXI.Text.prototype.determineFontProperties=function(fontStyle)
 {var properties=PIXI.Text.fontPropertiesCache[fontStyle];if(!properties)
 {properties={};var canvas=PIXI.Text.fontPropertiesCanvas;var context=PIXI.Text.fontPropertiesContext;context.font=fontStyle;var width=Math.ceil(context.measureText('|Mq').width);var baseline=Math.ceil(context.measureText('M').width);var height=2*baseline;baseline=baseline*1.4|0;canvas.width=width;canvas.height=height;context.fillStyle='#f00';context.fillRect(0,0,width,height);context.font=fontStyle;context.textBaseline='alphabetic';context.fillStyle='#000';context.fillText('|MÉq',0,baseline);var imagedata=context.getImageData(0,0,width,height).data;var pixels=imagedata.length;var line=width*4;var i,j;var idx=0;var stop=false;for(i=0;i<baseline;i++)
 {for(j=0;j<line;j+=4)
 {if(imagedata[idx+j]!==255)
 {stop=true;break;}}
  if(!stop)
  {idx+=line;}
  else
  {break;}}
  properties.ascent=baseline-i;idx=pixels-line;stop=false;for(i=height;i>baseline;i--)
 {for(j=0;j<line;j+=4)
 {if(imagedata[idx+j]!==255)
 {stop=true;break;}}
  if(!stop)
  {idx-=line;}
  else
  {break;}}
  properties.descent=i-baseline;properties.descent+=6;properties.fontSize=properties.ascent+properties.descent;PIXI.Text.fontPropertiesCache[fontStyle]=properties;}
  return properties;};PIXI.Text.prototype.wordWrap=function(text)
 {var result='';var lines=text.split('\n');for(var i=0;i<lines.length;i++)
 {var spaceLeft=this.style.wordWrapWidth;var words=lines[i].split(' ');for(var j=0;j<words.length;j++)
 {var wordWidth=this.context.measureText(words[j]).width;var wordWidthWithSpace=wordWidth+this.context.measureText(' ').width;if(j===0||wordWidthWithSpace>spaceLeft)
 {if(j>0)
 {result+='\n';}
  result+=words[j];spaceLeft=this.style.wordWrapWidth-wordWidth;}
 else
 {spaceLeft-=wordWidthWithSpace;result+=' '+words[j];}}
  if(i<lines.length-1)
  {result+='\n';}}
  return result;};PIXI.Text.prototype.getBounds=function(matrix)
 {if(this.dirty)
 {this.updateText();this.dirty=false;}
  return PIXI.Sprite.prototype.getBounds.call(this,matrix);};PIXI.Text.prototype.destroy=function(destroyBaseTexture)
 {this.context=null;this.canvas=null;this.texture.destroy(destroyBaseTexture===undefined?true:destroyBaseTexture);};PIXI.Text.fontPropertiesCache={};PIXI.Text.fontPropertiesCanvas=document.createElement('canvas');PIXI.Text.fontPropertiesContext=PIXI.Text.fontPropertiesCanvas.getContext('2d');PIXI.BitmapText=function(text,style)
 {PIXI.DisplayObjectContainer.call(this);this.textWidth=0;this.textHeight=0;this._pool=[];this.setText(text);this.setStyle(style);this.updateText();this.dirty=false;};PIXI.BitmapText.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.BitmapText.prototype.constructor=PIXI.BitmapText;PIXI.BitmapText.prototype.setText=function(text)
 {this.text=text||' ';this.dirty=true;};PIXI.BitmapText.prototype.setStyle=function(style)
 {style=style||{};style.align=style.align||'left';this.style=style;var font=style.font.split(' ');this.fontName=font[font.length-1];this.fontSize=font.length>=2?parseInt(font[font.length-2],10):PIXI.BitmapText.fonts[this.fontName].size;this.dirty=true;this.tint=style.tint;};PIXI.BitmapText.prototype.updateText=function()
 {var data=PIXI.BitmapText.fonts[this.fontName];var pos=new PIXI.Point();var prevCharCode=null;var chars=[];var maxLineWidth=0;var lineWidths=[];var line=0;var scale=this.fontSize/data.size;for(var i=0;i<this.text.length;i++)
 {var charCode=this.text.charCodeAt(i);if(/(?:\r\n|\r|\n)/.test(this.text.charAt(i)))
 {lineWidths.push(pos.x);maxLineWidth=Math.max(maxLineWidth,pos.x);line++;pos.x=0;pos.y+=data.lineHeight;prevCharCode=null;continue;}
  var charData=data.chars[charCode];if(!charData)continue;if(prevCharCode&&charData.kerning[prevCharCode])
 {pos.x+=charData.kerning[prevCharCode];}
  chars.push({texture:charData.texture,line:line,charCode:charCode,position:new PIXI.Point(pos.x+charData.xOffset,pos.y+charData.yOffset)});pos.x+=charData.xAdvance;prevCharCode=charCode;}
  lineWidths.push(pos.x);maxLineWidth=Math.max(maxLineWidth,pos.x);var lineAlignOffsets=[];for(i=0;i<=line;i++)
 {var alignOffset=0;if(this.style.align==='right')
 {alignOffset=maxLineWidth-lineWidths[i];}
 else if(this.style.align==='center')
 {alignOffset=(maxLineWidth-lineWidths[i])/2;}
  lineAlignOffsets.push(alignOffset);}
  var lenChildren=this.children.length;var lenChars=chars.length;var tint=this.tint||0xFFFFFF;for(i=0;i<lenChars;i++)
 {var c=i<lenChildren?this.children[i]:this._pool.pop();if(c)c.setTexture(chars[i].texture);else c=new PIXI.Sprite(chars[i].texture);c.position.x=(chars[i].position.x+lineAlignOffsets[chars[i].line])*scale;c.position.y=chars[i].position.y*scale;c.scale.x=c.scale.y=scale;c.tint=tint;if(!c.parent)this.addChild(c);}
  while(this.children.length>lenChars)
  {var child=this.getChildAt(this.children.length-1);this._pool.push(child);this.removeChild(child);}
  this.textWidth=maxLineWidth*scale;this.textHeight=(pos.y+data.lineHeight)*scale;};PIXI.BitmapText.prototype.updateTransform=function()
 {if(this.dirty)
 {this.updateText();this.dirty=false;}
  PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);};PIXI.BitmapText.fonts={};PIXI.InteractionData=function()
 {this.global=new PIXI.Point();this.target=null;this.originalEvent=null;};PIXI.InteractionData.prototype.getLocalPosition=function(displayObject,point)
 {var worldTransform=displayObject.worldTransform;var global=this.global;var a00=worldTransform.a,a01=worldTransform.c,a02=worldTransform.tx,a10=worldTransform.b,a11=worldTransform.d,a12=worldTransform.ty,id=1/(a00*a11+a01*-a10);point=point||new PIXI.Point();point.x=a11*id*global.x+-a01*id*global.y+(a12*a01-a02*a11)*id;point.y=a00*id*global.y+-a10*id*global.x+(-a12*a00+a02*a10)*id;return point;};PIXI.InteractionData.prototype.constructor=PIXI.InteractionData;PIXI.InteractionManager=function(stage)
 {this.stage=stage;this.mouse=new PIXI.InteractionData();this.touches={};this.tempPoint=new PIXI.Point();this.mouseoverEnabled=true;this.pool=[];this.interactiveItems=[];this.interactionDOMElement=null;this.onMouseMove=this.onMouseMove.bind(this);this.onMouseDown=this.onMouseDown.bind(this);this.onMouseOut=this.onMouseOut.bind(this);this.onMouseUp=this.onMouseUp.bind(this);this.onTouchStart=this.onTouchStart.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this);this.onTouchCancel=this.onTouchCancel.bind(this);this.onTouchMove=this.onTouchMove.bind(this);this.last=0;this.currentCursorStyle='inherit';this.mouseOut=false;this.resolution=1;this._tempPoint=new PIXI.Point();};PIXI.InteractionManager.prototype.constructor=PIXI.InteractionManager;PIXI.InteractionManager.prototype.collectInteractiveSprite=function(displayObject,iParent)
 {var children=displayObject.children;var length=children.length;for(var i=length-1;i>=0;i--)
 {var child=children[i];if(child._interactive)
 {iParent.interactiveChildren=true;this.interactiveItems.push(child);if(child.children.length>0){this.collectInteractiveSprite(child,child);}}
 else
 {child.__iParent=null;if(child.children.length>0)
 {this.collectInteractiveSprite(child,iParent);}}}};PIXI.InteractionManager.prototype.setTarget=function(target)
 {this.target=target;this.resolution=target.resolution;if(this.interactionDOMElement!==null)return;this.setTargetDomElement(target.view);};PIXI.InteractionManager.prototype.setTargetDomElement=function(domElement)
 {this.removeEvents();if(window.navigator.msPointerEnabled)
 {domElement.style['-ms-content-zooming']='none';domElement.style['-ms-touch-action']='none';}
  this.interactionDOMElement=domElement;domElement.addEventListener('mousemove',this.onMouseMove,true);domElement.addEventListener('mousedown',this.onMouseDown,true);domElement.addEventListener('mouseout',this.onMouseOut,true);domElement.addEventListener('touchstart',this.onTouchStart,true);domElement.addEventListener('touchend',this.onTouchEnd,true);domElement.addEventListener('touchleave',this.onTouchCancel,true);domElement.addEventListener('touchcancel',this.onTouchCancel,true);domElement.addEventListener('touchmove',this.onTouchMove,true);window.addEventListener('mouseup',this.onMouseUp,true);};PIXI.InteractionManager.prototype.removeEvents=function()
 {if(!this.interactionDOMElement)return;this.interactionDOMElement.style['-ms-content-zooming']='';this.interactionDOMElement.style['-ms-touch-action']='';this.interactionDOMElement.removeEventListener('mousemove',this.onMouseMove,true);this.interactionDOMElement.removeEventListener('mousedown',this.onMouseDown,true);this.interactionDOMElement.removeEventListener('mouseout',this.onMouseOut,true);this.interactionDOMElement.removeEventListener('touchstart',this.onTouchStart,true);this.interactionDOMElement.removeEventListener('touchend',this.onTouchEnd,true);this.interactionDOMElement.removeEventListener('touchleave',this.onTouchCancel,true);this.interactionDOMElement.removeEventListener('touchcancel',this.onTouchCancel,true);this.interactionDOMElement.removeEventListener('touchmove',this.onTouchMove,true);this.interactionDOMElement=null;window.removeEventListener('mouseup',this.onMouseUp,true);};PIXI.InteractionManager.prototype.update=function()
 {if(!this.target)return;var now=Date.now();var diff=now-this.last;diff=(diff*PIXI.INTERACTION_FREQUENCY)/1000;if(diff<1)return;this.last=now;var i=0;if(this.dirty)
 {this.rebuildInteractiveGraph();}
  var length=this.interactiveItems.length;var cursor='inherit';var over=false;for(i=0;i<length;i++)
 {var item=this.interactiveItems[i];item.__hit=this.hitTest(item,this.mouse);this.mouse.target=item;if(item.__hit&&!over)
 {if(item.buttonMode)cursor=item.defaultCursor;if(!item.interactiveChildren)
 {over=true;}
  if(!item.__isOver)
  {if(item.mouseover)
  {item.mouseover(this.mouse);}
   item.__isOver=true;}}
 else
 {if(item.__isOver)
 {if(item.mouseout)
 {item.mouseout(this.mouse);}
  item.__isOver=false;}}}
  if(this.currentCursorStyle!==cursor)
  {this.currentCursorStyle=cursor;this.interactionDOMElement.style.cursor=cursor;}};PIXI.InteractionManager.prototype.rebuildInteractiveGraph=function()
 {this.dirty=false;var len=this.interactiveItems.length;for(var i=0;i<len;i++){this.interactiveItems[i].interactiveChildren=false;}
  this.interactiveItems=[];if(this.stage.interactive)
 {this.interactiveItems.push(this.stage);}
  this.collectInteractiveSprite(this.stage,this.stage);};PIXI.InteractionManager.prototype.onMouseMove=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  this.mouse.originalEvent=event;var rect=this.interactionDOMElement.getBoundingClientRect();this.mouse.global.x=(event.clientX-rect.left)*(this.target.width/rect.width)/this.resolution;this.mouse.global.y=(event.clientY-rect.top)*(this.target.height/rect.height)/this.resolution;var length=this.interactiveItems.length;for(var i=0;i<length;i++)
 {var item=this.interactiveItems[i];if(item.mousemove)
 {item.mousemove(this.mouse);}}};PIXI.InteractionManager.prototype.onMouseDown=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  this.mouse.originalEvent=event;if(PIXI.AUTO_PREVENT_DEFAULT)
 {this.mouse.originalEvent.preventDefault();}
  var length=this.interactiveItems.length;var e=this.mouse.originalEvent;var isRightButton=e.button===2||e.which===3;var downFunction=isRightButton?'rightdown':'mousedown';var clickFunction=isRightButton?'rightclick':'click';var buttonIsDown=isRightButton?'__rightIsDown':'__mouseIsDown';var isDown=isRightButton?'__isRightDown':'__isDown';for(var i=0;i<length;i++)
 {var item=this.interactiveItems[i];if(item[downFunction]||item[clickFunction])
 {item[buttonIsDown]=true;item.__hit=this.hitTest(item,this.mouse);if(item.__hit)
 {if(item[downFunction])
 {item[downFunction](this.mouse);}
  item[isDown]=true;if(!item.interactiveChildren)break;}}}};PIXI.InteractionManager.prototype.onMouseOut=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  this.mouse.originalEvent=event;var length=this.interactiveItems.length;this.interactionDOMElement.style.cursor='inherit';for(var i=0;i<length;i++)
 {var item=this.interactiveItems[i];if(item.__isOver)
 {this.mouse.target=item;if(item.mouseout)
 {item.mouseout(this.mouse);}
  item.__isOver=false;}}
  this.mouseOut=true;this.mouse.global.x=-10000;this.mouse.global.y=-10000;};PIXI.InteractionManager.prototype.onMouseUp=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  this.mouse.originalEvent=event;var length=this.interactiveItems.length;var up=false;var e=this.mouse.originalEvent;var isRightButton=e.button===2||e.which===3;var upFunction=isRightButton?'rightup':'mouseup';var clickFunction=isRightButton?'rightclick':'click';var upOutsideFunction=isRightButton?'rightupoutside':'mouseupoutside';var isDown=isRightButton?'__isRightDown':'__isDown';for(var i=0;i<length;i++)
 {var item=this.interactiveItems[i];if(item[clickFunction]||item[upFunction]||item[upOutsideFunction])
 {item.__hit=this.hitTest(item,this.mouse);if(item.__hit&&!up)
 {if(item[upFunction])
 {item[upFunction](this.mouse);}
  if(item[isDown])
  {if(item[clickFunction])
  {item[clickFunction](this.mouse);}}
  if(!item.interactiveChildren)
  {up=true;}}
 else
 {if(item[isDown])
 {if(item[upOutsideFunction])item[upOutsideFunction](this.mouse);}}
  item[isDown]=false;}}};PIXI.InteractionManager.prototype.hitTest=function(item,interactionData)
 {var global=interactionData.global;if(!item.worldVisible)
 {return false;}
  item.worldTransform.applyInverse(global,this._tempPoint);var x=this._tempPoint.x,y=this._tempPoint.y,i;interactionData.target=item;if(item.hitArea&&item.hitArea.contains)
 {return item.hitArea.contains(x,y);}
 else if(item instanceof PIXI.Sprite)
 {var width=item.texture.frame.width;var height=item.texture.frame.height;var x1=-width*item.anchor.x;var y1;if(x>x1&&x<x1+width)
 {y1=-height*item.anchor.y;if(y>y1&&y<y1+height)
 {return true;}}}
 else if(item instanceof PIXI.Graphics)
 {var graphicsData=item.graphicsData;for(i=0;i<graphicsData.length;i++)
 {var data=graphicsData[i];if(!data.fill)continue;if(data.shape)
 {if(data.shape.contains(x,y))
 {return true;}}}}
  var length=item.children.length;for(i=0;i<length;i++)
 {var tempItem=item.children[i];var hit=this.hitTest(tempItem,interactionData);if(hit)
 {interactionData.target=item;return true;}}
  return false;};PIXI.InteractionManager.prototype.onTouchMove=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  var rect=this.interactionDOMElement.getBoundingClientRect();var changedTouches=event.changedTouches;var touchData;var i=0;for(i=0;i<changedTouches.length;i++)
 {var touchEvent=changedTouches[i];touchData=this.touches[touchEvent.identifier];touchData.originalEvent=event;touchData.global.x=((touchEvent.clientX-rect.left)*(this.target.width/rect.width))/this.resolution;touchData.global.y=((touchEvent.clientY-rect.top)*(this.target.height/rect.height))/this.resolution;if(navigator.isCocoonJS&&!rect.left&&!rect.top&&!event.target.style.width&&!event.target.style.height)
 {touchData.global.x=touchEvent.clientX;touchData.global.y=touchEvent.clientY;}
  for(var j=0;j<this.interactiveItems.length;j++)
  {var item=this.interactiveItems[j];if(item.touchmove&&item.__touchData&&item.__touchData[touchEvent.identifier])
  {item.touchmove(touchData);}}}};PIXI.InteractionManager.prototype.onTouchStart=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  var rect=this.interactionDOMElement.getBoundingClientRect();if(PIXI.AUTO_PREVENT_DEFAULT)
 {event.preventDefault();}
  var changedTouches=event.changedTouches;for(var i=0;i<changedTouches.length;i++)
 {var touchEvent=changedTouches[i];var touchData=this.pool.pop();if(!touchData)
 {touchData=new PIXI.InteractionData();}
  touchData.originalEvent=event;this.touches[touchEvent.identifier]=touchData;touchData.global.x=((touchEvent.clientX-rect.left)*(this.target.width/rect.width))/this.resolution;touchData.global.y=((touchEvent.clientY-rect.top)*(this.target.height/rect.height))/this.resolution;if(navigator.isCocoonJS&&!rect.left&&!rect.top&&!event.target.style.width&&!event.target.style.height)
 {touchData.global.x=touchEvent.clientX;touchData.global.y=touchEvent.clientY;}
  var length=this.interactiveItems.length;for(var j=0;j<length;j++)
 {var item=this.interactiveItems[j];if(item.touchstart||item.tap)
 {item.__hit=this.hitTest(item,touchData);if(item.__hit)
 {if(item.touchstart)item.touchstart(touchData);item.__isDown=true;item.__touchData=item.__touchData||{};item.__touchData[touchEvent.identifier]=touchData;if(!item.interactiveChildren)break;}}}}};PIXI.InteractionManager.prototype.onTouchEnd=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  var rect=this.interactionDOMElement.getBoundingClientRect();var changedTouches=event.changedTouches;for(var i=0;i<changedTouches.length;i++)
 {var touchEvent=changedTouches[i];var touchData=this.touches[touchEvent.identifier];var up=false;touchData.global.x=((touchEvent.clientX-rect.left)*(this.target.width/rect.width))/this.resolution;touchData.global.y=((touchEvent.clientY-rect.top)*(this.target.height/rect.height))/this.resolution;if(navigator.isCocoonJS&&!rect.left&&!rect.top&&!event.target.style.width&&!event.target.style.height)
 {touchData.global.x=touchEvent.clientX;touchData.global.y=touchEvent.clientY;}
  var length=this.interactiveItems.length;for(var j=0;j<length;j++)
 {var item=this.interactiveItems[j];if(item.__touchData&&item.__touchData[touchEvent.identifier])
 {item.__hit=this.hitTest(item,item.__touchData[touchEvent.identifier]);touchData.originalEvent=event;if(item.touchend||item.tap)
 {if(item.__hit&&!up)
 {if(item.touchend)
 {item.touchend(touchData);}
  if(item.__isDown&&item.tap)
  {item.tap(touchData);}
  if(!item.interactiveChildren)
  {up=true;}}
 else
 {if(item.__isDown&&item.touchendoutside)
 {item.touchendoutside(touchData);}}
  item.__isDown=false;}
  item.__touchData[touchEvent.identifier]=null;}}
  this.pool.push(touchData);this.touches[touchEvent.identifier]=null;}};PIXI.InteractionManager.prototype.onTouchCancel=function(event)
 {if(this.dirty)
 {this.rebuildInteractiveGraph();}
  var rect=this.interactionDOMElement.getBoundingClientRect();var changedTouches=event.changedTouches;for(var i=0;i<changedTouches.length;i++)
 {var touchEvent=changedTouches[i];var touchData=this.touches[touchEvent.identifier];var up=false;touchData.global.x=((touchEvent.clientX-rect.left)*(this.target.width/rect.width))/this.resolution;touchData.global.y=((touchEvent.clientY-rect.top)*(this.target.height/rect.height))/this.resolution;if(navigator.isCocoonJS&&!rect.left&&!rect.top&&!event.target.style.width&&!event.target.style.height)
 {touchData.global.x=touchEvent.clientX;touchData.global.y=touchEvent.clientY;}
  var length=this.interactiveItems.length;for(var j=0;j<length;j++)
 {var item=this.interactiveItems[j];if(item.__touchData&&item.__touchData[touchEvent.identifier])
 {item.__hit=this.hitTest(item,item.__touchData[touchEvent.identifier]);touchData.originalEvent=event;if(item.touchcancel&&!up)
 {item.touchcancel(touchData);if(!item.interactiveChildren)
 {up=true;}}
  item.__isDown=false;item.__touchData[touchEvent.identifier]=null;}}
  this.pool.push(touchData);this.touches[touchEvent.identifier]=null;}};PIXI.Stage=function(backgroundColor)
 {PIXI.DisplayObjectContainer.call(this);this.worldTransform=new PIXI.Matrix();this.interactive=true;this.interactionManager=new PIXI.InteractionManager(this);this.dirty=true;this.stage=this;this.stage.hitArea=new PIXI.Rectangle(0,0,100000,100000);this.setBackgroundColor(backgroundColor);};PIXI.Stage.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.Stage.prototype.constructor=PIXI.Stage;PIXI.Stage.prototype.setInteractionDelegate=function(domElement)
 {this.interactionManager.setTargetDomElement(domElement);};PIXI.Stage.prototype.updateTransform=function()
 {this.worldAlpha=1;for(var i=0,j=this.children.length;i<j;i++)
 {this.children[i].updateTransform();}
  if(this.dirty)
  {this.dirty=false;this.interactionManager.dirty=true;}
  if(this.interactive)this.interactionManager.update();};PIXI.Stage.prototype.setBackgroundColor=function(backgroundColor)
 {this.backgroundColor=backgroundColor||0x000000;this.backgroundColorSplit=PIXI.hex2rgb(this.backgroundColor);var hex=this.backgroundColor.toString(16);hex='000000'.substr(0,6-hex.length)+hex;this.backgroundColorString='#'+hex;};PIXI.Stage.prototype.getMousePosition=function()
 {return this.interactionManager.mouse.global;};(function(window){var lastTime=0;var vendors=['ms','moz','webkit','o'];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;++x){window.requestAnimationFrame=window[vendors[x]+'RequestAnimationFrame'];window.cancelAnimationFrame=window[vendors[x]+'CancelAnimationFrame']||window[vendors[x]+'CancelRequestAnimationFrame'];}
  if(!window.requestAnimationFrame){window.requestAnimationFrame=function(callback){var currTime=new Date().getTime();var timeToCall=Math.max(0,16-(currTime-lastTime));var id=window.setTimeout(function(){callback(currTime+timeToCall);},timeToCall);lastTime=currTime+timeToCall;return id;};}
  if(!window.cancelAnimationFrame){window.cancelAnimationFrame=function(id){clearTimeout(id);};}
  window.requestAnimFrame=window.requestAnimationFrame;})(this);PIXI.hex2rgb=function(hex){return[(hex>>16&0xFF)/255,(hex>>8&0xFF)/255,(hex&0xFF)/255];};PIXI.rgb2hex=function(rgb){return((rgb[0]*255<<16)+(rgb[1]*255<<8)+rgb[2]*255);};if(typeof Function.prototype.bind!=='function'){Function.prototype.bind=(function(){return function(thisArg){var target=this,i=arguments.length-1,boundArgs=[];if(i>0)
 {boundArgs.length=i;while(i--)boundArgs[i]=arguments[i+1];}
  if(typeof target!=='function')throw new TypeError();function bound(){var i=arguments.length,args=new Array(i);while(i--)args[i]=arguments[i];args=boundArgs.concat(args);return target.apply(this instanceof bound?this:thisArg,args);}
  bound.prototype=(function F(proto){if(proto)F.prototype=proto;if(!(this instanceof F))return new F();})(target.prototype);return bound;};})();}
 PIXI.AjaxRequest=function()
 {var activexmodes=['Msxml2.XMLHTTP.6.0','Msxml2.XMLHTTP.3.0','Microsoft.XMLHTTP'];if(window.ActiveXObject)
 {for(var i=0;i<activexmodes.length;i++)
 {try{return new window.ActiveXObject(activexmodes[i]);}
 catch(e){}}}
 else if(window.XMLHttpRequest)
 {return new window.XMLHttpRequest();}
 else
 {return false;}};PIXI.canUseNewCanvasBlendModes=function()
 {if(typeof document==='undefined')return false;var canvas=document.createElement('canvas');canvas.width=1;canvas.height=1;var context=canvas.getContext('2d');context.fillStyle='#000';context.fillRect(0,0,1,1);context.globalCompositeOperation='multiply';context.fillStyle='#fff';context.fillRect(0,0,1,1);return context.getImageData(0,0,1,1).data[0]===0;};PIXI.getNextPowerOfTwo=function(number)
 {if(number>0&&(number&(number-1))===0)
  return number;else
 {var result=1;while(result<number)result<<=1;return result;}};PIXI.isPowerOfTwo=function(width,height)
 {return(width>0&&(width&(width-1))===0&&height>0&&(height&(height-1))===0);};PIXI.EventTarget={call:function callCompat(obj){if(obj){obj=obj.prototype||obj;PIXI.EventTarget.mixin(obj);}},mixin:function mixin(obj){obj.listeners=function listeners(eventName){this._listeners=this._listeners||{};return this._listeners[eventName]?this._listeners[eventName].slice():[];};obj.emit=obj.dispatchEvent=function emit(eventName,data){this._listeners=this._listeners||{};if(typeof eventName==='object'){data=eventName;eventName=eventName.type;}
  if(!data||data.__isEventObject!==true){data=new PIXI.Event(this,eventName,data);}
  if(this._listeners&&this._listeners[eventName]){var listeners=this._listeners[eventName].slice(0),length=listeners.length,fn=listeners[0],i;for(i=0;i<length;fn=listeners[++i]){fn.call(this,data);if(data.stoppedImmediate){return this;}}
   if(data.stopped){return this;}}
  if(this.parent&&this.parent.emit){this.parent.emit.call(this.parent,eventName,data);}
  return this;};obj.on=obj.addEventListener=function on(eventName,fn){this._listeners=this._listeners||{};(this._listeners[eventName]=this._listeners[eventName]||[]).push(fn);return this;};obj.once=function once(eventName,fn){this._listeners=this._listeners||{};var self=this;function onceHandlerWrapper(){fn.apply(self.off(eventName,onceHandlerWrapper),arguments);}
  onceHandlerWrapper._originalHandler=fn;return this.on(eventName,onceHandlerWrapper);};obj.off=obj.removeEventListener=function off(eventName,fn){this._listeners=this._listeners||{};if(!this._listeners[eventName])
  return this;var list=this._listeners[eventName],i=fn?list.length:0;while(i-->0){if(list[i]===fn||list[i]._originalHandler===fn){list.splice(i,1);}}
  if(list.length===0){delete this._listeners[eventName];}
  return this;};obj.removeAllListeners=function removeAllListeners(eventName){this._listeners=this._listeners||{};if(!this._listeners[eventName])
  return this;delete this._listeners[eventName];return this;};}};PIXI.Event=function(target,name,data){this.__isEventObject=true;this.stopped=false;this.stoppedImmediate=false;this.target=target;this.type=name;this.data=data;this.content=data;this.timeStamp=Date.now();};PIXI.Event.prototype.stopPropagation=function stopPropagation(){this.stopped=true;};PIXI.Event.prototype.stopImmediatePropagation=function stopImmediatePropagation(){this.stoppedImmediate=true;};PIXI.autoDetectRenderer=function(width,height,options)
 {if(!width)width=800;if(!height)height=600;var webgl=(function(){try{var canvas=document.createElement('canvas');return!!window.WebGLRenderingContext&&(canvas.getContext('webgl')||canvas.getContext('experimental-webgl'));}catch(e){return false;}})();if(webgl)
 {return new PIXI.WebGLRenderer(width,height,options);}
  return new PIXI.CanvasRenderer(width,height,options);};PIXI.autoDetectRecommendedRenderer=function(width,height,options)
 {if(!width)width=800;if(!height)height=600;var webgl=(function(){try{var canvas=document.createElement('canvas');return!!window.WebGLRenderingContext&&(canvas.getContext('webgl')||canvas.getContext('experimental-webgl'));}catch(e){return false;}})();var isAndroid=/Android/i.test(navigator.userAgent);if(webgl&&!isAndroid)
 {return new PIXI.WebGLRenderer(width,height,options);}
  return new PIXI.CanvasRenderer(width,height,options);};PIXI.PolyK={};PIXI.PolyK.Triangulate=function(p)
 {var sign=true;var n=p.length>>1;if(n<3)return[];var tgs=[];var avl=[];for(var i=0;i<n;i++)avl.push(i);i=0;var al=n;while(al>3)
 {var i0=avl[(i+0)%al];var i1=avl[(i+1)%al];var i2=avl[(i+2)%al];var ax=p[2*i0],ay=p[2*i0+1];var bx=p[2*i1],by=p[2*i1+1];var cx=p[2*i2],cy=p[2*i2+1];var earFound=false;if(PIXI.PolyK._convex(ax,ay,bx,by,cx,cy,sign))
 {earFound=true;for(var j=0;j<al;j++)
 {var vi=avl[j];if(vi===i0||vi===i1||vi===i2)continue;if(PIXI.PolyK._PointInTriangle(p[2*vi],p[2*vi+1],ax,ay,bx,by,cx,cy)){earFound=false;break;}}}
  if(earFound)
  {tgs.push(i0,i1,i2);avl.splice((i+1)%al,1);al--;i=0;}
  else if(i++>3*al)
  {if(sign)
  {tgs=[];avl=[];for(i=0;i<n;i++)avl.push(i);i=0;al=n;sign=false;}
  else
  {return null;}}}
  tgs.push(avl[0],avl[1],avl[2]);return tgs;};PIXI.PolyK._PointInTriangle=function(px,py,ax,ay,bx,by,cx,cy)
 {var v0x=cx-ax;var v0y=cy-ay;var v1x=bx-ax;var v1y=by-ay;var v2x=px-ax;var v2y=py-ay;var dot00=v0x*v0x+v0y*v0y;var dot01=v0x*v1x+v0y*v1y;var dot02=v0x*v2x+v0y*v2y;var dot11=v1x*v1x+v1y*v1y;var dot12=v1x*v2x+v1y*v2y;var invDenom=1/(dot00*dot11-dot01*dot01);var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;return(u>=0)&&(v>=0)&&(u+v<1);};PIXI.PolyK._convex=function(ax,ay,bx,by,cx,cy,sign)
 {return((ay-by)*(cx-bx)+(bx-ax)*(cy-by)>=0)===sign;};PIXI.initDefaultShaders=function()
 {};PIXI.CompileVertexShader=function(gl,shaderSrc)
 {return PIXI._CompileShader(gl,shaderSrc,gl.VERTEX_SHADER);};PIXI.CompileFragmentShader=function(gl,shaderSrc)
 {return PIXI._CompileShader(gl,shaderSrc,gl.FRAGMENT_SHADER);};PIXI._CompileShader=function(gl,shaderSrc,shaderType)
 {var src=shaderSrc.join("\n");var shader=gl.createShader(shaderType);gl.shaderSource(shader,src);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS))
 {window.console.log(gl.getShaderInfoLog(shader));return null;}
  return shader;};PIXI.compileProgram=function(gl,vertexSrc,fragmentSrc)
 {var fragmentShader=PIXI.CompileFragmentShader(gl,fragmentSrc);var vertexShader=PIXI.CompileVertexShader(gl,vertexSrc);var shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS))
 {window.console.log("Could not initialise shaders");}
  return shaderProgram;};PIXI.PixiShader=function(gl)
 {this._UID=PIXI._UID++;this.gl=gl;this.program=null;this.fragmentSrc=['precision lowp float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;','}'];this.textureCount=0;this.firstRun=true;this.dirty=true;this.attributes=[];this.init();};PIXI.PixiShader.prototype.constructor=PIXI.PixiShader;PIXI.PixiShader.prototype.init=function()
 {var gl=this.gl;var program=PIXI.compileProgram(gl,this.vertexSrc||PIXI.PixiShader.defaultVertexSrc,this.fragmentSrc);gl.useProgram(program);this.uSampler=gl.getUniformLocation(program,'uSampler');this.projectionVector=gl.getUniformLocation(program,'projectionVector');this.offsetVector=gl.getUniformLocation(program,'offsetVector');this.dimensions=gl.getUniformLocation(program,'dimensions');this.aVertexPosition=gl.getAttribLocation(program,'aVertexPosition');this.aTextureCoord=gl.getAttribLocation(program,'aTextureCoord');this.colorAttribute=gl.getAttribLocation(program,'aColor');if(this.colorAttribute===-1)
 {this.colorAttribute=2;}
  this.attributes=[this.aVertexPosition,this.aTextureCoord,this.colorAttribute];for(var key in this.uniforms)
 {this.uniforms[key].uniformLocation=gl.getUniformLocation(program,key);}
  this.initUniforms();this.program=program;};PIXI.PixiShader.prototype.initUniforms=function()
 {this.textureCount=1;var gl=this.gl;var uniform;for(var key in this.uniforms)
 {uniform=this.uniforms[key];var type=uniform.type;if(type==='sampler2D')
 {uniform._init=false;if(uniform.value!==null)
 {this.initSampler2D(uniform);}}
 else if(type==='mat2'||type==='mat3'||type==='mat4')
 {uniform.glMatrix=true;uniform.glValueLength=1;if(type==='mat2')
 {uniform.glFunc=gl.uniformMatrix2fv;}
 else if(type==='mat3')
 {uniform.glFunc=gl.uniformMatrix3fv;}
 else if(type==='mat4')
 {uniform.glFunc=gl.uniformMatrix4fv;}}
 else
 {uniform.glFunc=gl['uniform'+type];if(type==='2f'||type==='2i')
 {uniform.glValueLength=2;}
 else if(type==='3f'||type==='3i')
 {uniform.glValueLength=3;}
 else if(type==='4f'||type==='4i')
 {uniform.glValueLength=4;}
 else
 {uniform.glValueLength=1;}}}};PIXI.PixiShader.prototype.initSampler2D=function(uniform)
 {if(!uniform.value||!uniform.value.baseTexture||!uniform.value.baseTexture.hasLoaded)
 {return;}
  var gl=this.gl;gl.activeTexture(gl['TEXTURE'+this.textureCount]);gl.bindTexture(gl.TEXTURE_2D,uniform.value.baseTexture._glTextures[gl.id]);if(uniform.textureData)
 {var data=uniform.textureData;var magFilter=(data.magFilter)?data.magFilter:gl.LINEAR;var minFilter=(data.minFilter)?data.minFilter:gl.LINEAR;var wrapS=(data.wrapS)?data.wrapS:gl.CLAMP_TO_EDGE;var wrapT=(data.wrapT)?data.wrapT:gl.CLAMP_TO_EDGE;var format=(data.luminance)?gl.LUMINANCE:gl.RGBA;if(data.repeat)
 {wrapS=gl.REPEAT;wrapT=gl.REPEAT;}
  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!!data.flipY);if(data.width)
 {var width=(data.width)?data.width:512;var height=(data.height)?data.height:2;var border=(data.border)?data.border:0;gl.texImage2D(gl.TEXTURE_2D,0,format,width,height,border,format,gl.UNSIGNED_BYTE,null);}
 else
 {gl.texImage2D(gl.TEXTURE_2D,0,format,gl.RGBA,gl.UNSIGNED_BYTE,uniform.value.baseTexture.source);}
  gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,magFilter);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,minFilter);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,wrapS);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,wrapT);}
  gl.uniform1i(uniform.uniformLocation,this.textureCount);uniform._init=true;this.textureCount++;};PIXI.PixiShader.prototype.syncUniforms=function()
 {this.textureCount=1;var uniform;var gl=this.gl;for(var key in this.uniforms)
 {uniform=this.uniforms[key];if(uniform.glValueLength===1)
 {if(uniform.glMatrix===true)
 {uniform.glFunc.call(gl,uniform.uniformLocation,uniform.transpose,uniform.value);}
 else
 {uniform.glFunc.call(gl,uniform.uniformLocation,uniform.value);}}
 else if(uniform.glValueLength===2)
 {uniform.glFunc.call(gl,uniform.uniformLocation,uniform.value.x,uniform.value.y);}
 else if(uniform.glValueLength===3)
 {uniform.glFunc.call(gl,uniform.uniformLocation,uniform.value.x,uniform.value.y,uniform.value.z);}
 else if(uniform.glValueLength===4)
 {uniform.glFunc.call(gl,uniform.uniformLocation,uniform.value.x,uniform.value.y,uniform.value.z,uniform.value.w);}
 else if(uniform.type==='sampler2D')
 {if(uniform._init)
 {gl.activeTexture(gl['TEXTURE'+this.textureCount]);if(uniform.value.baseTexture._dirty[gl.id])
 {PIXI.instances[gl.id].updateTexture(uniform.value.baseTexture);}
 else
 {gl.bindTexture(gl.TEXTURE_2D,uniform.value.baseTexture._glTextures[gl.id]);}
  gl.uniform1i(uniform.uniformLocation,this.textureCount);this.textureCount++;}
 else
 {this.initSampler2D(uniform);}}}};PIXI.PixiShader.prototype.destroy=function()
 {this.gl.deleteProgram(this.program);this.uniforms=null;this.gl=null;this.attributes=null;};PIXI.PixiShader.defaultVertexSrc=['attribute vec2 aVertexPosition;','attribute vec2 aTextureCoord;','attribute vec4 aColor;','uniform vec2 projectionVector;','uniform vec2 offsetVector;','varying vec2 vTextureCoord;','varying vec4 vColor;','const vec2 center = vec2(-1.0, 1.0);','void main(void) {','   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);','   vTextureCoord = aTextureCoord;','   vColor = vec4(aColor.rgb * aColor.a, aColor.a);','}'];PIXI.PixiFastShader=function(gl)
 {this._UID=PIXI._UID++;this.gl=gl;this.program=null;this.fragmentSrc=['precision lowp float;','varying vec2 vTextureCoord;','varying float vColor;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;','}'];this.vertexSrc=['attribute vec2 aVertexPosition;','attribute vec2 aPositionCoord;','attribute vec2 aScale;','attribute float aRotation;','attribute vec2 aTextureCoord;','attribute float aColor;','uniform vec2 projectionVector;','uniform vec2 offsetVector;','uniform mat3 uMatrix;','varying vec2 vTextureCoord;','varying float vColor;','const vec2 center = vec2(-1.0, 1.0);','void main(void) {','   vec2 v;','   vec2 sv = aVertexPosition * aScale;','   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);','   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);','   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;','   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);','   vTextureCoord = aTextureCoord;','   vColor = aColor;','}'];this.textureCount=0;this.init();};PIXI.PixiFastShader.prototype.constructor=PIXI.PixiFastShader;PIXI.PixiFastShader.prototype.init=function()
 {var gl=this.gl;var program=PIXI.compileProgram(gl,this.vertexSrc,this.fragmentSrc);gl.useProgram(program);this.uSampler=gl.getUniformLocation(program,'uSampler');this.projectionVector=gl.getUniformLocation(program,'projectionVector');this.offsetVector=gl.getUniformLocation(program,'offsetVector');this.dimensions=gl.getUniformLocation(program,'dimensions');this.uMatrix=gl.getUniformLocation(program,'uMatrix');this.aVertexPosition=gl.getAttribLocation(program,'aVertexPosition');this.aPositionCoord=gl.getAttribLocation(program,'aPositionCoord');this.aScale=gl.getAttribLocation(program,'aScale');this.aRotation=gl.getAttribLocation(program,'aRotation');this.aTextureCoord=gl.getAttribLocation(program,'aTextureCoord');this.colorAttribute=gl.getAttribLocation(program,'aColor');if(this.colorAttribute===-1)
 {this.colorAttribute=2;}
  this.attributes=[this.aVertexPosition,this.aPositionCoord,this.aScale,this.aRotation,this.aTextureCoord,this.colorAttribute];this.program=program;};PIXI.PixiFastShader.prototype.destroy=function()
 {this.gl.deleteProgram(this.program);this.uniforms=null;this.gl=null;this.attributes=null;};PIXI.StripShader=function(gl)
 {this._UID=PIXI._UID++;this.gl=gl;this.program=null;this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','uniform float alpha;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;','}'];this.vertexSrc=['attribute vec2 aVertexPosition;','attribute vec2 aTextureCoord;','uniform mat3 translationMatrix;','uniform vec2 projectionVector;','uniform vec2 offsetVector;','varying vec2 vTextureCoord;','void main(void) {','   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);','   v -= offsetVector.xyx;','   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);','   vTextureCoord = aTextureCoord;','}'];this.init();};PIXI.StripShader.prototype.constructor=PIXI.StripShader;PIXI.StripShader.prototype.init=function()
 {var gl=this.gl;var program=PIXI.compileProgram(gl,this.vertexSrc,this.fragmentSrc);gl.useProgram(program);this.uSampler=gl.getUniformLocation(program,'uSampler');this.projectionVector=gl.getUniformLocation(program,'projectionVector');this.offsetVector=gl.getUniformLocation(program,'offsetVector');this.colorAttribute=gl.getAttribLocation(program,'aColor');this.aVertexPosition=gl.getAttribLocation(program,'aVertexPosition');this.aTextureCoord=gl.getAttribLocation(program,'aTextureCoord');this.attributes=[this.aVertexPosition,this.aTextureCoord];this.translationMatrix=gl.getUniformLocation(program,'translationMatrix');this.alpha=gl.getUniformLocation(program,'alpha');this.program=program;};PIXI.StripShader.prototype.destroy=function()
 {this.gl.deleteProgram(this.program);this.uniforms=null;this.gl=null;this.attribute=null;};PIXI.PrimitiveShader=function(gl)
 {this._UID=PIXI._UID++;this.gl=gl;this.program=null;this.fragmentSrc=['precision mediump float;','varying vec4 vColor;','void main(void) {','   gl_FragColor = vColor;','}'];this.vertexSrc=['attribute vec2 aVertexPosition;','attribute vec4 aColor;','uniform mat3 translationMatrix;','uniform vec2 projectionVector;','uniform vec2 offsetVector;','uniform float alpha;','uniform float flipY;','uniform vec3 tint;','varying vec4 vColor;','void main(void) {','   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);','   v -= offsetVector.xyx;','   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);','   vColor = aColor * vec4(tint * alpha, alpha);','}'];this.init();};PIXI.PrimitiveShader.prototype.constructor=PIXI.PrimitiveShader;PIXI.PrimitiveShader.prototype.init=function()
 {var gl=this.gl;var program=PIXI.compileProgram(gl,this.vertexSrc,this.fragmentSrc);gl.useProgram(program);this.projectionVector=gl.getUniformLocation(program,'projectionVector');this.offsetVector=gl.getUniformLocation(program,'offsetVector');this.tintColor=gl.getUniformLocation(program,'tint');this.flipY=gl.getUniformLocation(program,'flipY');this.aVertexPosition=gl.getAttribLocation(program,'aVertexPosition');this.colorAttribute=gl.getAttribLocation(program,'aColor');this.attributes=[this.aVertexPosition,this.colorAttribute];this.translationMatrix=gl.getUniformLocation(program,'translationMatrix');this.alpha=gl.getUniformLocation(program,'alpha');this.program=program;};PIXI.PrimitiveShader.prototype.destroy=function()
 {this.gl.deleteProgram(this.program);this.uniforms=null;this.gl=null;this.attributes=null;};PIXI.ComplexPrimitiveShader=function(gl)
 {this._UID=PIXI._UID++;this.gl=gl;this.program=null;this.fragmentSrc=['precision mediump float;','varying vec4 vColor;','void main(void) {','   gl_FragColor = vColor;','}'];this.vertexSrc=['attribute vec2 aVertexPosition;','uniform mat3 translationMatrix;','uniform vec2 projectionVector;','uniform vec2 offsetVector;','uniform vec3 tint;','uniform float alpha;','uniform vec3 color;','uniform float flipY;','varying vec4 vColor;','void main(void) {','   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);','   v -= offsetVector.xyx;','   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);','   vColor = vec4(color * alpha * tint, alpha);','}'];this.init();};PIXI.ComplexPrimitiveShader.prototype.constructor=PIXI.ComplexPrimitiveShader;PIXI.ComplexPrimitiveShader.prototype.init=function()
 {var gl=this.gl;var program=PIXI.compileProgram(gl,this.vertexSrc,this.fragmentSrc);gl.useProgram(program);this.projectionVector=gl.getUniformLocation(program,'projectionVector');this.offsetVector=gl.getUniformLocation(program,'offsetVector');this.tintColor=gl.getUniformLocation(program,'tint');this.color=gl.getUniformLocation(program,'color');this.flipY=gl.getUniformLocation(program,'flipY');this.aVertexPosition=gl.getAttribLocation(program,'aVertexPosition');this.attributes=[this.aVertexPosition,this.colorAttribute];this.translationMatrix=gl.getUniformLocation(program,'translationMatrix');this.alpha=gl.getUniformLocation(program,'alpha');this.program=program;};PIXI.ComplexPrimitiveShader.prototype.destroy=function()
 {this.gl.deleteProgram(this.program);this.uniforms=null;this.gl=null;this.attribute=null;};PIXI.WebGLGraphics=function()
 {};PIXI.WebGLGraphics.renderGraphics=function(graphics,renderSession)
 {var gl=renderSession.gl;var projection=renderSession.projection,offset=renderSession.offset,shader=renderSession.shaderManager.primitiveShader,webGLData;if(graphics.dirty)
 {PIXI.WebGLGraphics.updateGraphics(graphics,gl);}
  var webGL=graphics._webGL[gl.id];for(var i=0;i<webGL.data.length;i++)
 {if(webGL.data[i].mode===1)
 {webGLData=webGL.data[i];renderSession.stencilManager.pushStencil(graphics,webGLData,renderSession);gl.drawElements(gl.TRIANGLE_FAN,4,gl.UNSIGNED_SHORT,(webGLData.indices.length-4)*2);renderSession.stencilManager.popStencil(graphics,webGLData,renderSession);}
 else
 {webGLData=webGL.data[i];renderSession.shaderManager.setShader(shader);shader=renderSession.shaderManager.primitiveShader;gl.uniformMatrix3fv(shader.translationMatrix,false,graphics.worldTransform.toArray(true));gl.uniform1f(shader.flipY,1);gl.uniform2f(shader.projectionVector,projection.x,-projection.y);gl.uniform2f(shader.offsetVector,-offset.x,-offset.y);gl.uniform3fv(shader.tintColor,PIXI.hex2rgb(graphics.tint));gl.uniform1f(shader.alpha,graphics.worldAlpha);gl.bindBuffer(gl.ARRAY_BUFFER,webGLData.buffer);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,4*6,0);gl.vertexAttribPointer(shader.colorAttribute,4,gl.FLOAT,false,4*6,2*4);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,webGLData.indexBuffer);gl.drawElements(gl.TRIANGLE_STRIP,webGLData.indices.length,gl.UNSIGNED_SHORT,0);}}};PIXI.WebGLGraphics.updateGraphics=function(graphics,gl)
 {var webGL=graphics._webGL[gl.id];if(!webGL)webGL=graphics._webGL[gl.id]={lastIndex:0,data:[],gl:gl};graphics.dirty=false;var i;if(graphics.clearDirty)
 {graphics.clearDirty=false;for(i=0;i<webGL.data.length;i++)
 {var graphicsData=webGL.data[i];graphicsData.reset();PIXI.WebGLGraphics.graphicsDataPool.push(graphicsData);}
  webGL.data=[];webGL.lastIndex=0;}
  var webGLData;for(i=webGL.lastIndex;i<graphics.graphicsData.length;i++)
 {var data=graphics.graphicsData[i];if(data.type===PIXI.Graphics.POLY)
 {data.points=data.shape.points.slice();if(data.shape.closed)
 {if(data.points[0]!==data.points[data.points.length-2]||data.points[1]!==data.points[data.points.length-1])
 {data.points.push(data.points[0],data.points[1]);}}
  if(data.fill)
  {if(data.points.length>=6)
  {if(data.points.length<6*2)
  {webGLData=PIXI.WebGLGraphics.switchMode(webGL,0);var canDrawUsingSimple=PIXI.WebGLGraphics.buildPoly(data,webGLData);if(!canDrawUsingSimple)
  {webGLData=PIXI.WebGLGraphics.switchMode(webGL,1);PIXI.WebGLGraphics.buildComplexPoly(data,webGLData);}}
  else
  {webGLData=PIXI.WebGLGraphics.switchMode(webGL,1);PIXI.WebGLGraphics.buildComplexPoly(data,webGLData);}}}
  if(data.lineWidth>0)
  {webGLData=PIXI.WebGLGraphics.switchMode(webGL,0);PIXI.WebGLGraphics.buildLine(data,webGLData);}}
 else
 {webGLData=PIXI.WebGLGraphics.switchMode(webGL,0);if(data.type===PIXI.Graphics.RECT)
 {PIXI.WebGLGraphics.buildRectangle(data,webGLData);}
 else if(data.type===PIXI.Graphics.CIRC||data.type===PIXI.Graphics.ELIP)
 {PIXI.WebGLGraphics.buildCircle(data,webGLData);}
 else if(data.type===PIXI.Graphics.RREC)
 {PIXI.WebGLGraphics.buildRoundedRectangle(data,webGLData);}}
  webGL.lastIndex++;}
  for(i=0;i<webGL.data.length;i++)
  {webGLData=webGL.data[i];if(webGLData.dirty)webGLData.upload();}};PIXI.WebGLGraphics.switchMode=function(webGL,type)
 {var webGLData;if(!webGL.data.length)
 {webGLData=PIXI.WebGLGraphics.graphicsDataPool.pop()||new PIXI.WebGLGraphicsData(webGL.gl);webGLData.mode=type;webGL.data.push(webGLData);}
 else
 {webGLData=webGL.data[webGL.data.length-1];if(webGLData.mode!==type||type===1)
 {webGLData=PIXI.WebGLGraphics.graphicsDataPool.pop()||new PIXI.WebGLGraphicsData(webGL.gl);webGLData.mode=type;webGL.data.push(webGLData);}}
  webGLData.dirty=true;return webGLData;};PIXI.WebGLGraphics.buildRectangle=function(graphicsData,webGLData)
 {var rectData=graphicsData.shape;var x=rectData.x;var y=rectData.y;var width=rectData.width;var height=rectData.height;if(graphicsData.fill)
 {var color=PIXI.hex2rgb(graphicsData.fillColor);var alpha=graphicsData.fillAlpha;var r=color[0]*alpha;var g=color[1]*alpha;var b=color[2]*alpha;var verts=webGLData.points;var indices=webGLData.indices;var vertPos=verts.length/6;verts.push(x,y);verts.push(r,g,b,alpha);verts.push(x+width,y);verts.push(r,g,b,alpha);verts.push(x,y+height);verts.push(r,g,b,alpha);verts.push(x+width,y+height);verts.push(r,g,b,alpha);indices.push(vertPos,vertPos,vertPos+1,vertPos+2,vertPos+3,vertPos+3);}
  if(graphicsData.lineWidth)
  {var tempPoints=graphicsData.points;graphicsData.points=[x,y,x+width,y,x+width,y+height,x,y+height,x,y];PIXI.WebGLGraphics.buildLine(graphicsData,webGLData);graphicsData.points=tempPoints;}};PIXI.WebGLGraphics.buildRoundedRectangle=function(graphicsData,webGLData)
 {var rrectData=graphicsData.shape;var x=rrectData.x;var y=rrectData.y;var width=rrectData.width;var height=rrectData.height;var radius=rrectData.radius;var recPoints=[];recPoints.push(x,y+radius);recPoints=recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x,y+height-radius,x,y+height,x+radius,y+height));recPoints=recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x+width-radius,y+height,x+width,y+height,x+width,y+height-radius));recPoints=recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x+width,y+radius,x+width,y,x+width-radius,y));recPoints=recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x+radius,y,x,y,x,y+radius));if(graphicsData.fill){var color=PIXI.hex2rgb(graphicsData.fillColor);var alpha=graphicsData.fillAlpha;var r=color[0]*alpha;var g=color[1]*alpha;var b=color[2]*alpha;var verts=webGLData.points;var indices=webGLData.indices;var vecPos=verts.length/6;var triangles=PIXI.PolyK.Triangulate(recPoints);var i=0;for(i=0;i<triangles.length;i+=3)
 {indices.push(triangles[i]+vecPos);indices.push(triangles[i]+vecPos);indices.push(triangles[i+1]+vecPos);indices.push(triangles[i+2]+vecPos);indices.push(triangles[i+2]+vecPos);}
  for(i=0;i<recPoints.length;i++)
  {verts.push(recPoints[i],recPoints[++i],r,g,b,alpha);}}
  if(graphicsData.lineWidth){var tempPoints=graphicsData.points;graphicsData.points=recPoints;PIXI.WebGLGraphics.buildLine(graphicsData,webGLData);graphicsData.points=tempPoints;}};PIXI.WebGLGraphics.quadraticBezierCurve=function(fromX,fromY,cpX,cpY,toX,toY){var xa,ya,xb,yb,x,y,n=20,points=[];function getPt(n1,n2,perc){var diff=n2-n1;return n1+(diff*perc);}
  var j=0;for(var i=0;i<=n;i++)
  {j=i/n;xa=getPt(fromX,cpX,j);ya=getPt(fromY,cpY,j);xb=getPt(cpX,toX,j);yb=getPt(cpY,toY,j);x=getPt(xa,xb,j);y=getPt(ya,yb,j);points.push(x,y);}
  return points;};PIXI.WebGLGraphics.buildCircle=function(graphicsData,webGLData)
 {var circleData=graphicsData.shape;var x=circleData.x;var y=circleData.y;var width;var height;if(graphicsData.type===PIXI.Graphics.CIRC)
 {width=circleData.radius;height=circleData.radius;}
 else
 {width=circleData.width;height=circleData.height;}
  var totalSegs=40;var seg=(Math.PI*2)/totalSegs;var i=0;if(graphicsData.fill)
 {var color=PIXI.hex2rgb(graphicsData.fillColor);var alpha=graphicsData.fillAlpha;var r=color[0]*alpha;var g=color[1]*alpha;var b=color[2]*alpha;var verts=webGLData.points;var indices=webGLData.indices;var vecPos=verts.length/6;indices.push(vecPos);for(i=0;i<totalSegs+1;i++)
 {verts.push(x,y,r,g,b,alpha);verts.push(x+Math.sin(seg*i)*width,y+Math.cos(seg*i)*height,r,g,b,alpha);indices.push(vecPos++,vecPos++);}
  indices.push(vecPos-1);}
  if(graphicsData.lineWidth)
  {var tempPoints=graphicsData.points;graphicsData.points=[];for(i=0;i<totalSegs+1;i++)
  {graphicsData.points.push(x+Math.sin(seg*i)*width,y+Math.cos(seg*i)*height);}
   PIXI.WebGLGraphics.buildLine(graphicsData,webGLData);graphicsData.points=tempPoints;}};PIXI.WebGLGraphics.buildLine=function(graphicsData,webGLData)
 {var i=0;var points=graphicsData.points;if(points.length===0)return;if(graphicsData.lineWidth%2)
 {for(i=0;i<points.length;i++){points[i]+=0.5;}}
  var firstPoint=new PIXI.Point(points[0],points[1]);var lastPoint=new PIXI.Point(points[points.length-2],points[points.length-1]);if(firstPoint.x===lastPoint.x&&firstPoint.y===lastPoint.y)
 {points=points.slice();points.pop();points.pop();lastPoint=new PIXI.Point(points[points.length-2],points[points.length-1]);var midPointX=lastPoint.x+(firstPoint.x-lastPoint.x)*0.5;var midPointY=lastPoint.y+(firstPoint.y-lastPoint.y)*0.5;points.unshift(midPointX,midPointY);points.push(midPointX,midPointY);}
  var verts=webGLData.points;var indices=webGLData.indices;var length=points.length/2;var indexCount=points.length;var indexStart=verts.length/6;var width=graphicsData.lineWidth/2;var color=PIXI.hex2rgb(graphicsData.lineColor);var alpha=graphicsData.lineAlpha;var r=color[0]*alpha;var g=color[1]*alpha;var b=color[2]*alpha;var px,py,p1x,p1y,p2x,p2y,p3x,p3y;var perpx,perpy,perp2x,perp2y,perp3x,perp3y;var a1,b1,c1,a2,b2,c2;var denom,pdist,dist;p1x=points[0];p1y=points[1];p2x=points[2];p2y=points[3];perpx=-(p1y-p2y);perpy=p1x-p2x;dist=Math.sqrt(perpx*perpx+perpy*perpy);perpx/=dist;perpy/=dist;perpx*=width;perpy*=width;verts.push(p1x-perpx,p1y-perpy,r,g,b,alpha);verts.push(p1x+perpx,p1y+perpy,r,g,b,alpha);for(i=1;i<length-1;i++)
 {p1x=points[(i-1)*2];p1y=points[(i-1)*2+1];p2x=points[(i)*2];p2y=points[(i)*2+1];p3x=points[(i+1)*2];p3y=points[(i+1)*2+1];perpx=-(p1y-p2y);perpy=p1x-p2x;dist=Math.sqrt(perpx*perpx+perpy*perpy);perpx/=dist;perpy/=dist;perpx*=width;perpy*=width;perp2x=-(p2y-p3y);perp2y=p2x-p3x;dist=Math.sqrt(perp2x*perp2x+perp2y*perp2y);perp2x/=dist;perp2y/=dist;perp2x*=width;perp2y*=width;a1=(-perpy+p1y)-(-perpy+p2y);b1=(-perpx+p2x)-(-perpx+p1x);c1=(-perpx+p1x)*(-perpy+p2y)-(-perpx+p2x)*(-perpy+p1y);a2=(-perp2y+p3y)-(-perp2y+p2y);b2=(-perp2x+p2x)-(-perp2x+p3x);c2=(-perp2x+p3x)*(-perp2y+p2y)-(-perp2x+p2x)*(-perp2y+p3y);denom=a1*b2-a2*b1;if(Math.abs(denom)<0.1)
 {denom+=10.1;verts.push(p2x-perpx,p2y-perpy,r,g,b,alpha);verts.push(p2x+perpx,p2y+perpy,r,g,b,alpha);continue;}
  px=(b1*c2-b2*c1)/denom;py=(a2*c1-a1*c2)/denom;pdist=(px-p2x)*(px-p2x)+(py-p2y)+(py-p2y);if(pdist>140*140)
 {perp3x=perpx-perp2x;perp3y=perpy-perp2y;dist=Math.sqrt(perp3x*perp3x+perp3y*perp3y);perp3x/=dist;perp3y/=dist;perp3x*=width;perp3y*=width;verts.push(p2x-perp3x,p2y-perp3y);verts.push(r,g,b,alpha);verts.push(p2x+perp3x,p2y+perp3y);verts.push(r,g,b,alpha);verts.push(p2x-perp3x,p2y-perp3y);verts.push(r,g,b,alpha);indexCount++;}
 else
 {verts.push(px,py);verts.push(r,g,b,alpha);verts.push(p2x-(px-p2x),p2y-(py-p2y));verts.push(r,g,b,alpha);}}
  p1x=points[(length-2)*2];p1y=points[(length-2)*2+1];p2x=points[(length-1)*2];p2y=points[(length-1)*2+1];perpx=-(p1y-p2y);perpy=p1x-p2x;dist=Math.sqrt(perpx*perpx+perpy*perpy);perpx/=dist;perpy/=dist;perpx*=width;perpy*=width;verts.push(p2x-perpx,p2y-perpy);verts.push(r,g,b,alpha);verts.push(p2x+perpx,p2y+perpy);verts.push(r,g,b,alpha);indices.push(indexStart);for(i=0;i<indexCount;i++)
 {indices.push(indexStart++);}
  indices.push(indexStart-1);};PIXI.WebGLGraphics.buildComplexPoly=function(graphicsData,webGLData)
 {var points=graphicsData.points.slice();if(points.length<6)return;var indices=webGLData.indices;webGLData.points=points;webGLData.alpha=graphicsData.fillAlpha;webGLData.color=PIXI.hex2rgb(graphicsData.fillColor);var minX=Infinity;var maxX=-Infinity;var minY=Infinity;var maxY=-Infinity;var x,y;for(var i=0;i<points.length;i+=2)
 {x=points[i];y=points[i+1];minX=x<minX?x:minX;maxX=x>maxX?x:maxX;minY=y<minY?y:minY;maxY=y>maxY?y:maxY;}
  points.push(minX,minY,maxX,minY,maxX,maxY,minX,maxY);var length=points.length/2;for(i=0;i<length;i++)
 {indices.push(i);}};PIXI.WebGLGraphics.buildPoly=function(graphicsData,webGLData)
 {var points=graphicsData.points;if(points.length<6)return;var verts=webGLData.points;var indices=webGLData.indices;var length=points.length/2;var color=PIXI.hex2rgb(graphicsData.fillColor);var alpha=graphicsData.fillAlpha;var r=color[0]*alpha;var g=color[1]*alpha;var b=color[2]*alpha;var triangles=PIXI.PolyK.Triangulate(points);if(!triangles)return false;var vertPos=verts.length/6;var i=0;for(i=0;i<triangles.length;i+=3)
 {indices.push(triangles[i]+vertPos);indices.push(triangles[i]+vertPos);indices.push(triangles[i+1]+vertPos);indices.push(triangles[i+2]+vertPos);indices.push(triangles[i+2]+vertPos);}
  for(i=0;i<length;i++)
  {verts.push(points[i*2],points[i*2+1],r,g,b,alpha);}
  return true;};PIXI.WebGLGraphics.graphicsDataPool=[];PIXI.WebGLGraphicsData=function(gl)
 {this.gl=gl;this.color=[0,0,0];this.points=[];this.indices=[];this.buffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();this.mode=1;this.alpha=1;this.dirty=true;};PIXI.WebGLGraphicsData.prototype.reset=function()
 {this.points=[];this.indices=[];};PIXI.WebGLGraphicsData.prototype.upload=function()
 {var gl=this.gl;this.glPoints=new PIXI.Float32Array(this.points);gl.bindBuffer(gl.ARRAY_BUFFER,this.buffer);gl.bufferData(gl.ARRAY_BUFFER,this.glPoints,gl.STATIC_DRAW);this.glIndicies=new PIXI.Uint16Array(this.indices);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.glIndicies,gl.STATIC_DRAW);this.dirty=false;};PIXI.glContexts=[];PIXI.instances=[];PIXI.WebGLRenderer=function(width,height,options)
 {if(options)
 {for(var i in PIXI.defaultRenderOptions)
 {if(typeof options[i]==='undefined')options[i]=PIXI.defaultRenderOptions[i];}}
 else
 {options=PIXI.defaultRenderOptions;}
  if(!PIXI.defaultRenderer)
  {PIXI.sayHello('webGL');PIXI.defaultRenderer=this;}
  this.type=PIXI.WEBGL_RENDERER;this.resolution=options.resolution;this.transparent=options.transparent;this.autoResize=options.autoResize||false;this.preserveDrawingBuffer=options.preserveDrawingBuffer;this.clearBeforeRender=options.clearBeforeRender;this.width=width||800;this.height=height||600;this.view=options.view||document.createElement('canvas');this.contextLostBound=this.handleContextLost.bind(this);this.contextRestoredBound=this.handleContextRestored.bind(this);this.view.addEventListener('webglcontextlost',this.contextLostBound,false);this.view.addEventListener('webglcontextrestored',this.contextRestoredBound,false);this._contextOptions={alpha:this.transparent,antialias:options.antialias,premultipliedAlpha:this.transparent&&this.transparent!=='notMultiplied',stencil:true,preserveDrawingBuffer:options.preserveDrawingBuffer};this.projection=new PIXI.Point();this.offset=new PIXI.Point(0,0);this.shaderManager=new PIXI.WebGLShaderManager();this.spriteBatch=new PIXI.WebGLSpriteBatch();this.maskManager=new PIXI.WebGLMaskManager();this.filterManager=new PIXI.WebGLFilterManager();this.stencilManager=new PIXI.WebGLStencilManager();this.blendModeManager=new PIXI.WebGLBlendModeManager();this.renderSession={};this.renderSession.gl=this.gl;this.renderSession.drawCount=0;this.renderSession.shaderManager=this.shaderManager;this.renderSession.maskManager=this.maskManager;this.renderSession.filterManager=this.filterManager;this.renderSession.blendModeManager=this.blendModeManager;this.renderSession.spriteBatch=this.spriteBatch;this.renderSession.stencilManager=this.stencilManager;this.renderSession.renderer=this;this.renderSession.resolution=this.resolution;this.initContext();this.mapBlendModes();};PIXI.WebGLRenderer.prototype.constructor=PIXI.WebGLRenderer;PIXI.WebGLRenderer.prototype.initContext=function()
 {var gl=this.view.getContext('webgl',this._contextOptions)||this.view.getContext('experimental-webgl',this._contextOptions);this.gl=gl;if(!gl){throw new Error('This browser does not support webGL. Try using the canvas renderer');}
  this.glContextId=gl.id=PIXI.WebGLRenderer.glContextId++;PIXI.glContexts[this.glContextId]=gl;PIXI.instances[this.glContextId]=this;gl.disable(gl.DEPTH_TEST);gl.disable(gl.CULL_FACE);gl.enable(gl.BLEND);this.shaderManager.setContext(gl);this.spriteBatch.setContext(gl);this.maskManager.setContext(gl);this.filterManager.setContext(gl);this.blendModeManager.setContext(gl);this.stencilManager.setContext(gl);this.renderSession.gl=this.gl;this.resize(this.width,this.height);};PIXI.WebGLRenderer.prototype.render=function(stage)
 {if(this.contextLost)return;if(this.__stage!==stage)
 {if(stage.interactive)stage.interactionManager.removeEvents();this.__stage=stage;}
  stage.updateTransform();var gl=this.gl;if(stage._interactive)
 {if(!stage._interactiveEventsAdded)
 {stage._interactiveEventsAdded=true;stage.interactionManager.setTarget(this);}}
 else
 {if(stage._interactiveEventsAdded)
 {stage._interactiveEventsAdded=false;stage.interactionManager.setTarget(this);}}
  gl.viewport(0,0,this.width,this.height);gl.bindFramebuffer(gl.FRAMEBUFFER,null);if(this.clearBeforeRender)
 {if(this.transparent)
 {gl.clearColor(0,0,0,0);}
 else
 {gl.clearColor(stage.backgroundColorSplit[0],stage.backgroundColorSplit[1],stage.backgroundColorSplit[2],1);}
  gl.clear(gl.COLOR_BUFFER_BIT);}
  this.renderDisplayObject(stage,this.projection);};PIXI.WebGLRenderer.prototype.renderDisplayObject=function(displayObject,projection,buffer)
 {this.renderSession.blendModeManager.setBlendMode(PIXI.blendModes.NORMAL);this.renderSession.drawCount=0;this.renderSession.flipY=buffer?-1:1;this.renderSession.projection=projection;this.renderSession.offset=this.offset;this.spriteBatch.begin(this.renderSession);this.filterManager.begin(this.renderSession,buffer);displayObject._renderWebGL(this.renderSession);this.spriteBatch.end();};PIXI.WebGLRenderer.prototype.resize=function(width,height)
 {this.width=width*this.resolution;this.height=height*this.resolution;this.view.width=this.width;this.view.height=this.height;if(this.autoResize){this.view.style.width=this.width/this.resolution+'px';this.view.style.height=this.height/this.resolution+'px';}
  this.gl.viewport(0,0,this.width,this.height);this.projection.x=this.width/2/this.resolution;this.projection.y=-this.height/2/this.resolution;};PIXI.WebGLRenderer.prototype.updateTexture=function(texture)
 {if(!texture.hasLoaded)return;var gl=this.gl;if(!texture._glTextures[gl.id])texture._glTextures[gl.id]=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture._glTextures[gl.id]);gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultipliedAlpha);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,texture.source);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,texture.scaleMode===PIXI.scaleModes.LINEAR?gl.LINEAR:gl.NEAREST);if(texture.mipmap&&PIXI.isPowerOfTwo(texture.width,texture.height))
 {gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,texture.scaleMode===PIXI.scaleModes.LINEAR?gl.LINEAR_MIPMAP_LINEAR:gl.NEAREST_MIPMAP_NEAREST);gl.generateMipmap(gl.TEXTURE_2D);}
 else
 {gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,texture.scaleMode===PIXI.scaleModes.LINEAR?gl.LINEAR:gl.NEAREST);}
  if(!texture._powerOf2)
  {gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);}
  else
  {gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT);}
  texture._dirty[gl.id]=false;return texture._glTextures[gl.id];};PIXI.WebGLRenderer.prototype.handleContextLost=function(event)
 {event.preventDefault();this.contextLost=true;};PIXI.WebGLRenderer.prototype.handleContextRestored=function()
 {this.initContext();for(var key in PIXI.TextureCache)
 {var texture=PIXI.TextureCache[key].baseTexture;texture._glTextures=[];}
  this.contextLost=false;};PIXI.WebGLRenderer.prototype.destroy=function()
 {this.view.removeEventListener('webglcontextlost',this.contextLostBound);this.view.removeEventListener('webglcontextrestored',this.contextRestoredBound);PIXI.glContexts[this.glContextId]=null;this.projection=null;this.offset=null;this.shaderManager.destroy();this.spriteBatch.destroy();this.maskManager.destroy();this.filterManager.destroy();this.shaderManager=null;this.spriteBatch=null;this.maskManager=null;this.filterManager=null;this.gl=null;this.renderSession=null;};PIXI.WebGLRenderer.prototype.mapBlendModes=function()
 {var gl=this.gl;if(!PIXI.blendModesWebGL)
 {PIXI.blendModesWebGL=[];PIXI.blendModesWebGL[PIXI.blendModes.NORMAL]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.ADD]=[gl.SRC_ALPHA,gl.DST_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.MULTIPLY]=[gl.DST_COLOR,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.SCREEN]=[gl.SRC_ALPHA,gl.ONE];PIXI.blendModesWebGL[PIXI.blendModes.OVERLAY]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.DARKEN]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.LIGHTEN]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.COLOR_DODGE]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.COLOR_BURN]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.HARD_LIGHT]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.SOFT_LIGHT]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.DIFFERENCE]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.EXCLUSION]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.HUE]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.SATURATION]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.COLOR]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];PIXI.blendModesWebGL[PIXI.blendModes.LUMINOSITY]=[gl.ONE,gl.ONE_MINUS_SRC_ALPHA];}};PIXI.WebGLRenderer.glContextId=0;PIXI.WebGLBlendModeManager=function()
 {this.currentBlendMode=99999;};PIXI.WebGLBlendModeManager.prototype.constructor=PIXI.WebGLBlendModeManager;PIXI.WebGLBlendModeManager.prototype.setContext=function(gl)
 {this.gl=gl;};PIXI.WebGLBlendModeManager.prototype.setBlendMode=function(blendMode)
 {if(this.currentBlendMode===blendMode)return false;this.currentBlendMode=blendMode;var blendModeWebGL=PIXI.blendModesWebGL[this.currentBlendMode];this.gl.blendFunc(blendModeWebGL[0],blendModeWebGL[1]);return true;};PIXI.WebGLBlendModeManager.prototype.destroy=function()
 {this.gl=null;};PIXI.WebGLMaskManager=function()
 {};PIXI.WebGLMaskManager.prototype.constructor=PIXI.WebGLMaskManager;PIXI.WebGLMaskManager.prototype.setContext=function(gl)
 {this.gl=gl;};PIXI.WebGLMaskManager.prototype.pushMask=function(maskData,renderSession)
 {var gl=renderSession.gl;if(maskData.dirty)
 {PIXI.WebGLGraphics.updateGraphics(maskData,gl);}
  if(!maskData._webGL[gl.id].data.length)return;renderSession.stencilManager.pushStencil(maskData,maskData._webGL[gl.id].data[0],renderSession);};PIXI.WebGLMaskManager.prototype.popMask=function(maskData,renderSession)
 {var gl=this.gl;renderSession.stencilManager.popStencil(maskData,maskData._webGL[gl.id].data[0],renderSession);};PIXI.WebGLMaskManager.prototype.destroy=function()
 {this.gl=null;};PIXI.WebGLStencilManager=function()
 {this.stencilStack=[];this.reverse=true;this.count=0;};PIXI.WebGLStencilManager.prototype.setContext=function(gl)
 {this.gl=gl;};PIXI.WebGLStencilManager.prototype.pushStencil=function(graphics,webGLData,renderSession)
 {var gl=this.gl;this.bindGraphics(graphics,webGLData,renderSession);if(this.stencilStack.length===0)
 {gl.enable(gl.STENCIL_TEST);gl.clear(gl.STENCIL_BUFFER_BIT);this.reverse=true;this.count=0;}
  this.stencilStack.push(webGLData);var level=this.count;gl.colorMask(false,false,false,false);gl.stencilFunc(gl.ALWAYS,0,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);if(webGLData.mode===1)
 {gl.drawElements(gl.TRIANGLE_FAN,webGLData.indices.length-4,gl.UNSIGNED_SHORT,0);if(this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-level,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);}
 else
 {gl.stencilFunc(gl.EQUAL,level,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);}
  gl.drawElements(gl.TRIANGLE_FAN,4,gl.UNSIGNED_SHORT,(webGLData.indices.length-4)*2);if(this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level+1),0xFF);}
 else
 {gl.stencilFunc(gl.EQUAL,level+1,0xFF);}
  this.reverse=!this.reverse;}
 else
 {if(!this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-level,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);}
 else
 {gl.stencilFunc(gl.EQUAL,level,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);}
  gl.drawElements(gl.TRIANGLE_STRIP,webGLData.indices.length,gl.UNSIGNED_SHORT,0);if(!this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level+1),0xFF);}
 else
 {gl.stencilFunc(gl.EQUAL,level+1,0xFF);}}
  gl.colorMask(true,true,true,true);gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);this.count++;};PIXI.WebGLStencilManager.prototype.bindGraphics=function(graphics,webGLData,renderSession)
 {this._currentGraphics=graphics;var gl=this.gl;var projection=renderSession.projection,offset=renderSession.offset,shader;if(webGLData.mode===1)
 {shader=renderSession.shaderManager.complexPrimitiveShader;renderSession.shaderManager.setShader(shader);gl.uniform1f(shader.flipY,renderSession.flipY);gl.uniformMatrix3fv(shader.translationMatrix,false,graphics.worldTransform.toArray(true));gl.uniform2f(shader.projectionVector,projection.x,-projection.y);gl.uniform2f(shader.offsetVector,-offset.x,-offset.y);gl.uniform3fv(shader.tintColor,PIXI.hex2rgb(graphics.tint));gl.uniform3fv(shader.color,webGLData.color);gl.uniform1f(shader.alpha,graphics.worldAlpha*webGLData.alpha);gl.bindBuffer(gl.ARRAY_BUFFER,webGLData.buffer);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,4*2,0);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,webGLData.indexBuffer);}
 else
 {shader=renderSession.shaderManager.primitiveShader;renderSession.shaderManager.setShader(shader);gl.uniformMatrix3fv(shader.translationMatrix,false,graphics.worldTransform.toArray(true));gl.uniform1f(shader.flipY,renderSession.flipY);gl.uniform2f(shader.projectionVector,projection.x,-projection.y);gl.uniform2f(shader.offsetVector,-offset.x,-offset.y);gl.uniform3fv(shader.tintColor,PIXI.hex2rgb(graphics.tint));gl.uniform1f(shader.alpha,graphics.worldAlpha);gl.bindBuffer(gl.ARRAY_BUFFER,webGLData.buffer);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,4*6,0);gl.vertexAttribPointer(shader.colorAttribute,4,gl.FLOAT,false,4*6,2*4);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,webGLData.indexBuffer);}};PIXI.WebGLStencilManager.prototype.popStencil=function(graphics,webGLData,renderSession)
 {var gl=this.gl;this.stencilStack.pop();this.count--;if(this.stencilStack.length===0)
 {gl.disable(gl.STENCIL_TEST);}
 else
 {var level=this.count;this.bindGraphics(graphics,webGLData,renderSession);gl.colorMask(false,false,false,false);if(webGLData.mode===1)
 {this.reverse=!this.reverse;if(this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level+1),0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);}
 else
 {gl.stencilFunc(gl.EQUAL,level+1,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);}
  gl.drawElements(gl.TRIANGLE_FAN,4,gl.UNSIGNED_SHORT,(webGLData.indices.length-4)*2);gl.stencilFunc(gl.ALWAYS,0,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);gl.drawElements(gl.TRIANGLE_FAN,webGLData.indices.length-4,gl.UNSIGNED_SHORT,0);if(!this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level),0xFF);}
 else
 {gl.stencilFunc(gl.EQUAL,level,0xFF);}}
 else
 {if(!this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level+1),0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);}
 else
 {gl.stencilFunc(gl.EQUAL,level+1,0xFF);gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);}
  gl.drawElements(gl.TRIANGLE_STRIP,webGLData.indices.length,gl.UNSIGNED_SHORT,0);if(!this.reverse)
 {gl.stencilFunc(gl.EQUAL,0xFF-(level),0xFF);}
 else
 {gl.stencilFunc(gl.EQUAL,level,0xFF);}}
  gl.colorMask(true,true,true,true);gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);}};PIXI.WebGLStencilManager.prototype.destroy=function()
 {this.stencilStack=null;this.gl=null;};PIXI.WebGLShaderManager=function()
 {this.maxAttibs=10;this.attribState=[];this.tempAttribState=[];for(var i=0;i<this.maxAttibs;i++)
 {this.attribState[i]=false;}
  this.stack=[];};PIXI.WebGLShaderManager.prototype.constructor=PIXI.WebGLShaderManager;PIXI.WebGLShaderManager.prototype.setContext=function(gl)
 {this.gl=gl;this.primitiveShader=new PIXI.PrimitiveShader(gl);this.complexPrimitiveShader=new PIXI.ComplexPrimitiveShader(gl);this.defaultShader=new PIXI.PixiShader(gl);this.fastShader=new PIXI.PixiFastShader(gl);this.stripShader=new PIXI.StripShader(gl);this.setShader(this.defaultShader);};PIXI.WebGLShaderManager.prototype.setAttribs=function(attribs)
 {var i;for(i=0;i<this.tempAttribState.length;i++)
 {this.tempAttribState[i]=false;}
  for(i=0;i<attribs.length;i++)
  {var attribId=attribs[i];this.tempAttribState[attribId]=true;}
  var gl=this.gl;for(i=0;i<this.attribState.length;i++)
 {if(this.attribState[i]!==this.tempAttribState[i])
 {this.attribState[i]=this.tempAttribState[i];if(this.tempAttribState[i])
 {gl.enableVertexAttribArray(i);}
 else
 {gl.disableVertexAttribArray(i);}}}};PIXI.WebGLShaderManager.prototype.setShader=function(shader)
 {if(this._currentId===shader._UID)return false;this._currentId=shader._UID;this.currentShader=shader;this.gl.useProgram(shader.program);this.setAttribs(shader.attributes);return true;};PIXI.WebGLShaderManager.prototype.destroy=function()
 {this.attribState=null;this.tempAttribState=null;this.primitiveShader.destroy();this.complexPrimitiveShader.destroy();this.defaultShader.destroy();this.fastShader.destroy();this.stripShader.destroy();this.gl=null;};PIXI.WebGLSpriteBatch=function()
 {this.vertSize=5;this.size=2000;var numVerts=this.size*4*4*this.vertSize;var numIndices=this.size*6;this.vertices=new PIXI.ArrayBuffer(numVerts);this.positions=new PIXI.Float32Array(this.vertices);this.colors=new PIXI.Uint32Array(this.vertices);this.indices=new PIXI.Uint16Array(numIndices);this.lastIndexCount=0;for(var i=0,j=0;i<numIndices;i+=6,j+=4)
 {this.indices[i+0]=j+0;this.indices[i+1]=j+1;this.indices[i+2]=j+2;this.indices[i+3]=j+0;this.indices[i+4]=j+2;this.indices[i+5]=j+3;}
  this.drawing=false;this.currentBatchSize=0;this.currentBaseTexture=null;this.dirty=true;this.textures=[];this.blendModes=[];this.shaders=[];this.sprites=[];this.defaultShader=new PIXI.AbstractFilter(['precision lowp float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;','}']);};PIXI.WebGLSpriteBatch.prototype.setContext=function(gl)
 {this.gl=gl;this.vertexBuffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.vertices,gl.DYNAMIC_DRAW);this.currentBlendMode=99999;var shader=new PIXI.PixiShader(gl);shader.fragmentSrc=this.defaultShader.fragmentSrc;shader.uniforms={};shader.init();this.defaultShader.shaders[gl.id]=shader;};PIXI.WebGLSpriteBatch.prototype.begin=function(renderSession)
 {this.renderSession=renderSession;this.shader=this.renderSession.shaderManager.defaultShader;this.start();};PIXI.WebGLSpriteBatch.prototype.end=function()
 {this.flush();};PIXI.WebGLSpriteBatch.prototype.render=function(sprite)
 {var texture=sprite.texture;if(this.currentBatchSize>=this.size)
 {this.flush();this.currentBaseTexture=texture.baseTexture;}
  var uvs=texture._uvs;if(!uvs)return;var aX=sprite.anchor.x;var aY=sprite.anchor.y;var w0,w1,h0,h1;if(texture.trim)
 {var trim=texture.trim;w1=trim.x-aX*trim.width;w0=w1+texture.crop.width;h1=trim.y-aY*trim.height;h0=h1+texture.crop.height;}
 else
 {w0=(texture.frame.width)*(1-aX);w1=(texture.frame.width)*-aX;h0=texture.frame.height*(1-aY);h1=texture.frame.height*-aY;}
  var index=this.currentBatchSize*4*this.vertSize;var resolution=texture.baseTexture.resolution;var worldTransform=sprite.worldTransform;var a=worldTransform.a/resolution;var b=worldTransform.b/resolution;var c=worldTransform.c/resolution;var d=worldTransform.d/resolution;var tx=worldTransform.tx;var ty=worldTransform.ty;var colors=this.colors;var positions=this.positions;if(this.renderSession.roundPixels)
 {positions[index]=a*w1+c*h1+tx|0;positions[index+1]=d*h1+b*w1+ty|0;positions[index+5]=a*w0+c*h1+tx|0;positions[index+6]=d*h1+b*w0+ty|0;positions[index+10]=a*w0+c*h0+tx|0;positions[index+11]=d*h0+b*w0+ty|0;positions[index+15]=a*w1+c*h0+tx|0;positions[index+16]=d*h0+b*w1+ty|0;}
 else
 {positions[index]=a*w1+c*h1+tx;positions[index+1]=d*h1+b*w1+ty;positions[index+5]=a*w0+c*h1+tx;positions[index+6]=d*h1+b*w0+ty;positions[index+10]=a*w0+c*h0+tx;positions[index+11]=d*h0+b*w0+ty;positions[index+15]=a*w1+c*h0+tx;positions[index+16]=d*h0+b*w1+ty;}
  positions[index+2]=uvs.x0;positions[index+3]=uvs.y0;positions[index+7]=uvs.x1;positions[index+8]=uvs.y1;positions[index+12]=uvs.x2;positions[index+13]=uvs.y2;positions[index+17]=uvs.x3;positions[index+18]=uvs.y3;var tint=sprite.tint;colors[index+4]=colors[index+9]=colors[index+14]=colors[index+19]=(tint>>16)+(tint&0xff00)+((tint&0xff)<<16)+(sprite.worldAlpha*255<<24);this.sprites[this.currentBatchSize++]=sprite;};PIXI.WebGLSpriteBatch.prototype.renderTilingSprite=function(tilingSprite)
 {var texture=tilingSprite.tilingTexture;if(this.currentBatchSize>=this.size)
 {this.flush();this.currentBaseTexture=texture.baseTexture;}
  if(!tilingSprite._uvs)tilingSprite._uvs=new PIXI.TextureUvs();var uvs=tilingSprite._uvs;tilingSprite.tilePosition.x%=texture.baseTexture.width*tilingSprite.tileScaleOffset.x;tilingSprite.tilePosition.y%=texture.baseTexture.height*tilingSprite.tileScaleOffset.y;var offsetX=tilingSprite.tilePosition.x/(texture.baseTexture.width*tilingSprite.tileScaleOffset.x);var offsetY=tilingSprite.tilePosition.y/(texture.baseTexture.height*tilingSprite.tileScaleOffset.y);var scaleX=(tilingSprite.width/texture.baseTexture.width)/(tilingSprite.tileScale.x*tilingSprite.tileScaleOffset.x);var scaleY=(tilingSprite.height/texture.baseTexture.height)/(tilingSprite.tileScale.y*tilingSprite.tileScaleOffset.y);uvs.x0=0-offsetX;uvs.y0=0-offsetY;uvs.x1=(1*scaleX)-offsetX;uvs.y1=0-offsetY;uvs.x2=(1*scaleX)-offsetX;uvs.y2=(1*scaleY)-offsetY;uvs.x3=0-offsetX;uvs.y3=(1*scaleY)-offsetY;var tint=tilingSprite.tint;var color=(tint>>16)+(tint&0xff00)+((tint&0xff)<<16)+(tilingSprite.alpha*255<<24);var positions=this.positions;var colors=this.colors;var width=tilingSprite.width;var height=tilingSprite.height;var aX=tilingSprite.anchor.x;var aY=tilingSprite.anchor.y;var w0=width*(1-aX);var w1=width*-aX;var h0=height*(1-aY);var h1=height*-aY;var index=this.currentBatchSize*4*this.vertSize;var resolution=texture.baseTexture.resolution;var worldTransform=tilingSprite.worldTransform;var a=worldTransform.a/resolution;var b=worldTransform.b/resolution;var c=worldTransform.c/resolution;var d=worldTransform.d/resolution;var tx=worldTransform.tx;var ty=worldTransform.ty;positions[index++]=a*w1+c*h1+tx;positions[index++]=d*h1+b*w1+ty;positions[index++]=uvs.x0;positions[index++]=uvs.y0;colors[index++]=color;positions[index++]=(a*w0+c*h1+tx);positions[index++]=d*h1+b*w0+ty;positions[index++]=uvs.x1;positions[index++]=uvs.y1;colors[index++]=color;positions[index++]=a*w0+c*h0+tx;positions[index++]=d*h0+b*w0+ty;positions[index++]=uvs.x2;positions[index++]=uvs.y2;colors[index++]=color;positions[index++]=a*w1+c*h0+tx;positions[index++]=d*h0+b*w1+ty;positions[index++]=uvs.x3;positions[index++]=uvs.y3;colors[index++]=color;this.sprites[this.currentBatchSize++]=tilingSprite;};PIXI.WebGLSpriteBatch.prototype.flush=function()
 {if(this.currentBatchSize===0)return;var gl=this.gl;var shader;if(this.dirty)
 {this.dirty=false;gl.activeTexture(gl.TEXTURE0);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);shader=this.defaultShader.shaders[gl.id];var stride=this.vertSize*4;gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,stride,0);gl.vertexAttribPointer(shader.aTextureCoord,2,gl.FLOAT,false,stride,2*4);gl.vertexAttribPointer(shader.colorAttribute,4,gl.UNSIGNED_BYTE,true,stride,4*4);}
  if(this.currentBatchSize>(this.size*0.5))
  {gl.bufferSubData(gl.ARRAY_BUFFER,0,this.vertices);}
  else
  {var view=this.positions.subarray(0,this.currentBatchSize*4*this.vertSize);gl.bufferSubData(gl.ARRAY_BUFFER,0,view);}
  var nextTexture,nextBlendMode,nextShader;var batchSize=0;var start=0;var currentBaseTexture=null;var currentBlendMode=this.renderSession.blendModeManager.currentBlendMode;var currentShader=null;var blendSwap=false;var shaderSwap=false;var sprite;for(var i=0,j=this.currentBatchSize;i<j;i++){sprite=this.sprites[i];nextTexture=sprite.texture.baseTexture;nextBlendMode=sprite.blendMode;nextShader=sprite.shader||this.defaultShader;blendSwap=currentBlendMode!==nextBlendMode;shaderSwap=currentShader!==nextShader;if(currentBaseTexture!==nextTexture||blendSwap||shaderSwap)
 {this.renderBatch(currentBaseTexture,batchSize,start);start=i;batchSize=0;currentBaseTexture=nextTexture;if(blendSwap)
 {currentBlendMode=nextBlendMode;this.renderSession.blendModeManager.setBlendMode(currentBlendMode);}
  if(shaderSwap)
  {currentShader=nextShader;shader=currentShader.shaders[gl.id];if(!shader)
  {shader=new PIXI.PixiShader(gl);shader.fragmentSrc=currentShader.fragmentSrc;shader.uniforms=currentShader.uniforms;shader.init();currentShader.shaders[gl.id]=shader;}
   this.renderSession.shaderManager.setShader(shader);if(shader.dirty)shader.syncUniforms();var projection=this.renderSession.projection;gl.uniform2f(shader.projectionVector,projection.x,projection.y);var offsetVector=this.renderSession.offset;gl.uniform2f(shader.offsetVector,offsetVector.x,offsetVector.y);}}
  batchSize++;}
  this.renderBatch(currentBaseTexture,batchSize,start);this.currentBatchSize=0;};PIXI.WebGLSpriteBatch.prototype.renderBatch=function(texture,size,startIndex)
 {if(size===0)return;var gl=this.gl;if(texture._dirty[gl.id])
 {this.renderSession.renderer.updateTexture(texture);}
 else
 {gl.bindTexture(gl.TEXTURE_2D,texture._glTextures[gl.id]);}
  gl.drawElements(gl.TRIANGLES,size*6,gl.UNSIGNED_SHORT,startIndex*6*2);this.renderSession.drawCount++;};PIXI.WebGLSpriteBatch.prototype.stop=function()
 {this.flush();this.dirty=true;};PIXI.WebGLSpriteBatch.prototype.start=function()
 {this.dirty=true;};PIXI.WebGLSpriteBatch.prototype.destroy=function()
 {this.vertices=null;this.indices=null;this.gl.deleteBuffer(this.vertexBuffer);this.gl.deleteBuffer(this.indexBuffer);this.currentBaseTexture=null;this.gl=null;};PIXI.WebGLFastSpriteBatch=function(gl)
 {this.vertSize=10;this.maxSize=6000;this.size=this.maxSize;var numVerts=this.size*4*this.vertSize;var numIndices=this.maxSize*6;this.vertices=new PIXI.Float32Array(numVerts);this.indices=new PIXI.Uint16Array(numIndices);this.vertexBuffer=null;this.indexBuffer=null;this.lastIndexCount=0;for(var i=0,j=0;i<numIndices;i+=6,j+=4)
 {this.indices[i+0]=j+0;this.indices[i+1]=j+1;this.indices[i+2]=j+2;this.indices[i+3]=j+0;this.indices[i+4]=j+2;this.indices[i+5]=j+3;}
  this.drawing=false;this.currentBatchSize=0;this.currentBaseTexture=null;this.currentBlendMode=0;this.renderSession=null;this.shader=null;this.matrix=null;this.setContext(gl);};PIXI.WebGLFastSpriteBatch.prototype.constructor=PIXI.WebGLFastSpriteBatch;PIXI.WebGLFastSpriteBatch.prototype.setContext=function(gl)
 {this.gl=gl;this.vertexBuffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.vertices,gl.DYNAMIC_DRAW);};PIXI.WebGLFastSpriteBatch.prototype.begin=function(spriteBatch,renderSession)
 {this.renderSession=renderSession;this.shader=this.renderSession.shaderManager.fastShader;this.matrix=spriteBatch.worldTransform.toArray(true);this.start();};PIXI.WebGLFastSpriteBatch.prototype.end=function()
 {this.flush();};PIXI.WebGLFastSpriteBatch.prototype.render=function(spriteBatch)
 {var children=spriteBatch.children;var sprite=children[0];if(!sprite.texture._uvs)return;this.currentBaseTexture=sprite.texture.baseTexture;if(sprite.blendMode!==this.renderSession.blendModeManager.currentBlendMode)
 {this.flush();this.renderSession.blendModeManager.setBlendMode(sprite.blendMode);}
  for(var i=0,j=children.length;i<j;i++)
  {this.renderSprite(children[i]);}
  this.flush();};PIXI.WebGLFastSpriteBatch.prototype.renderSprite=function(sprite)
 {if(!sprite.visible)return;if(sprite.texture.baseTexture!==this.currentBaseTexture)
 {this.flush();this.currentBaseTexture=sprite.texture.baseTexture;if(!sprite.texture._uvs)return;}
  var uvs,vertices=this.vertices,width,height,w0,w1,h0,h1,index;uvs=sprite.texture._uvs;width=sprite.texture.frame.width;height=sprite.texture.frame.height;if(sprite.texture.trim)
 {var trim=sprite.texture.trim;w1=trim.x-sprite.anchor.x*trim.width;w0=w1+sprite.texture.crop.width;h1=trim.y-sprite.anchor.y*trim.height;h0=h1+sprite.texture.crop.height;}
 else
 {w0=(sprite.texture.frame.width)*(1-sprite.anchor.x);w1=(sprite.texture.frame.width)*-sprite.anchor.x;h0=sprite.texture.frame.height*(1-sprite.anchor.y);h1=sprite.texture.frame.height*-sprite.anchor.y;}
  index=this.currentBatchSize*4*this.vertSize;vertices[index++]=w1;vertices[index++]=h1;vertices[index++]=sprite.position.x;vertices[index++]=sprite.position.y;vertices[index++]=sprite.scale.x;vertices[index++]=sprite.scale.y;vertices[index++]=sprite.rotation;vertices[index++]=uvs.x0;vertices[index++]=uvs.y1;vertices[index++]=sprite.alpha;vertices[index++]=w0;vertices[index++]=h1;vertices[index++]=sprite.position.x;vertices[index++]=sprite.position.y;vertices[index++]=sprite.scale.x;vertices[index++]=sprite.scale.y;vertices[index++]=sprite.rotation;vertices[index++]=uvs.x1;vertices[index++]=uvs.y1;vertices[index++]=sprite.alpha;vertices[index++]=w0;vertices[index++]=h0;vertices[index++]=sprite.position.x;vertices[index++]=sprite.position.y;vertices[index++]=sprite.scale.x;vertices[index++]=sprite.scale.y;vertices[index++]=sprite.rotation;vertices[index++]=uvs.x2;vertices[index++]=uvs.y2;vertices[index++]=sprite.alpha;vertices[index++]=w1;vertices[index++]=h0;vertices[index++]=sprite.position.x;vertices[index++]=sprite.position.y;vertices[index++]=sprite.scale.x;vertices[index++]=sprite.scale.y;vertices[index++]=sprite.rotation;vertices[index++]=uvs.x3;vertices[index++]=uvs.y3;vertices[index++]=sprite.alpha;this.currentBatchSize++;if(this.currentBatchSize>=this.size)
 {this.flush();}};PIXI.WebGLFastSpriteBatch.prototype.flush=function()
 {if(this.currentBatchSize===0)return;var gl=this.gl;if(!this.currentBaseTexture._glTextures[gl.id])this.renderSession.renderer.updateTexture(this.currentBaseTexture,gl);gl.bindTexture(gl.TEXTURE_2D,this.currentBaseTexture._glTextures[gl.id]);if(this.currentBatchSize>(this.size*0.5))
 {gl.bufferSubData(gl.ARRAY_BUFFER,0,this.vertices);}
 else
 {var view=this.vertices.subarray(0,this.currentBatchSize*4*this.vertSize);gl.bufferSubData(gl.ARRAY_BUFFER,0,view);}
  gl.drawElements(gl.TRIANGLES,this.currentBatchSize*6,gl.UNSIGNED_SHORT,0);this.currentBatchSize=0;this.renderSession.drawCount++;};PIXI.WebGLFastSpriteBatch.prototype.stop=function()
 {this.flush();};PIXI.WebGLFastSpriteBatch.prototype.start=function()
 {var gl=this.gl;gl.activeTexture(gl.TEXTURE0);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);var projection=this.renderSession.projection;gl.uniform2f(this.shader.projectionVector,projection.x,projection.y);gl.uniformMatrix3fv(this.shader.uMatrix,false,this.matrix);var stride=this.vertSize*4;gl.vertexAttribPointer(this.shader.aVertexPosition,2,gl.FLOAT,false,stride,0);gl.vertexAttribPointer(this.shader.aPositionCoord,2,gl.FLOAT,false,stride,2*4);gl.vertexAttribPointer(this.shader.aScale,2,gl.FLOAT,false,stride,4*4);gl.vertexAttribPointer(this.shader.aRotation,1,gl.FLOAT,false,stride,6*4);gl.vertexAttribPointer(this.shader.aTextureCoord,2,gl.FLOAT,false,stride,7*4);gl.vertexAttribPointer(this.shader.colorAttribute,1,gl.FLOAT,false,stride,9*4);};PIXI.WebGLFilterManager=function()
 {this.filterStack=[];this.offsetX=0;this.offsetY=0;};PIXI.WebGLFilterManager.prototype.constructor=PIXI.WebGLFilterManager;PIXI.WebGLFilterManager.prototype.setContext=function(gl)
 {this.gl=gl;this.texturePool=[];this.initShaderBuffers();};PIXI.WebGLFilterManager.prototype.begin=function(renderSession,buffer)
 {this.renderSession=renderSession;this.defaultShader=renderSession.shaderManager.defaultShader;var projection=this.renderSession.projection;this.width=projection.x*2;this.height=-projection.y*2;this.buffer=buffer;};PIXI.WebGLFilterManager.prototype.pushFilter=function(filterBlock)
 {var gl=this.gl;var projection=this.renderSession.projection;var offset=this.renderSession.offset;filterBlock._filterArea=filterBlock.target.filterArea||filterBlock.target.getBounds();this.filterStack.push(filterBlock);var filter=filterBlock.filterPasses[0];this.offsetX+=filterBlock._filterArea.x;this.offsetY+=filterBlock._filterArea.y;var texture=this.texturePool.pop();if(!texture)
 {texture=new PIXI.FilterTexture(this.gl,this.width,this.height);}
 else
 {texture.resize(this.width,this.height);}
  gl.bindTexture(gl.TEXTURE_2D,texture.texture);var filterArea=filterBlock._filterArea;var padding=filter.padding;filterArea.x-=padding;filterArea.y-=padding;filterArea.width+=padding*2;filterArea.height+=padding*2;if(filterArea.x<0)filterArea.x=0;if(filterArea.width>this.width)filterArea.width=this.width;if(filterArea.y<0)filterArea.y=0;if(filterArea.height>this.height)filterArea.height=this.height;gl.bindFramebuffer(gl.FRAMEBUFFER,texture.frameBuffer);gl.viewport(0,0,filterArea.width,filterArea.height);projection.x=filterArea.width/2;projection.y=-filterArea.height/2;offset.x=-filterArea.x;offset.y=-filterArea.y;gl.colorMask(true,true,true,true);gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT);filterBlock._glFilterTexture=texture;};PIXI.WebGLFilterManager.prototype.popFilter=function()
 {var gl=this.gl;var filterBlock=this.filterStack.pop();var filterArea=filterBlock._filterArea;var texture=filterBlock._glFilterTexture;var projection=this.renderSession.projection;var offset=this.renderSession.offset;if(filterBlock.filterPasses.length>1)
 {gl.viewport(0,0,filterArea.width,filterArea.height);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);this.vertexArray[0]=0;this.vertexArray[1]=filterArea.height;this.vertexArray[2]=filterArea.width;this.vertexArray[3]=filterArea.height;this.vertexArray[4]=0;this.vertexArray[5]=0;this.vertexArray[6]=filterArea.width;this.vertexArray[7]=0;gl.bufferSubData(gl.ARRAY_BUFFER,0,this.vertexArray);gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);this.uvArray[2]=filterArea.width/this.width;this.uvArray[5]=filterArea.height/this.height;this.uvArray[6]=filterArea.width/this.width;this.uvArray[7]=filterArea.height/this.height;gl.bufferSubData(gl.ARRAY_BUFFER,0,this.uvArray);var inputTexture=texture;var outputTexture=this.texturePool.pop();if(!outputTexture)outputTexture=new PIXI.FilterTexture(this.gl,this.width,this.height);outputTexture.resize(this.width,this.height);gl.bindFramebuffer(gl.FRAMEBUFFER,outputTexture.frameBuffer);gl.clear(gl.COLOR_BUFFER_BIT);gl.disable(gl.BLEND);for(var i=0;i<filterBlock.filterPasses.length-1;i++)
 {var filterPass=filterBlock.filterPasses[i];gl.bindFramebuffer(gl.FRAMEBUFFER,outputTexture.frameBuffer);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,inputTexture.texture);this.applyFilterPass(filterPass,filterArea,filterArea.width,filterArea.height);var temp=inputTexture;inputTexture=outputTexture;outputTexture=temp;}
  gl.enable(gl.BLEND);texture=inputTexture;this.texturePool.push(outputTexture);}
  var filter=filterBlock.filterPasses[filterBlock.filterPasses.length-1];this.offsetX-=filterArea.x;this.offsetY-=filterArea.y;var sizeX=this.width;var sizeY=this.height;var offsetX=0;var offsetY=0;var buffer=this.buffer;if(this.filterStack.length===0)
 {gl.colorMask(true,true,true,true);}
 else
 {var currentFilter=this.filterStack[this.filterStack.length-1];filterArea=currentFilter._filterArea;sizeX=filterArea.width;sizeY=filterArea.height;offsetX=filterArea.x;offsetY=filterArea.y;buffer=currentFilter._glFilterTexture.frameBuffer;}
  projection.x=sizeX/2;projection.y=-sizeY/2;offset.x=offsetX;offset.y=offsetY;filterArea=filterBlock._filterArea;var x=filterArea.x-offsetX;var y=filterArea.y-offsetY;gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);this.vertexArray[0]=x;this.vertexArray[1]=y+filterArea.height;this.vertexArray[2]=x+filterArea.width;this.vertexArray[3]=y+filterArea.height;this.vertexArray[4]=x;this.vertexArray[5]=y;this.vertexArray[6]=x+filterArea.width;this.vertexArray[7]=y;gl.bufferSubData(gl.ARRAY_BUFFER,0,this.vertexArray);gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);this.uvArray[2]=filterArea.width/this.width;this.uvArray[5]=filterArea.height/this.height;this.uvArray[6]=filterArea.width/this.width;this.uvArray[7]=filterArea.height/this.height;gl.bufferSubData(gl.ARRAY_BUFFER,0,this.uvArray);gl.viewport(0,0,sizeX*this.renderSession.resolution,sizeY*this.renderSession.resolution);gl.bindFramebuffer(gl.FRAMEBUFFER,buffer);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture.texture);this.applyFilterPass(filter,filterArea,sizeX,sizeY);this.texturePool.push(texture);filterBlock._glFilterTexture=null;};PIXI.WebGLFilterManager.prototype.applyFilterPass=function(filter,filterArea,width,height)
 {var gl=this.gl;var shader=filter.shaders[gl.id];if(!shader)
 {shader=new PIXI.PixiShader(gl);shader.fragmentSrc=filter.fragmentSrc;shader.uniforms=filter.uniforms;shader.init();filter.shaders[gl.id]=shader;}
  this.renderSession.shaderManager.setShader(shader);gl.uniform2f(shader.projectionVector,width/2,-height/2);gl.uniform2f(shader.offsetVector,0,0);if(filter.uniforms.dimensions)
 {filter.uniforms.dimensions.value[0]=this.width;filter.uniforms.dimensions.value[1]=this.height;filter.uniforms.dimensions.value[2]=this.vertexArray[0];filter.uniforms.dimensions.value[3]=this.vertexArray[5];}
  shader.syncUniforms();gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);gl.vertexAttribPointer(shader.aTextureCoord,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.colorBuffer);gl.vertexAttribPointer(shader.colorAttribute,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0);this.renderSession.drawCount++;};PIXI.WebGLFilterManager.prototype.initShaderBuffers=function()
 {var gl=this.gl;this.vertexBuffer=gl.createBuffer();this.uvBuffer=gl.createBuffer();this.colorBuffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();this.vertexArray=new PIXI.Float32Array([0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0]);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.vertexArray,gl.STATIC_DRAW);this.uvArray=new PIXI.Float32Array([0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0]);gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.uvArray,gl.STATIC_DRAW);this.colorArray=new PIXI.Float32Array([1.0,0xFFFFFF,1.0,0xFFFFFF,1.0,0xFFFFFF,1.0,0xFFFFFF]);gl.bindBuffer(gl.ARRAY_BUFFER,this.colorBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.colorArray,gl.STATIC_DRAW);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,1,3,2]),gl.STATIC_DRAW);};PIXI.WebGLFilterManager.prototype.destroy=function()
 {var gl=this.gl;this.filterStack=null;this.offsetX=0;this.offsetY=0;for(var i=0;i<this.texturePool.length;i++){this.texturePool[i].destroy();}
  this.texturePool=null;gl.deleteBuffer(this.vertexBuffer);gl.deleteBuffer(this.uvBuffer);gl.deleteBuffer(this.colorBuffer);gl.deleteBuffer(this.indexBuffer);};PIXI.FilterTexture=function(gl,width,height,scaleMode)
 {this.gl=gl;this.frameBuffer=gl.createFramebuffer();this.texture=gl.createTexture();scaleMode=scaleMode||PIXI.scaleModes.DEFAULT;gl.bindTexture(gl.TEXTURE_2D,this.texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,scaleMode===PIXI.scaleModes.LINEAR?gl.LINEAR:gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,scaleMode===PIXI.scaleModes.LINEAR?gl.LINEAR:gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer);gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.texture,0);this.renderBuffer=gl.createRenderbuffer();gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBuffer);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,gl.RENDERBUFFER,this.renderBuffer);this.resize(width,height);};PIXI.FilterTexture.prototype.constructor=PIXI.FilterTexture;PIXI.FilterTexture.prototype.clear=function()
 {var gl=this.gl;gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT);};PIXI.FilterTexture.prototype.resize=function(width,height)
 {if(this.width===width&&this.height===height)return;this.width=width;this.height=height;var gl=this.gl;gl.bindTexture(gl.TEXTURE_2D,this.texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,height,0,gl.RGBA,gl.UNSIGNED_BYTE,null);gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_STENCIL,width,height);};PIXI.FilterTexture.prototype.destroy=function()
 {var gl=this.gl;gl.deleteFramebuffer(this.frameBuffer);gl.deleteTexture(this.texture);this.frameBuffer=null;this.texture=null;};PIXI.CanvasBuffer=function(width,height)
 {this.width=width;this.height=height;this.canvas=document.createElement("canvas");this.context=this.canvas.getContext("2d");this.canvas.width=width;this.canvas.height=height;};PIXI.CanvasBuffer.prototype.constructor=PIXI.CanvasBuffer;PIXI.CanvasBuffer.prototype.clear=function()
 {this.context.setTransform(1,0,0,1,0,0);this.context.clearRect(0,0,this.width,this.height);};PIXI.CanvasBuffer.prototype.resize=function(width,height)
 {this.width=this.canvas.width=width;this.height=this.canvas.height=height;};PIXI.CanvasMaskManager=function()
 {};PIXI.CanvasMaskManager.prototype.constructor=PIXI.CanvasMaskManager;PIXI.CanvasMaskManager.prototype.pushMask=function(maskData,renderSession)
 {var context=renderSession.context;context.save();var cacheAlpha=maskData.alpha;var transform=maskData.worldTransform;var resolution=renderSession.resolution;context.setTransform(transform.a*resolution,transform.b*resolution,transform.c*resolution,transform.d*resolution,transform.tx*resolution,transform.ty*resolution);PIXI.CanvasGraphics.renderGraphicsMask(maskData,context);context.clip();maskData.worldAlpha=cacheAlpha;};PIXI.CanvasMaskManager.prototype.popMask=function(renderSession)
 {renderSession.context.restore();};PIXI.CanvasTinter=function()
 {};PIXI.CanvasTinter.getTintedTexture=function(sprite,color)
 {var texture=sprite.texture;color=PIXI.CanvasTinter.roundColor(color);var stringColor="#"+("00000"+(color|0).toString(16)).substr(-6);texture.tintCache=texture.tintCache||{};if(texture.tintCache[stringColor])return texture.tintCache[stringColor];var canvas=PIXI.CanvasTinter.canvas||document.createElement("canvas");PIXI.CanvasTinter.tintMethod(texture,color,canvas);if(PIXI.CanvasTinter.convertTintToImage)
 {var tintImage=new Image();tintImage.src=canvas.toDataURL();texture.tintCache[stringColor]=tintImage;}
 else
 {texture.tintCache[stringColor]=canvas;PIXI.CanvasTinter.canvas=null;}
  return canvas;};PIXI.CanvasTinter.tintWithMultiply=function(texture,color,canvas)
 {var context=canvas.getContext("2d");var crop=texture.crop;canvas.width=crop.width;canvas.height=crop.height;context.fillStyle="#"+("00000"+(color|0).toString(16)).substr(-6);context.fillRect(0,0,crop.width,crop.height);context.globalCompositeOperation="multiply";context.drawImage(texture.baseTexture.source,crop.x,crop.y,crop.width,crop.height,0,0,crop.width,crop.height);context.globalCompositeOperation="destination-atop";context.drawImage(texture.baseTexture.source,crop.x,crop.y,crop.width,crop.height,0,0,crop.width,crop.height);};PIXI.CanvasTinter.tintWithOverlay=function(texture,color,canvas)
 {var context=canvas.getContext("2d");var crop=texture.crop;canvas.width=crop.width;canvas.height=crop.height;context.globalCompositeOperation="copy";context.fillStyle="#"+("00000"+(color|0).toString(16)).substr(-6);context.fillRect(0,0,crop.width,crop.height);context.globalCompositeOperation="destination-atop";context.drawImage(texture.baseTexture.source,crop.x,crop.y,crop.width,crop.height,0,0,crop.width,crop.height);};PIXI.CanvasTinter.tintWithPerPixel=function(texture,color,canvas)
 {var context=canvas.getContext("2d");var crop=texture.crop;canvas.width=crop.width;canvas.height=crop.height;context.globalCompositeOperation="copy";context.drawImage(texture.baseTexture.source,crop.x,crop.y,crop.width,crop.height,0,0,crop.width,crop.height);var rgbValues=PIXI.hex2rgb(color);var r=rgbValues[0],g=rgbValues[1],b=rgbValues[2];var pixelData=context.getImageData(0,0,crop.width,crop.height);var pixels=pixelData.data;for(var i=0;i<pixels.length;i+=4)
 {pixels[i+0]*=r;pixels[i+1]*=g;pixels[i+2]*=b;}
  context.putImageData(pixelData,0,0);};PIXI.CanvasTinter.roundColor=function(color)
 {var step=PIXI.CanvasTinter.cacheStepsPerColorChannel;var rgbValues=PIXI.hex2rgb(color);rgbValues[0]=Math.min(255,(rgbValues[0]/step)*step);rgbValues[1]=Math.min(255,(rgbValues[1]/step)*step);rgbValues[2]=Math.min(255,(rgbValues[2]/step)*step);return PIXI.rgb2hex(rgbValues);};PIXI.CanvasTinter.cacheStepsPerColorChannel=8;PIXI.CanvasTinter.convertTintToImage=false;PIXI.CanvasTinter.canUseMultiply=PIXI.canUseNewCanvasBlendModes();PIXI.CanvasTinter.tintMethod=PIXI.CanvasTinter.canUseMultiply?PIXI.CanvasTinter.tintWithMultiply:PIXI.CanvasTinter.tintWithPerPixel;PIXI.CanvasRenderer=function(width,height,options)
 {if(options)
 {for(var i in PIXI.defaultRenderOptions)
 {if(typeof options[i]==="undefined")options[i]=PIXI.defaultRenderOptions[i];}}
 else
 {options=PIXI.defaultRenderOptions;}
  if(!PIXI.defaultRenderer)
  {PIXI.sayHello("Canvas");PIXI.defaultRenderer=this;}
  this.type=PIXI.CANVAS_RENDERER;this.resolution=options.resolution;this.clearBeforeRender=options.clearBeforeRender;this.transparent=options.transparent;this.autoResize=options.autoResize||false;this.width=width||800;this.height=height||600;this.width*=this.resolution;this.height*=this.resolution;this.view=options.view||document.createElement("canvas");this.context=this.view.getContext("2d",{alpha:this.transparent});this.refresh=true;this.view.width=this.width*this.resolution;this.view.height=this.height*this.resolution;this.count=0;this.maskManager=new PIXI.CanvasMaskManager();this.renderSession={context:this.context,maskManager:this.maskManager,scaleMode:null,smoothProperty:null,roundPixels:false};this.mapBlendModes();this.resize(width,height);if("imageSmoothingEnabled"in this.context)
  this.renderSession.smoothProperty="imageSmoothingEnabled";else if("webkitImageSmoothingEnabled"in this.context)
  this.renderSession.smoothProperty="webkitImageSmoothingEnabled";else if("mozImageSmoothingEnabled"in this.context)
  this.renderSession.smoothProperty="mozImageSmoothingEnabled";else if("oImageSmoothingEnabled"in this.context)
  this.renderSession.smoothProperty="oImageSmoothingEnabled";else if("msImageSmoothingEnabled"in this.context)
  this.renderSession.smoothProperty="msImageSmoothingEnabled";};PIXI.CanvasRenderer.prototype.constructor=PIXI.CanvasRenderer;PIXI.CanvasRenderer.prototype.render=function(stage)
 {stage.updateTransform();this.context.setTransform(1,0,0,1,0,0);this.context.globalAlpha=1;this.renderSession.currentBlendMode=PIXI.blendModes.NORMAL;this.context.globalCompositeOperation=PIXI.blendModesCanvas[PIXI.blendModes.NORMAL];if(navigator.isCocoonJS&&this.view.screencanvas){this.context.fillStyle="black";this.context.clear();}
  if(this.clearBeforeRender)
  {if(this.transparent)
  {this.context.clearRect(0,0,this.width,this.height);}
  else
  {this.context.fillStyle=stage.backgroundColorString;this.context.fillRect(0,0,this.width,this.height);}}
  this.renderDisplayObject(stage);if(stage.interactive)
 {if(!stage._interactiveEventsAdded)
 {stage._interactiveEventsAdded=true;stage.interactionManager.setTarget(this);}}};PIXI.CanvasRenderer.prototype.destroy=function(removeView)
 {if(typeof removeView==="undefined"){removeView=true;}
  if(removeView&&this.view.parent)
  {this.view.parent.removeChild(this.view);}
  this.view=null;this.context=null;this.maskManager=null;this.renderSession=null;};PIXI.CanvasRenderer.prototype.resize=function(width,height)
 {this.width=width*this.resolution;this.height=height*this.resolution;this.view.width=this.width;this.view.height=this.height;if(this.autoResize){this.view.style.width=this.width/this.resolution+"px";this.view.style.height=this.height/this.resolution+"px";}};PIXI.CanvasRenderer.prototype.renderDisplayObject=function(displayObject,context)
 {this.renderSession.context=context||this.context;this.renderSession.resolution=this.resolution;displayObject._renderCanvas(this.renderSession);};PIXI.CanvasRenderer.prototype.mapBlendModes=function()
 {if(!PIXI.blendModesCanvas)
 {PIXI.blendModesCanvas=[];if(PIXI.canUseNewCanvasBlendModes())
 {PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.ADD]="lighter";PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY]="multiply";PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]="screen";PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]="overlay";PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]="darken";PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]="lighten";PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE]="color-dodge";PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN]="color-burn";PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT]="hard-light";PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT]="soft-light";PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE]="difference";PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION]="exclusion";PIXI.blendModesCanvas[PIXI.blendModes.HUE]="hue";PIXI.blendModesCanvas[PIXI.blendModes.SATURATION]="saturation";PIXI.blendModesCanvas[PIXI.blendModes.COLOR]="color";PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY]="luminosity";}
 else
 {PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.ADD]="lighter";PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.HUE]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.SATURATION]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.COLOR]="source-over";PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY]="source-over";}}};PIXI.CanvasGraphics=function()
 {};PIXI.CanvasGraphics.renderGraphics=function(graphics,context)
 {var worldAlpha=graphics.worldAlpha;if(graphics.dirty)
 {this.updateGraphicsTint(graphics);graphics.dirty=false;}
  for(var i=0;i<graphics.graphicsData.length;i++)
  {var data=graphics.graphicsData[i];var shape=data.shape;var fillColor=data._fillTint;var lineColor=data._lineTint;context.lineWidth=data.lineWidth;if(data.type===PIXI.Graphics.POLY)
  {context.beginPath();var points=shape.points;context.moveTo(points[0],points[1]);for(var j=1;j<points.length/2;j++)
  {context.lineTo(points[j*2],points[j*2+1]);}
   if(shape.closed)
   {context.lineTo(points[0],points[1]);}
   if(points[0]===points[points.length-2]&&points[1]===points[points.length-1])
   {context.closePath();}
   if(data.fill)
   {context.globalAlpha=data.fillAlpha*worldAlpha;context.fillStyle='#'+('00000'+(fillColor|0).toString(16)).substr(-6);context.fill();}
   if(data.lineWidth)
   {context.globalAlpha=data.lineAlpha*worldAlpha;context.strokeStyle='#'+('00000'+(lineColor|0).toString(16)).substr(-6);context.stroke();}}
  else if(data.type===PIXI.Graphics.RECT)
  {if(data.fillColor||data.fillColor===0)
  {context.globalAlpha=data.fillAlpha*worldAlpha;context.fillStyle='#'+('00000'+(fillColor|0).toString(16)).substr(-6);context.fillRect(shape.x,shape.y,shape.width,shape.height);}
   if(data.lineWidth)
   {context.globalAlpha=data.lineAlpha*worldAlpha;context.strokeStyle='#'+('00000'+(lineColor|0).toString(16)).substr(-6);context.strokeRect(shape.x,shape.y,shape.width,shape.height);}}
  else if(data.type===PIXI.Graphics.CIRC)
  {context.beginPath();context.arc(shape.x,shape.y,shape.radius,0,2*Math.PI);context.closePath();if(data.fill)
  {context.globalAlpha=data.fillAlpha*worldAlpha;context.fillStyle='#'+('00000'+(fillColor|0).toString(16)).substr(-6);context.fill();}
   if(data.lineWidth)
   {context.globalAlpha=data.lineAlpha*worldAlpha;context.strokeStyle='#'+('00000'+(lineColor|0).toString(16)).substr(-6);context.stroke();}}
  else if(data.type===PIXI.Graphics.ELIP)
  {var w=shape.width*2;var h=shape.height*2;var x=shape.x-w/2;var y=shape.y-h/2;context.beginPath();var kappa=0.5522848,ox=(w/2)*kappa,oy=(h/2)*kappa,xe=x+w,ye=y+h,xm=x+w/2,ym=y+h/2;context.moveTo(x,ym);context.bezierCurveTo(x,ym-oy,xm-ox,y,xm,y);context.bezierCurveTo(xm+ox,y,xe,ym-oy,xe,ym);context.bezierCurveTo(xe,ym+oy,xm+ox,ye,xm,ye);context.bezierCurveTo(xm-ox,ye,x,ym+oy,x,ym);context.closePath();if(data.fill)
  {context.globalAlpha=data.fillAlpha*worldAlpha;context.fillStyle='#'+('00000'+(fillColor|0).toString(16)).substr(-6);context.fill();}
   if(data.lineWidth)
   {context.globalAlpha=data.lineAlpha*worldAlpha;context.strokeStyle='#'+('00000'+(lineColor|0).toString(16)).substr(-6);context.stroke();}}
  else if(data.type===PIXI.Graphics.RREC)
  {var rx=shape.x;var ry=shape.y;var width=shape.width;var height=shape.height;var radius=shape.radius;var maxRadius=Math.min(width,height)/2|0;radius=radius>maxRadius?maxRadius:radius;context.beginPath();context.moveTo(rx,ry+radius);context.lineTo(rx,ry+height-radius);context.quadraticCurveTo(rx,ry+height,rx+radius,ry+height);context.lineTo(rx+width-radius,ry+height);context.quadraticCurveTo(rx+width,ry+height,rx+width,ry+height-radius);context.lineTo(rx+width,ry+radius);context.quadraticCurveTo(rx+width,ry,rx+width-radius,ry);context.lineTo(rx+radius,ry);context.quadraticCurveTo(rx,ry,rx,ry+radius);context.closePath();if(data.fillColor||data.fillColor===0)
  {context.globalAlpha=data.fillAlpha*worldAlpha;context.fillStyle='#'+('00000'+(fillColor|0).toString(16)).substr(-6);context.fill();}
   if(data.lineWidth)
   {context.globalAlpha=data.lineAlpha*worldAlpha;context.strokeStyle='#'+('00000'+(lineColor|0).toString(16)).substr(-6);context.stroke();}}}};PIXI.CanvasGraphics.renderGraphicsMask=function(graphics,context)
 {var len=graphics.graphicsData.length;if(len===0)return;if(len>1)
 {len=1;window.console.log('Pixi.js warning: masks in canvas can only mask using the first path in the graphics object');}
  for(var i=0;i<1;i++)
  {var data=graphics.graphicsData[i];var shape=data.shape;if(data.type===PIXI.Graphics.POLY)
  {context.beginPath();var points=shape.points;context.moveTo(points[0],points[1]);for(var j=1;j<points.length/2;j++)
  {context.lineTo(points[j*2],points[j*2+1]);}
   if(points[0]===points[points.length-2]&&points[1]===points[points.length-1])
   {context.closePath();}}
  else if(data.type===PIXI.Graphics.RECT)
  {context.beginPath();context.rect(shape.x,shape.y,shape.width,shape.height);context.closePath();}
  else if(data.type===PIXI.Graphics.CIRC)
  {context.beginPath();context.arc(shape.x,shape.y,shape.radius,0,2*Math.PI);context.closePath();}
  else if(data.type===PIXI.Graphics.ELIP)
  {var w=shape.width*2;var h=shape.height*2;var x=shape.x-w/2;var y=shape.y-h/2;context.beginPath();var kappa=0.5522848,ox=(w/2)*kappa,oy=(h/2)*kappa,xe=x+w,ye=y+h,xm=x+w/2,ym=y+h/2;context.moveTo(x,ym);context.bezierCurveTo(x,ym-oy,xm-ox,y,xm,y);context.bezierCurveTo(xm+ox,y,xe,ym-oy,xe,ym);context.bezierCurveTo(xe,ym+oy,xm+ox,ye,xm,ye);context.bezierCurveTo(xm-ox,ye,x,ym+oy,x,ym);context.closePath();}
  else if(data.type===PIXI.Graphics.RREC)
  {var rx=shape.x;var ry=shape.y;var width=shape.width;var height=shape.height;var radius=shape.radius;var maxRadius=Math.min(width,height)/2|0;radius=radius>maxRadius?maxRadius:radius;context.beginPath();context.moveTo(rx,ry+radius);context.lineTo(rx,ry+height-radius);context.quadraticCurveTo(rx,ry+height,rx+radius,ry+height);context.lineTo(rx+width-radius,ry+height);context.quadraticCurveTo(rx+width,ry+height,rx+width,ry+height-radius);context.lineTo(rx+width,ry+radius);context.quadraticCurveTo(rx+width,ry,rx+width-radius,ry);context.lineTo(rx+radius,ry);context.quadraticCurveTo(rx,ry,rx,ry+radius);context.closePath();}}};PIXI.CanvasGraphics.updateGraphicsTint=function(graphics)
 {if(graphics.tint===0xFFFFFF)return;var tintR=(graphics.tint>>16&0xFF)/255;var tintG=(graphics.tint>>8&0xFF)/255;var tintB=(graphics.tint&0xFF)/255;for(var i=0;i<graphics.graphicsData.length;i++)
 {var data=graphics.graphicsData[i];var fillColor=data.fillColor|0;var lineColor=data.lineColor|0;data._fillTint=(((fillColor>>16&0xFF)/255*tintR*255<<16)+((fillColor>>8&0xFF)/255*tintG*255<<8)+(fillColor&0xFF)/255*tintB*255);data._lineTint=(((lineColor>>16&0xFF)/255*tintR*255<<16)+((lineColor>>8&0xFF)/255*tintG*255<<8)+(lineColor&0xFF)/255*tintB*255);}};PIXI.Graphics=function()
 {PIXI.DisplayObjectContainer.call(this);this.renderable=true;this.fillAlpha=1;this.lineWidth=0;this.lineColor=0;this.graphicsData=[];this.tint=0xFFFFFF;this.blendMode=PIXI.blendModes.NORMAL;this.currentPath=null;this._webGL=[];this.isMask=false;this.boundsPadding=0;this._localBounds=new PIXI.Rectangle(0,0,1,1);this.dirty=true;this.webGLDirty=false;this.cachedSpriteDirty=false;};PIXI.Graphics.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.Graphics.prototype.constructor=PIXI.Graphics;Object.defineProperty(PIXI.Graphics.prototype,"cacheAsBitmap",{get:function(){return this._cacheAsBitmap;},set:function(value){this._cacheAsBitmap=value;if(this._cacheAsBitmap)
 {this._generateCachedSprite();}
 else
 {this.destroyCachedSprite();this.dirty=true;}}});PIXI.Graphics.prototype.endGradient=function(){this.gradientColors=null;};PIXI.Graphics.prototype.beginGradient=function(colors,ratios,alphas,rect){this.gradientColors=[];for(var c in colors){var hex=colors[c];this.gradientColors.push('rgba('+((hex>>16)&255)+','+((hex>>8)&255)+','+(hex&255)+","+alphas[c]+')');}
  this.gradientRatios=ratios;this.gradientRect=rect;};PIXI.Graphics.prototype.lineStyle=function(lineWidth,color,alpha)
 {this.lineWidth=lineWidth||0;this.lineColor=color||0;this.lineAlpha=(arguments.length<3)?1:alpha;if(this.currentPath)
 {if(this.currentPath.shape.points.length)
 {this.drawShape(new PIXI.Polygon(this.currentPath.shape.points.slice(-2)));return this;}
  this.currentPath.lineWidth=this.lineWidth;this.currentPath.lineColor=this.lineColor;this.currentPath.lineAlpha=this.lineAlpha;}
  return this;};PIXI.Graphics.prototype.moveTo=function(x,y)
 {this.drawShape(new PIXI.Polygon([x,y]));return this;};PIXI.Graphics.prototype.lineTo=function(x,y)
 {this.currentPath.shape.points.push(x,y);this.dirty=true;return this;};PIXI.Graphics.prototype.quadraticCurveTo=function(cpX,cpY,toX,toY)
 {if(this.currentPath)
 {if(this.currentPath.shape.points.length===0)this.currentPath.shape.points=[0,0];}
 else
 {this.moveTo(0,0);}
  var xa,ya,n=20,points=this.currentPath.shape.points;if(points.length===0)this.moveTo(0,0);var fromX=points[points.length-2];var fromY=points[points.length-1];var j=0;for(var i=1;i<=n;i++)
 {j=i/n;xa=fromX+((cpX-fromX)*j);ya=fromY+((cpY-fromY)*j);points.push(xa+(((cpX+((toX-cpX)*j))-xa)*j),ya+(((cpY+((toY-cpY)*j))-ya)*j));}
  this.dirty=true;return this;};PIXI.Graphics.prototype.bezierCurveTo=function(cpX,cpY,cpX2,cpY2,toX,toY)
 {if(this.currentPath)
 {if(this.currentPath.shape.points.length===0)this.currentPath.shape.points=[0,0];}
 else
 {this.moveTo(0,0);}
  var n=20,dt,dt2,dt3,t2,t3,points=this.currentPath.shape.points;var fromX=points[points.length-2];var fromY=points[points.length-1];var j=0;for(var i=1;i<=n;i++)
 {j=i/n;dt=(1-j);dt2=dt*dt;dt3=dt2*dt;t2=j*j;t3=t2*j;points.push(dt3*fromX+3*dt2*j*cpX+3*dt*t2*cpX2+t3*toX,dt3*fromY+3*dt2*j*cpY+3*dt*t2*cpY2+t3*toY);}
  this.dirty=true;return this;};PIXI.Graphics.prototype.arcTo=function(x1,y1,x2,y2,radius)
 {if(this.currentPath)
 {if(this.currentPath.shape.points.length===0)
 {this.currentPath.shape.points.push(x1,y1);}}
 else
 {this.moveTo(x1,y1);}
  var points=this.currentPath.shape.points;var fromX=points[points.length-2];var fromY=points[points.length-1];var a1=fromY-y1;var b1=fromX-x1;var a2=y2-y1;var b2=x2-x1;var mm=Math.abs(a1*b2-b1*a2);if(mm<1.0e-8||radius===0)
 {if(points[points.length-2]!==x1||points[points.length-1]!==y1)
 {points.push(x1,y1);}}
 else
 {var dd=a1*a1+b1*b1;var cc=a2*a2+b2*b2;var tt=a1*a2+b1*b2;var k1=radius*Math.sqrt(dd)/mm;var k2=radius*Math.sqrt(cc)/mm;var j1=k1*tt/dd;var j2=k2*tt/cc;var cx=k1*b2+k2*b1;var cy=k1*a2+k2*a1;var px=b1*(k2+j1);var py=a1*(k2+j1);var qx=b2*(k1+j2);var qy=a2*(k1+j2);var startAngle=Math.atan2(py-cy,px-cx);var endAngle=Math.atan2(qy-cy,qx-cx);this.arc(cx+x1,cy+y1,radius,startAngle,endAngle,b1*a2>b2*a1);}
  this.dirty=true;return this;};PIXI.Graphics.prototype.arc=function(cx,cy,radius,startAngle,endAngle,anticlockwise)
 {var startX=cx+Math.cos(startAngle)*radius;var startY=cy+Math.sin(startAngle)*radius;var points;if(this.currentPath)
 {points=this.currentPath.shape.points;if(points.length===0)
 {points.push(startX,startY);}
 else if(points[points.length-2]!==startX||points[points.length-1]!==startY)
 {points.push(startX,startY);}}
 else
 {this.moveTo(startX,startY);points=this.currentPath.shape.points;}
  if(startAngle===endAngle)return this;if(!anticlockwise&&endAngle<=startAngle)
 {endAngle+=Math.PI*2;}
 else if(anticlockwise&&startAngle<=endAngle)
 {startAngle+=Math.PI*2;}
  var sweep=anticlockwise?(startAngle-endAngle)*-1:(endAngle-startAngle);var segs=(Math.abs(sweep)/(Math.PI*2))*40;if(sweep===0)return this;var theta=sweep/(segs*2);var theta2=theta*2;var cTheta=Math.cos(theta);var sTheta=Math.sin(theta);var segMinus=segs-1;var remainder=(segMinus%1)/segMinus;for(var i=0;i<=segMinus;i++)
 {var real=i+remainder*i;var angle=((theta)+startAngle+(theta2*real));var c=Math.cos(angle);var s=-Math.sin(angle);points.push(((cTheta*c)+(sTheta*s))*radius+cx,((cTheta*-s)+(sTheta*c))*radius+cy);}
  this.dirty=true;return this;};PIXI.Graphics.prototype.beginFill=function(color,alpha)
 {this.filling=true;this.fillColor=color||0;this.fillAlpha=(alpha===undefined)?1:alpha;if(this.currentPath)
 {if(this.currentPath.shape.points.length<=2)
 {this.currentPath.fill=this.filling;this.currentPath.fillColor=this.fillColor;this.currentPath.fillAlpha=this.fillAlpha;}}
  return this;};PIXI.Graphics.prototype.endFill=function()
 {this.filling=false;this.fillColor=null;this.fillAlpha=1;return this;};PIXI.Graphics.prototype.drawRect=function(x,y,width,height)
 {this.drawShape(new PIXI.Rectangle(x,y,width,height));return this;};PIXI.Graphics.prototype.drawRoundedRect=function(x,y,width,height,radius)
 {this.drawShape(new PIXI.RoundedRectangle(x,y,width,height,radius));return this;};PIXI.Graphics.prototype.drawCircle=function(x,y,radius)
 {this.drawShape(new PIXI.Circle(x,y,radius));return this;};PIXI.Graphics.prototype.drawEllipse=function(x,y,width,height)
 {this.drawShape(new PIXI.Ellipse(x,y,width,height));return this;};PIXI.Graphics.prototype.drawPolygon=function(path)
 {if(!(path instanceof Array))path=Array.prototype.slice.call(arguments);this.drawShape(new PIXI.Polygon(path));return this;};PIXI.Graphics.prototype.clear=function()
 {this.lineWidth=0;this.filling=false;this.dirty=true;this.clearDirty=true;this.graphicsData=[];return this;};PIXI.Graphics.prototype.generateTexture=function(resolution,scaleMode)
 {resolution=resolution||1;var bounds=this.getBounds();var canvasBuffer=new PIXI.CanvasBuffer(bounds.width*resolution,bounds.height*resolution);var texture=PIXI.Texture.fromCanvas(canvasBuffer.canvas,scaleMode);texture.baseTexture.resolution=resolution;canvasBuffer.context.scale(resolution,resolution);canvasBuffer.context.translate(-bounds.x,-bounds.y);PIXI.CanvasGraphics.renderGraphics(this,canvasBuffer.context);return texture;};PIXI.Graphics.prototype._renderWebGL=function(renderSession)
 {if(this.visible===false||this.alpha===0||this.isMask===true)return;if(this._cacheAsBitmap)
 {if(this.dirty||this.cachedSpriteDirty)
 {this._generateCachedSprite();this.updateCachedSpriteTexture();this.cachedSpriteDirty=false;this.dirty=false;}
  this._cachedSprite.worldAlpha=this.worldAlpha;PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite,renderSession);return;}
 else
 {renderSession.spriteBatch.stop();renderSession.blendModeManager.setBlendMode(this.blendMode);if(this._mask)renderSession.maskManager.pushMask(this._mask,renderSession);if(this._filters)renderSession.filterManager.pushFilter(this._filterBlock);if(this.blendMode!==renderSession.spriteBatch.currentBlendMode)
 {renderSession.spriteBatch.currentBlendMode=this.blendMode;var blendModeWebGL=PIXI.blendModesWebGL[renderSession.spriteBatch.currentBlendMode];renderSession.spriteBatch.gl.blendFunc(blendModeWebGL[0],blendModeWebGL[1]);}
  if(this.webGLDirty)
  {this.dirty=true;this.webGLDirty=false;}
  PIXI.WebGLGraphics.renderGraphics(this,renderSession);if(this.children.length)
 {renderSession.spriteBatch.start();for(var i=0,j=this.children.length;i<j;i++)
 {this.children[i]._renderWebGL(renderSession);}
  renderSession.spriteBatch.stop();}
  if(this._filters)renderSession.filterManager.popFilter();if(this._mask)renderSession.maskManager.popMask(this.mask,renderSession);renderSession.drawCount++;renderSession.spriteBatch.start();}};PIXI.Graphics.prototype._renderCanvas=function(renderSession)
 {if(this.visible===false||this.alpha===0||this.isMask===true)return;if(this._cacheAsBitmap)
 {if(this.dirty||this.cachedSpriteDirty)
 {this._generateCachedSprite();this.updateCachedSpriteTexture();this.cachedSpriteDirty=false;this.dirty=false;}
  this._cachedSprite.alpha=this.alpha;PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite,renderSession);return;}
 else
 {var context=renderSession.context;var transform=this.worldTransform;if(this.blendMode!==renderSession.currentBlendMode)
 {renderSession.currentBlendMode=this.blendMode;context.globalCompositeOperation=PIXI.blendModesCanvas[renderSession.currentBlendMode];}
  if(this._mask)
  {renderSession.maskManager.pushMask(this._mask,renderSession);}
  var resolution=renderSession.resolution;context.setTransform(transform.a*resolution,transform.b*resolution,transform.c*resolution,transform.d*resolution,transform.tx*resolution,transform.ty*resolution);PIXI.CanvasGraphics.renderGraphics(this,context);for(var i=0,j=this.children.length;i<j;i++)
 {this.children[i]._renderCanvas(renderSession);}
  if(this._mask)
  {renderSession.maskManager.popMask(renderSession);}}};PIXI.Graphics.prototype.getBounds=function(matrix)
 {if(this.isMask)return PIXI.EmptyRectangle;if(this.dirty)
 {this.updateLocalBounds();this.webGLDirty=true;this.cachedSpriteDirty=true;this.dirty=false;}
  var bounds=this._localBounds;var w0=bounds.x;var w1=bounds.width+bounds.x;var h0=bounds.y;var h1=bounds.height+bounds.y;var worldTransform=matrix||this.worldTransform;var a=worldTransform.a;var b=worldTransform.b;var c=worldTransform.c;var d=worldTransform.d;var tx=worldTransform.tx;var ty=worldTransform.ty;var x1=a*w1+c*h1+tx;var y1=d*h1+b*w1+ty;var x2=a*w0+c*h1+tx;var y2=d*h1+b*w0+ty;var x3=a*w0+c*h0+tx;var y3=d*h0+b*w0+ty;var x4=a*w1+c*h0+tx;var y4=d*h0+b*w1+ty;var maxX=x1;var maxY=y1;var minX=x1;var minY=y1;minX=x2<minX?x2:minX;minX=x3<minX?x3:minX;minX=x4<minX?x4:minX;minY=y2<minY?y2:minY;minY=y3<minY?y3:minY;minY=y4<minY?y4:minY;maxX=x2>maxX?x2:maxX;maxX=x3>maxX?x3:maxX;maxX=x4>maxX?x4:maxX;maxY=y2>maxY?y2:maxY;maxY=y3>maxY?y3:maxY;maxY=y4>maxY?y4:maxY;this._bounds.x=minX;this._bounds.width=maxX-minX;this._bounds.y=minY;this._bounds.height=maxY-minY;return this._bounds;};PIXI.Graphics.prototype.updateLocalBounds=function()
 {var minX=Infinity;var maxX=-Infinity;var minY=Infinity;var maxY=-Infinity;if(this.graphicsData.length)
 {var shape,points,x,y,w,h;for(var i=0;i<this.graphicsData.length;i++){var data=this.graphicsData[i];var type=data.type;var lineWidth=data.lineWidth;shape=data.shape;if(type===PIXI.Graphics.RECT||type===PIXI.Graphics.RREC)
 {x=shape.x-lineWidth/2;y=shape.y-lineWidth/2;w=shape.width+lineWidth;h=shape.height+lineWidth;minX=x<minX?x:minX;maxX=x+w>maxX?x+w:maxX;minY=y<minY?y:minY;maxY=y+h>maxY?y+h:maxY;}
 else if(type===PIXI.Graphics.CIRC)
 {x=shape.x;y=shape.y;w=shape.radius+lineWidth/2;h=shape.radius+lineWidth/2;minX=x-w<minX?x-w:minX;maxX=x+w>maxX?x+w:maxX;minY=y-h<minY?y-h:minY;maxY=y+h>maxY?y+h:maxY;}
 else if(type===PIXI.Graphics.ELIP)
 {x=shape.x;y=shape.y;w=shape.width+lineWidth/2;h=shape.height+lineWidth/2;minX=x-w<minX?x-w:minX;maxX=x+w>maxX?x+w:maxX;minY=y-h<minY?y-h:minY;maxY=y+h>maxY?y+h:maxY;}
 else
 {points=shape.points;for(var j=0;j<points.length;j+=2)
 {x=points[j];y=points[j+1];minX=x-lineWidth<minX?x-lineWidth:minX;maxX=x+lineWidth>maxX?x+lineWidth:maxX;minY=y-lineWidth<minY?y-lineWidth:minY;maxY=y+lineWidth>maxY?y+lineWidth:maxY;}}}}
 else
 {minX=0;maxX=0;minY=0;maxY=0;}
  var padding=this.boundsPadding;this._localBounds.x=minX-padding;this._localBounds.width=(maxX-minX)+padding*2;this._localBounds.y=minY-padding;this._localBounds.height=(maxY-minY)+padding*2;};PIXI.Graphics.prototype._generateCachedSprite=function()
 {var bounds=this.getLocalBounds();if(!this._cachedSprite)
 {var canvasBuffer=new PIXI.CanvasBuffer(bounds.width,bounds.height);var texture=PIXI.Texture.fromCanvas(canvasBuffer.canvas);this._cachedSprite=new PIXI.Sprite(texture);this._cachedSprite.buffer=canvasBuffer;this._cachedSprite.worldTransform=this.worldTransform;}
 else
 {this._cachedSprite.buffer.resize(bounds.width,bounds.height);}
  this._cachedSprite.anchor.x=-(bounds.x/bounds.width);this._cachedSprite.anchor.y=-(bounds.y/bounds.height);this._cachedSprite.buffer.context.translate(-bounds.x,-bounds.y);this.worldAlpha=1;PIXI.CanvasGraphics.renderGraphics(this,this._cachedSprite.buffer.context);this._cachedSprite.alpha=this.alpha;};PIXI.Graphics.prototype.updateCachedSpriteTexture=function()
 {var cachedSprite=this._cachedSprite;var texture=cachedSprite.texture;var canvas=cachedSprite.buffer.canvas;texture.baseTexture.width=canvas.width;texture.baseTexture.height=canvas.height;texture.crop.width=texture.frame.width=canvas.width;texture.crop.height=texture.frame.height=canvas.height;cachedSprite._width=canvas.width;cachedSprite._height=canvas.height;texture.baseTexture.dirty();};PIXI.Graphics.prototype.destroyCachedSprite=function()
 {this._cachedSprite.texture.destroy(true);this._cachedSprite=null;};PIXI.Graphics.prototype.drawShape=function(shape)
 {if(this.currentPath)
 {if(this.currentPath.shape.points.length<=2)this.graphicsData.pop();}
  this.currentPath=null;var data=new PIXI.GraphicsData(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.filling,shape);this.graphicsData.push(data);if(data.type===PIXI.Graphics.POLY)
 {data.shape.closed=this.filling;this.currentPath=data;}
  this.dirty=true;return data;};PIXI.GraphicsData=function(lineWidth,lineColor,lineAlpha,fillColor,fillAlpha,fill,shape)
 {this.lineWidth=lineWidth;this.lineColor=lineColor;this.lineAlpha=lineAlpha;this._lineTint=lineColor;this.fillColor=fillColor;this.fillAlpha=fillAlpha;this._fillTint=fillColor;this.fill=fill;this.shape=shape;this.type=shape.type;};PIXI.Graphics.POLY=0;PIXI.Graphics.RECT=1;PIXI.Graphics.CIRC=2;PIXI.Graphics.ELIP=3;PIXI.Graphics.RREC=4;PIXI.Polygon.prototype.type=PIXI.Graphics.POLY;PIXI.Rectangle.prototype.type=PIXI.Graphics.RECT;PIXI.Circle.prototype.type=PIXI.Graphics.CIRC;PIXI.Ellipse.prototype.type=PIXI.Graphics.ELIP;PIXI.RoundedRectangle.prototype.type=PIXI.Graphics.RREC;PIXI.Strip=function(texture)
 {PIXI.DisplayObjectContainer.call(this);this.texture=texture;this.uvs=new PIXI.Float32Array([0,1,1,1,1,0,0,1]);this.vertices=new PIXI.Float32Array([0,0,100,0,100,100,0,100]);this.colors=new PIXI.Float32Array([1,1,1,1]);this.indices=new PIXI.Uint16Array([0,1,2,3]);this.dirty=true;this.blendMode=PIXI.blendModes.NORMAL;this.canvasPadding=0;this.drawMode=PIXI.Strip.DrawModes.TRIANGLE_STRIP;};PIXI.Strip.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.Strip.prototype.constructor=PIXI.Strip;PIXI.Strip.prototype._renderWebGL=function(renderSession)
 {if(!this.visible||this.alpha<=0)return;renderSession.spriteBatch.stop();if(!this._vertexBuffer)this._initWebGL(renderSession);renderSession.shaderManager.setShader(renderSession.shaderManager.stripShader);this._renderStrip(renderSession);renderSession.spriteBatch.start();};PIXI.Strip.prototype._initWebGL=function(renderSession)
 {var gl=renderSession.gl;this._vertexBuffer=gl.createBuffer();this._indexBuffer=gl.createBuffer();this._uvBuffer=gl.createBuffer();this._colorBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this._vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.vertices,gl.DYNAMIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,this._uvBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.uvs,gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,this._colorBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.colors,gl.STATIC_DRAW);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this._indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);};PIXI.Strip.prototype._renderStrip=function(renderSession)
 {var gl=renderSession.gl;var projection=renderSession.projection,offset=renderSession.offset,shader=renderSession.shaderManager.stripShader;var drawMode=this.drawMode===PIXI.Strip.DrawModes.TRIANGLE_STRIP?gl.TRIANGLE_STRIP:gl.TRIANGLES;renderSession.blendModeManager.setBlendMode(this.blendMode);gl.uniformMatrix3fv(shader.translationMatrix,false,this.worldTransform.toArray(true));gl.uniform2f(shader.projectionVector,projection.x,-projection.y);gl.uniform2f(shader.offsetVector,-offset.x,-offset.y);gl.uniform1f(shader.alpha,this.worldAlpha);if(!this.dirty)
 {gl.bindBuffer(gl.ARRAY_BUFFER,this._vertexBuffer);gl.bufferSubData(gl.ARRAY_BUFFER,0,this.vertices);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this._uvBuffer);gl.vertexAttribPointer(shader.aTextureCoord,2,gl.FLOAT,false,0,0);gl.activeTexture(gl.TEXTURE0);if(this.texture.baseTexture._dirty[gl.id])
 {renderSession.renderer.updateTexture(this.texture.baseTexture);}
 else
 {gl.bindTexture(gl.TEXTURE_2D,this.texture.baseTexture._glTextures[gl.id]);}
  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this._indexBuffer);}
 else
 {this.dirty=false;gl.bindBuffer(gl.ARRAY_BUFFER,this._vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.vertices,gl.STATIC_DRAW);gl.vertexAttribPointer(shader.aVertexPosition,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this._uvBuffer);gl.bufferData(gl.ARRAY_BUFFER,this.uvs,gl.STATIC_DRAW);gl.vertexAttribPointer(shader.aTextureCoord,2,gl.FLOAT,false,0,0);gl.activeTexture(gl.TEXTURE0);if(this.texture.baseTexture._dirty[gl.id])
 {renderSession.renderer.updateTexture(this.texture.baseTexture);}
 else
 {gl.bindTexture(gl.TEXTURE_2D,this.texture.baseTexture._glTextures[gl.id]);}
  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this._indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);}
  gl.drawElements(drawMode,this.indices.length,gl.UNSIGNED_SHORT,0);};PIXI.Strip.prototype._renderCanvas=function(renderSession)
 {var context=renderSession.context;var transform=this.worldTransform;if(renderSession.roundPixels)
 {context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx|0,transform.ty|0);}
 else
 {context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);}
  if(this.drawMode===PIXI.Strip.DrawModes.TRIANGLE_STRIP)
  {this._renderCanvasTriangleStrip(context);}
  else
  {this._renderCanvasTriangles(context);}};PIXI.Strip.prototype._renderCanvasTriangleStrip=function(context)
 {var vertices=this.vertices;var uvs=this.uvs;var length=vertices.length/2;this.count++;for(var i=0;i<length-2;i++){var index=i*2;this._renderCanvasDrawTriangle(context,vertices,uvs,index,(index+2),(index+4));}};PIXI.Strip.prototype._renderCanvasTriangles=function(context)
 {var vertices=this.vertices;var uvs=this.uvs;var indices=this.indices;var length=indices.length;this.count++;for(var i=0;i<length;i+=3){var index0=indices[i]*2,index1=indices[i+1]*2,index2=indices[i+2]*2;this._renderCanvasDrawTriangle(context,vertices,uvs,index0,index1,index2);}};PIXI.Strip.prototype._renderCanvasDrawTriangle=function(context,vertices,uvs,index0,index1,index2)
 {var textureSource=this.texture.baseTexture.source;var textureWidth=this.texture.width;var textureHeight=this.texture.height;var x0=vertices[index0],x1=vertices[index1],x2=vertices[index2];var y0=vertices[index0+1],y1=vertices[index1+1],y2=vertices[index2+1];var u0=uvs[index0]*textureWidth,u1=uvs[index1]*textureWidth,u2=uvs[index2]*textureWidth;var v0=uvs[index0+1]*textureHeight,v1=uvs[index1+1]*textureHeight,v2=uvs[index2+1]*textureHeight;if(this.canvasPadding>0){var paddingX=this.canvasPadding/this.worldTransform.a;var paddingY=this.canvasPadding/this.worldTransform.d;var centerX=(x0+x1+x2)/3;var centerY=(y0+y1+y2)/3;var normX=x0-centerX;var normY=y0-centerY;var dist=Math.sqrt(normX*normX+normY*normY);x0=centerX+(normX/dist)*(dist+paddingX);y0=centerY+(normY/dist)*(dist+paddingY);normX=x1-centerX;normY=y1-centerY;dist=Math.sqrt(normX*normX+normY*normY);x1=centerX+(normX/dist)*(dist+paddingX);y1=centerY+(normY/dist)*(dist+paddingY);normX=x2-centerX;normY=y2-centerY;dist=Math.sqrt(normX*normX+normY*normY);x2=centerX+(normX/dist)*(dist+paddingX);y2=centerY+(normY/dist)*(dist+paddingY);}
  context.save();context.beginPath();context.moveTo(x0,y0);context.lineTo(x1,y1);context.lineTo(x2,y2);context.closePath();context.clip();var delta=(u0*v1)+(v0*u2)+(u1*v2)-(v1*u2)-(v0*u1)-(u0*v2);var deltaA=(x0*v1)+(v0*x2)+(x1*v2)-(v1*x2)-(v0*x1)-(x0*v2);var deltaB=(u0*x1)+(x0*u2)+(u1*x2)-(x1*u2)-(x0*u1)-(u0*x2);var deltaC=(u0*v1*x2)+(v0*x1*u2)+(x0*u1*v2)-(x0*v1*u2)-(v0*u1*x2)-(u0*x1*v2);var deltaD=(y0*v1)+(v0*y2)+(y1*v2)-(v1*y2)-(v0*y1)-(y0*v2);var deltaE=(u0*y1)+(y0*u2)+(u1*y2)-(y1*u2)-(y0*u1)-(u0*y2);var deltaF=(u0*v1*y2)+(v0*y1*u2)+(y0*u1*v2)-(y0*v1*u2)-(v0*u1*y2)-(u0*y1*v2);context.transform(deltaA/delta,deltaD/delta,deltaB/delta,deltaE/delta,deltaC/delta,deltaF/delta);context.drawImage(textureSource,0,0);context.restore();};PIXI.Strip.prototype.renderStripFlat=function(strip)
 {var context=this.context;var vertices=strip.vertices;var length=vertices.length/2;this.count++;context.beginPath();for(var i=1;i<length-2;i++)
 {var index=i*2;var x0=vertices[index],x1=vertices[index+2],x2=vertices[index+4];var y0=vertices[index+1],y1=vertices[index+3],y2=vertices[index+5];context.moveTo(x0,y0);context.lineTo(x1,y1);context.lineTo(x2,y2);}
  context.fillStyle='#FF0000';context.fill();context.closePath();};PIXI.Strip.prototype.onTextureUpdate=function()
 {this.updateFrame=true;};PIXI.Strip.prototype.getBounds=function(matrix)
 {var worldTransform=matrix||this.worldTransform;var a=worldTransform.a;var b=worldTransform.b;var c=worldTransform.c;var d=worldTransform.d;var tx=worldTransform.tx;var ty=worldTransform.ty;var maxX=-Infinity;var maxY=-Infinity;var minX=Infinity;var minY=Infinity;var vertices=this.vertices;for(var i=0,n=vertices.length;i<n;i+=2)
 {var rawX=vertices[i],rawY=vertices[i+1];var x=(a*rawX)+(c*rawY)+tx;var y=(d*rawY)+(b*rawX)+ty;minX=x<minX?x:minX;minY=y<minY?y:minY;maxX=x>maxX?x:maxX;maxY=y>maxY?y:maxY;}
  if(minX===-Infinity||maxY===Infinity)
  {return PIXI.EmptyRectangle;}
  var bounds=this._bounds;bounds.x=minX;bounds.width=maxX-minX;bounds.y=minY;bounds.height=maxY-minY;this._currentBounds=bounds;return bounds;};PIXI.Strip.DrawModes={TRIANGLE_STRIP:0,TRIANGLES:1};PIXI.Rope=function(texture,points)
 {PIXI.Strip.call(this,texture);this.points=points;this.vertices=new PIXI.Float32Array(points.length*4);this.uvs=new PIXI.Float32Array(points.length*4);this.colors=new PIXI.Float32Array(points.length*2);this.indices=new PIXI.Uint16Array(points.length*2);this.refresh();};PIXI.Rope.prototype=Object.create(PIXI.Strip.prototype);PIXI.Rope.prototype.constructor=PIXI.Rope;PIXI.Rope.prototype.refresh=function()
 {var points=this.points;if(points.length<1)return;var uvs=this.uvs;var lastPoint=points[0];var indices=this.indices;var colors=this.colors;this.count-=0.2;uvs[0]=0;uvs[1]=0;uvs[2]=0;uvs[3]=1;colors[0]=1;colors[1]=1;indices[0]=0;indices[1]=1;var total=points.length,point,index,amount;for(var i=1;i<total;i++)
 {point=points[i];index=i*4;amount=i/(total-1);if(i%2)
 {uvs[index]=amount;uvs[index+1]=0;uvs[index+2]=amount;uvs[index+3]=1;}
 else
 {uvs[index]=amount;uvs[index+1]=0;uvs[index+2]=amount;uvs[index+3]=1;}
  index=i*2;colors[index]=1;colors[index+1]=1;index=i*2;indices[index]=index;indices[index+1]=index+1;lastPoint=point;}};PIXI.Rope.prototype.updateTransform=function()
 {var points=this.points;if(points.length<1)return;var lastPoint=points[0];var nextPoint;var perp={x:0,y:0};this.count-=0.2;var vertices=this.vertices;var total=points.length,point,index,ratio,perpLength,num;for(var i=0;i<total;i++)
 {point=points[i];index=i*4;if(i<points.length-1)
 {nextPoint=points[i+1];}
 else
 {nextPoint=point;}
  perp.y=-(nextPoint.x-lastPoint.x);perp.x=nextPoint.y-lastPoint.y;ratio=(1-(i/(total-1)))*10;if(ratio>1)ratio=1;perpLength=Math.sqrt(perp.x*perp.x+perp.y*perp.y);num=this.texture.height/2;perp.x/=perpLength;perp.y/=perpLength;perp.x*=num;perp.y*=num;vertices[index]=point.x+perp.x;vertices[index+1]=point.y+perp.y;vertices[index+2]=point.x-perp.x;vertices[index+3]=point.y-perp.y;lastPoint=point;}
  PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);};PIXI.Rope.prototype.setTexture=function(texture)
 {this.texture=texture;};PIXI.TilingSprite=function(texture,width,height)
 {PIXI.Sprite.call(this,texture);this._width=width||100;this._height=height||100;this.tileScale=new PIXI.Point(1,1);this.tileScaleOffset=new PIXI.Point(1,1);this.tilePosition=new PIXI.Point(0,0);this.renderable=true;this.tint=0xFFFFFF;this.blendMode=PIXI.blendModes.NORMAL;};PIXI.TilingSprite.prototype=Object.create(PIXI.Sprite.prototype);PIXI.TilingSprite.prototype.constructor=PIXI.TilingSprite;Object.defineProperty(PIXI.TilingSprite.prototype,'width',{get:function(){return this._width;},set:function(value){this._width=value;}});Object.defineProperty(PIXI.TilingSprite.prototype,'height',{get:function(){return this._height;},set:function(value){this._height=value;}});PIXI.TilingSprite.prototype.setTexture=function(texture)
 {if(this.texture===texture)return;this.texture=texture;this.refreshTexture=true;this.cachedTint=0xFFFFFF;};PIXI.TilingSprite.prototype._renderWebGL=function(renderSession)
 {if(this.visible===false||this.alpha===0)return;var i,j;if(this._mask)
 {renderSession.spriteBatch.stop();renderSession.maskManager.pushMask(this.mask,renderSession);renderSession.spriteBatch.start();}
  if(this._filters)
  {renderSession.spriteBatch.flush();renderSession.filterManager.pushFilter(this._filterBlock);}
  if(!this.tilingTexture||this.refreshTexture)
  {this.generateTilingTexture(true);if(this.tilingTexture&&this.tilingTexture.needsUpdate)
  {renderSession.renderer.updateTexture(this.tilingTexture.baseTexture);this.tilingTexture.needsUpdate=false;}}
  else
  {renderSession.spriteBatch.renderTilingSprite(this);}
  for(i=0,j=this.children.length;i<j;i++)
  {this.children[i]._renderWebGL(renderSession);}
  renderSession.spriteBatch.stop();if(this._filters)renderSession.filterManager.popFilter();if(this._mask)renderSession.maskManager.popMask(this._mask,renderSession);renderSession.spriteBatch.start();};PIXI.TilingSprite.prototype._renderCanvas=function(renderSession)
 {if(this.visible===false||this.alpha===0)return;var context=renderSession.context;if(this._mask)
 {renderSession.maskManager.pushMask(this._mask,renderSession);}
  context.globalAlpha=this.worldAlpha;var transform=this.worldTransform;var i,j;var resolution=renderSession.resolution;context.setTransform(transform.a*resolution,transform.b*resolution,transform.c*resolution,transform.d*resolution,transform.tx*resolution,transform.ty*resolution);if(!this.__tilePattern||this.refreshTexture)
 {this.generateTilingTexture(false);if(this.tilingTexture)
 {this.__tilePattern=context.createPattern(this.tilingTexture.baseTexture.source,'repeat');}
 else
 {return;}}
  if(this.blendMode!==renderSession.currentBlendMode)
  {renderSession.currentBlendMode=this.blendMode;context.globalCompositeOperation=PIXI.blendModesCanvas[renderSession.currentBlendMode];}
  var tilePosition=this.tilePosition;var tileScale=this.tileScale;tilePosition.x%=this.tilingTexture.baseTexture.width;tilePosition.y%=this.tilingTexture.baseTexture.height;context.scale(tileScale.x,tileScale.y);context.translate(tilePosition.x+(this.anchor.x*-this._width),tilePosition.y+(this.anchor.y*-this._height));context.fillStyle=this.__tilePattern;context.fillRect(-tilePosition.x,-tilePosition.y,this._width/tileScale.x,this._height/tileScale.y);context.scale(1/tileScale.x,1/tileScale.y);context.translate(-tilePosition.x+(this.anchor.x*this._width),-tilePosition.y+(this.anchor.y*this._height));if(this._mask)
 {renderSession.maskManager.popMask(renderSession);}
  for(i=0,j=this.children.length;i<j;i++)
  {this.children[i]._renderCanvas(renderSession);}};PIXI.TilingSprite.prototype.getBounds=function()
 {var width=this._width;var height=this._height;var w0=width*(1-this.anchor.x);var w1=width*-this.anchor.x;var h0=height*(1-this.anchor.y);var h1=height*-this.anchor.y;var worldTransform=this.worldTransform;var a=worldTransform.a;var b=worldTransform.b;var c=worldTransform.c;var d=worldTransform.d;var tx=worldTransform.tx;var ty=worldTransform.ty;var x1=a*w1+c*h1+tx;var y1=d*h1+b*w1+ty;var x2=a*w0+c*h1+tx;var y2=d*h1+b*w0+ty;var x3=a*w0+c*h0+tx;var y3=d*h0+b*w0+ty;var x4=a*w1+c*h0+tx;var y4=d*h0+b*w1+ty;var maxX=-Infinity;var maxY=-Infinity;var minX=Infinity;var minY=Infinity;minX=x1<minX?x1:minX;minX=x2<minX?x2:minX;minX=x3<minX?x3:minX;minX=x4<minX?x4:minX;minY=y1<minY?y1:minY;minY=y2<minY?y2:minY;minY=y3<minY?y3:minY;minY=y4<minY?y4:minY;maxX=x1>maxX?x1:maxX;maxX=x2>maxX?x2:maxX;maxX=x3>maxX?x3:maxX;maxX=x4>maxX?x4:maxX;maxY=y1>maxY?y1:maxY;maxY=y2>maxY?y2:maxY;maxY=y3>maxY?y3:maxY;maxY=y4>maxY?y4:maxY;var bounds=this._bounds;bounds.x=minX;bounds.width=maxX-minX;bounds.y=minY;bounds.height=maxY-minY;this._currentBounds=bounds;return bounds;};PIXI.TilingSprite.prototype.onTextureUpdate=function()
 {};PIXI.TilingSprite.prototype.generateTilingTexture=function(forcePowerOfTwo)
 {if(!this.texture.baseTexture.hasLoaded)return;var texture=this.originalTexture||this.texture;var frame=texture.frame;var targetWidth,targetHeight;var isFrame=frame.width!==texture.baseTexture.width||frame.height!==texture.baseTexture.height;var newTextureRequired=false;if(!forcePowerOfTwo)
 {if(isFrame)
 {if(texture.trim)
 {targetWidth=texture.trim.width;targetHeight=texture.trim.height;}
 else
 {targetWidth=frame.width;targetHeight=frame.height;}
  newTextureRequired=true;}}
 else
 {targetWidth=PIXI.getNextPowerOfTwo(frame.width);targetHeight=PIXI.getNextPowerOfTwo(frame.height);if(frame.width!==targetWidth||frame.height!==targetHeight||texture.baseTexture.width!==targetWidth||texture.baseTexture.height||targetHeight)newTextureRequired=true;}
  if(newTextureRequired)
  {var canvasBuffer;if(this.tilingTexture&&this.tilingTexture.isTiling)
  {canvasBuffer=this.tilingTexture.canvasBuffer;canvasBuffer.resize(targetWidth,targetHeight);this.tilingTexture.baseTexture.width=targetWidth;this.tilingTexture.baseTexture.height=targetHeight;this.tilingTexture.needsUpdate=true;}
  else
  {canvasBuffer=new PIXI.CanvasBuffer(targetWidth,targetHeight);this.tilingTexture=PIXI.Texture.fromCanvas(canvasBuffer.canvas);this.tilingTexture.canvasBuffer=canvasBuffer;this.tilingTexture.isTiling=true;}
   canvasBuffer.context.drawImage(texture.baseTexture.source,texture.crop.x,texture.crop.y,texture.crop.width,texture.crop.height,0,0,targetWidth,targetHeight);this.tileScaleOffset.x=frame.width/targetWidth;this.tileScaleOffset.y=frame.height/targetHeight;}
  else
  {if(this.tilingTexture&&this.tilingTexture.isTiling)
  {this.tilingTexture.destroy(true);}
   this.tileScaleOffset.x=1;this.tileScaleOffset.y=1;this.tilingTexture=texture;}
  this.refreshTexture=false;this.originalTexture=this.texture;this.texture=this.tilingTexture;this.tilingTexture.baseTexture._powerOf2=true;};PIXI.TilingSprite.prototype.destroy=function(){PIXI.Sprite.prototype.destroy.call(this);this.tileScale=null;this.tileScaleOffset=null;this.tilePosition=null;this.tilingTexture.destroy(true);this.tilingTexture=null;};var spine={radDeg:180/Math.PI,degRad:Math.PI/180,temp:[],Float32Array:(typeof(Float32Array)==='undefined')?Array:Float32Array,Uint16Array:(typeof(Uint16Array)==='undefined')?Array:Uint16Array};spine.BoneData=function(name,parent){this.name=name;this.parent=parent;};spine.BoneData.prototype={length:0,x:0,y:0,rotation:0,scaleX:1,scaleY:1,inheritScale:true,inheritRotation:true,flipX:false,flipY:false};spine.SlotData=function(name,boneData){this.name=name;this.boneData=boneData;};spine.SlotData.prototype={r:1,g:1,b:1,a:1,attachmentName:null,additiveBlending:false};spine.IkConstraintData=function(name){this.name=name;this.bones=[];};spine.IkConstraintData.prototype={target:null,bendDirection:1,mix:1};spine.Bone=function(boneData,skeleton,parent){this.data=boneData;this.skeleton=skeleton;this.parent=parent;this.setToSetupPose();};spine.Bone.yDown=false;spine.Bone.prototype={x:0,y:0,rotation:0,rotationIK:0,scaleX:1,scaleY:1,flipX:false,flipY:false,m00:0,m01:0,worldX:0,m10:0,m11:0,worldY:0,worldRotation:0,worldScaleX:1,worldScaleY:1,worldFlipX:false,worldFlipY:false,updateWorldTransform:function(){var parent=this.parent;if(parent){this.worldX=this.x*parent.m00+this.y*parent.m01+parent.worldX;this.worldY=this.x*parent.m10+this.y*parent.m11+parent.worldY;if(this.data.inheritScale){this.worldScaleX=parent.worldScaleX*this.scaleX;this.worldScaleY=parent.worldScaleY*this.scaleY;}else{this.worldScaleX=this.scaleX;this.worldScaleY=this.scaleY;}
  this.worldRotation=this.data.inheritRotation?(parent.worldRotation+this.rotationIK):this.rotationIK;this.worldFlipX=parent.worldFlipX!=this.flipX;this.worldFlipY=parent.worldFlipY!=this.flipY;}else{var skeletonFlipX=this.skeleton.flipX,skeletonFlipY=this.skeleton.flipY;this.worldX=skeletonFlipX?-this.x:this.x;this.worldY=(skeletonFlipY!=spine.Bone.yDown)?-this.y:this.y;this.worldScaleX=this.scaleX;this.worldScaleY=this.scaleY;this.worldRotation=this.rotationIK;this.worldFlipX=skeletonFlipX!=this.flipX;this.worldFlipY=skeletonFlipY!=this.flipY;}
  var radians=this.worldRotation*spine.degRad;var cos=Math.cos(radians);var sin=Math.sin(radians);if(this.worldFlipX){this.m00=-cos*this.worldScaleX;this.m01=sin*this.worldScaleY;}else{this.m00=cos*this.worldScaleX;this.m01=-sin*this.worldScaleY;}
  if(this.worldFlipY!=spine.Bone.yDown){this.m10=-sin*this.worldScaleX;this.m11=-cos*this.worldScaleY;}else{this.m10=sin*this.worldScaleX;this.m11=cos*this.worldScaleY;}},setToSetupPose:function(){var data=this.data;this.x=data.x;this.y=data.y;this.rotation=data.rotation;this.rotationIK=this.rotation;this.scaleX=data.scaleX;this.scaleY=data.scaleY;this.flipX=data.flipX;this.flipY=data.flipY;},worldToLocal:function(world){var dx=world[0]-this.worldX,dy=world[1]-this.worldY;var m00=this.m00,m10=this.m10,m01=this.m01,m11=this.m11;if(this.worldFlipX!=(this.worldFlipY!=spine.Bone.yDown)){m00=-m00;m11=-m11;}
  var invDet=1/(m00*m11-m01*m10);world[0]=dx*m00*invDet-dy*m01*invDet;world[1]=dy*m11*invDet-dx*m10*invDet;},localToWorld:function(local){var localX=local[0],localY=local[1];local[0]=localX*this.m00+localY*this.m01+this.worldX;local[1]=localX*this.m10+localY*this.m11+this.worldY;}};spine.Slot=function(slotData,bone){this.data=slotData;this.bone=bone;this.setToSetupPose();};spine.Slot.prototype={r:1,g:1,b:1,a:1,_attachmentTime:0,attachment:null,attachmentVertices:[],setAttachment:function(attachment){this.attachment=attachment;this._attachmentTime=this.bone.skeleton.time;this.attachmentVertices.length=0;},setAttachmentTime:function(time){this._attachmentTime=this.bone.skeleton.time-time;},getAttachmentTime:function(){return this.bone.skeleton.time-this._attachmentTime;},setToSetupPose:function(){var data=this.data;this.r=data.r;this.g=data.g;this.b=data.b;this.a=data.a;var slotDatas=this.bone.skeleton.data.slots;for(var i=0,n=slotDatas.length;i<n;i++){if(slotDatas[i]==data){this.setAttachment(!data.attachmentName?null:this.bone.skeleton.getAttachmentBySlotIndex(i,data.attachmentName));break;}}}};spine.IkConstraint=function(data,skeleton){this.data=data;this.mix=data.mix;this.bendDirection=data.bendDirection;this.bones=[];for(var i=0,n=data.bones.length;i<n;i++)
  this.bones.push(skeleton.findBone(data.bones[i].name));this.target=skeleton.findBone(data.target.name);};spine.IkConstraint.prototype={apply:function(){var target=this.target;var bones=this.bones;switch(bones.length){case 1:spine.IkConstraint.apply1(bones[0],target.worldX,target.worldY,this.mix);break;case 2:spine.IkConstraint.apply2(bones[0],bones[1],target.worldX,target.worldY,this.bendDirection,this.mix);break;}}};spine.IkConstraint.apply1=function(bone,targetX,targetY,alpha){var parentRotation=(!bone.data.inheritRotation||!bone.parent)?0:bone.parent.worldRotation;var rotation=bone.rotation;var rotationIK=Math.atan2(targetY-bone.worldY,targetX-bone.worldX)*spine.radDeg-parentRotation;bone.rotationIK=rotation+(rotationIK-rotation)*alpha;};spine.IkConstraint.apply2=function(parent,child,targetX,targetY,bendDirection,alpha){var childRotation=child.rotation,parentRotation=parent.rotation;if(!alpha){child.rotationIK=childRotation;parent.rotationIK=parentRotation;return;}
  var positionX,positionY,tempPosition=spine.temp;var parentParent=parent.parent;if(parentParent){tempPosition[0]=targetX;tempPosition[1]=targetY;parentParent.worldToLocal(tempPosition);targetX=(tempPosition[0]-parent.x)*parentParent.worldScaleX;targetY=(tempPosition[1]-parent.y)*parentParent.worldScaleY;}else{targetX-=parent.x;targetY-=parent.y;}
  if(child.parent==parent){positionX=child.x;positionY=child.y;}else{tempPosition[0]=child.x;tempPosition[1]=child.y;child.parent.localToWorld(tempPosition);parent.worldToLocal(tempPosition);positionX=tempPosition[0];positionY=tempPosition[1];}
  var childX=positionX*parent.worldScaleX,childY=positionY*parent.worldScaleY;var offset=Math.atan2(childY,childX);var len1=Math.sqrt(childX*childX+childY*childY),len2=child.data.length*child.worldScaleX;var cosDenom=2*len1*len2;if(cosDenom<0.0001){child.rotationIK=childRotation+(Math.atan2(targetY,targetX)*spine.radDeg-parentRotation-childRotation)*alpha;return;}
  var cos=(targetX*targetX+targetY*targetY-len1*len1-len2*len2)/cosDenom;if(cos<-1)
   cos=-1;else if(cos>1)
   cos=1;var childAngle=Math.acos(cos)*bendDirection;var adjacent=len1+len2*cos,opposite=len2*Math.sin(childAngle);var parentAngle=Math.atan2(targetY*adjacent-targetX*opposite,targetX*adjacent+targetY*opposite);var rotation=(parentAngle-offset)*spine.radDeg-parentRotation;if(rotation>180)
   rotation-=360;else if(rotation<-180)
   rotation+=360;parent.rotationIK=parentRotation+rotation*alpha;rotation=(childAngle+offset)*spine.radDeg-childRotation;if(rotation>180)
   rotation-=360;else if(rotation<-180)
   rotation+=360;child.rotationIK=childRotation+(rotation+parent.worldRotation-child.parent.worldRotation)*alpha;};spine.Skin=function(name){this.name=name;this.attachments={};};spine.Skin.prototype={addAttachment:function(slotIndex,name,attachment){this.attachments[slotIndex+":"+name]=attachment;},getAttachment:function(slotIndex,name){return this.attachments[slotIndex+":"+name];},_attachAll:function(skeleton,oldSkin){for(var key in oldSkin.attachments){var colon=key.indexOf(":");var slotIndex=parseInt(key.substring(0,colon));var name=key.substring(colon+1);var slot=skeleton.slots[slotIndex];if(slot.attachment&&slot.attachment.name==name){var attachment=this.getAttachment(slotIndex,name);if(attachment)slot.setAttachment(attachment);}}}};spine.Animation=function(name,timelines,duration){this.name=name;this.timelines=timelines;this.duration=duration;};spine.Animation.prototype={apply:function(skeleton,lastTime,time,loop,events){if(loop&&this.duration!=0){time%=this.duration;lastTime%=this.duration;}
  var timelines=this.timelines;for(var i=0,n=timelines.length;i<n;i++)
   timelines[i].apply(skeleton,lastTime,time,events,1);},mix:function(skeleton,lastTime,time,loop,events,alpha){if(loop&&this.duration!=0){time%=this.duration;lastTime%=this.duration;}
  var timelines=this.timelines;for(var i=0,n=timelines.length;i<n;i++)
   timelines[i].apply(skeleton,lastTime,time,events,alpha);}};spine.Animation.binarySearch=function(values,target,step){var low=0;var high=Math.floor(values.length/step)-2;if(!high)return step;var current=high>>>1;while(true){if(values[(current+1)*step]<=target)
  low=current+1;else
  high=current;if(low==high)return(low+1)*step;current=(low+high)>>>1;}};spine.Animation.binarySearch1=function(values,target){var low=0;var high=values.length-2;if(!high)return 1;var current=high>>>1;while(true){if(values[current+1]<=target)
  low=current+1;else
  high=current;if(low==high)return low+1;current=(low+high)>>>1;}};spine.Animation.linearSearch=function(values,target,step){for(var i=0,last=values.length-step;i<=last;i+=step)
  if(values[i]>target)return i;return-1;};spine.Curves=function(frameCount){this.curves=[];};spine.Curves.prototype={setLinear:function(frameIndex){this.curves[frameIndex*19]=0;},setStepped:function(frameIndex){this.curves[frameIndex*19]=1;},setCurve:function(frameIndex,cx1,cy1,cx2,cy2){var subdiv1=1/10,subdiv2=subdiv1*subdiv1,subdiv3=subdiv2*subdiv1;var pre1=3*subdiv1,pre2=3*subdiv2,pre4=6*subdiv2,pre5=6*subdiv3;var tmp1x=-cx1*2+cx2,tmp1y=-cy1*2+cy2,tmp2x=(cx1-cx2)*3+1,tmp2y=(cy1-cy2)*3+1;var dfx=cx1*pre1+tmp1x*pre2+tmp2x*subdiv3,dfy=cy1*pre1+tmp1y*pre2+tmp2y*subdiv3;var ddfx=tmp1x*pre4+tmp2x*pre5,ddfy=tmp1y*pre4+tmp2y*pre5;var dddfx=tmp2x*pre5,dddfy=tmp2y*pre5;var i=frameIndex*19;var curves=this.curves;curves[i++]=2;var x=dfx,y=dfy;for(var n=i+19-1;i<n;i+=2){curves[i]=x;curves[i+1]=y;dfx+=ddfx;dfy+=ddfy;ddfx+=dddfx;ddfy+=dddfy;x+=dfx;y+=dfy;}},getCurvePercent:function(frameIndex,percent){percent=percent<0?0:(percent>1?1:percent);var curves=this.curves;var i=frameIndex*19;var type=curves[i];if(type===0)return percent;if(type==1)return 0;i++;var x=0;for(var start=i,n=i+19-1;i<n;i+=2){x=curves[i];if(x>=percent){var prevX,prevY;if(i==start){prevX=0;prevY=0;}else{prevX=curves[i-2];prevY=curves[i-1];}
  return prevY+(curves[i+1]-prevY)*(percent-prevX)/(x-prevX);}}
  var y=curves[i-1];return y+(1-y)*(percent-x)/(1-x);}};spine.RotateTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*2;};spine.RotateTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2;},setFrame:function(frameIndex,time,angle){frameIndex*=2;this.frames[frameIndex]=time;this.frames[frameIndex+1]=angle;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var bone=skeleton.bones[this.boneIndex];if(time>=frames[frames.length-2]){var amount=bone.data.rotation+frames[frames.length-1]-bone.rotation;while(amount>180)
  amount-=360;while(amount<-180)
  amount+=360;bone.rotation+=amount*alpha;return;}
  var frameIndex=spine.Animation.binarySearch(frames,time,2);var prevFrameValue=frames[frameIndex-1];var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex-2]-frameTime);percent=this.curves.getCurvePercent(frameIndex/2-1,percent);var amount=frames[frameIndex+1]-prevFrameValue;while(amount>180)
   amount-=360;while(amount<-180)
   amount+=360;amount=bone.data.rotation+(prevFrameValue+amount*percent)-bone.rotation;while(amount>180)
   amount-=360;while(amount<-180)
   amount+=360;bone.rotation+=amount*alpha;}};spine.TranslateTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*3;};spine.TranslateTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/3;},setFrame:function(frameIndex,time,x,y){frameIndex*=3;this.frames[frameIndex]=time;this.frames[frameIndex+1]=x;this.frames[frameIndex+2]=y;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var bone=skeleton.bones[this.boneIndex];if(time>=frames[frames.length-3]){bone.x+=(bone.data.x+frames[frames.length-2]-bone.x)*alpha;bone.y+=(bone.data.y+frames[frames.length-1]-bone.y)*alpha;return;}
  var frameIndex=spine.Animation.binarySearch(frames,time,3);var prevFrameX=frames[frameIndex-2];var prevFrameY=frames[frameIndex-1];var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex+-3]-frameTime);percent=this.curves.getCurvePercent(frameIndex/3-1,percent);bone.x+=(bone.data.x+prevFrameX+(frames[frameIndex+1]-prevFrameX)*percent-bone.x)*alpha;bone.y+=(bone.data.y+prevFrameY+(frames[frameIndex+2]-prevFrameY)*percent-bone.y)*alpha;}};spine.ScaleTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*3;};spine.ScaleTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/3;},setFrame:function(frameIndex,time,x,y){frameIndex*=3;this.frames[frameIndex]=time;this.frames[frameIndex+1]=x;this.frames[frameIndex+2]=y;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var bone=skeleton.bones[this.boneIndex];if(time>=frames[frames.length-3]){bone.scaleX+=(bone.data.scaleX*frames[frames.length-2]-bone.scaleX)*alpha;bone.scaleY+=(bone.data.scaleY*frames[frames.length-1]-bone.scaleY)*alpha;return;}
  var frameIndex=spine.Animation.binarySearch(frames,time,3);var prevFrameX=frames[frameIndex-2];var prevFrameY=frames[frameIndex-1];var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex+-3]-frameTime);percent=this.curves.getCurvePercent(frameIndex/3-1,percent);bone.scaleX+=(bone.data.scaleX*(prevFrameX+(frames[frameIndex+1]-prevFrameX)*percent)-bone.scaleX)*alpha;bone.scaleY+=(bone.data.scaleY*(prevFrameY+(frames[frameIndex+2]-prevFrameY)*percent)-bone.scaleY)*alpha;}};spine.ColorTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*5;};spine.ColorTimeline.prototype={slotIndex:0,getFrameCount:function(){return this.frames.length/5;},setFrame:function(frameIndex,time,r,g,b,a){frameIndex*=5;this.frames[frameIndex]=time;this.frames[frameIndex+1]=r;this.frames[frameIndex+2]=g;this.frames[frameIndex+3]=b;this.frames[frameIndex+4]=a;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var r,g,b,a;if(time>=frames[frames.length-5]){var i=frames.length-1;r=frames[i-3];g=frames[i-2];b=frames[i-1];a=frames[i];}else{var frameIndex=spine.Animation.binarySearch(frames,time,5);var prevFrameR=frames[frameIndex-4];var prevFrameG=frames[frameIndex-3];var prevFrameB=frames[frameIndex-2];var prevFrameA=frames[frameIndex-1];var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex-5]-frameTime);percent=this.curves.getCurvePercent(frameIndex/5-1,percent);r=prevFrameR+(frames[frameIndex+1]-prevFrameR)*percent;g=prevFrameG+(frames[frameIndex+2]-prevFrameG)*percent;b=prevFrameB+(frames[frameIndex+3]-prevFrameB)*percent;a=prevFrameA+(frames[frameIndex+4]-prevFrameA)*percent;}
  var slot=skeleton.slots[this.slotIndex];if(alpha<1){slot.r+=(r-slot.r)*alpha;slot.g+=(g-slot.g)*alpha;slot.b+=(b-slot.b)*alpha;slot.a+=(a-slot.a)*alpha;}else{slot.r=r;slot.g=g;slot.b=b;slot.a=a;}}};spine.AttachmentTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount;this.attachmentNames=[];this.attachmentNames.length=frameCount;};spine.AttachmentTimeline.prototype={slotIndex:0,getFrameCount:function(){return this.frames.length;},setFrame:function(frameIndex,time,attachmentName){this.frames[frameIndex]=time;this.attachmentNames[frameIndex]=attachmentName;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0]){if(lastTime>time)this.apply(skeleton,lastTime,Number.MAX_VALUE,null,0);return;}else if(lastTime>time)
  lastTime=-1;var frameIndex=time>=frames[frames.length-1]?frames.length-1:spine.Animation.binarySearch1(frames,time)-1;if(frames[frameIndex]<lastTime)return;var attachmentName=this.attachmentNames[frameIndex];skeleton.slots[this.slotIndex].setAttachment(!attachmentName?null:skeleton.getAttachmentBySlotIndex(this.slotIndex,attachmentName));}};spine.EventTimeline=function(frameCount){this.frames=[];this.frames.length=frameCount;this.events=[];this.events.length=frameCount;};spine.EventTimeline.prototype={getFrameCount:function(){return this.frames.length;},setFrame:function(frameIndex,time,event){this.frames[frameIndex]=time;this.events[frameIndex]=event;},apply:function(skeleton,lastTime,time,firedEvents,alpha){if(!firedEvents)return;var frames=this.frames;var frameCount=frames.length;if(lastTime>time){this.apply(skeleton,lastTime,Number.MAX_VALUE,firedEvents,alpha);lastTime=-1;}else if(lastTime>=frames[frameCount-1])
  return;if(time<frames[0])return;var frameIndex;if(lastTime<frames[0])
  frameIndex=0;else{frameIndex=spine.Animation.binarySearch1(frames,lastTime);var frame=frames[frameIndex];while(frameIndex>0){if(frames[frameIndex-1]!=frame)break;frameIndex--;}}
  var events=this.events;for(;frameIndex<frameCount&&time>=frames[frameIndex];frameIndex++)
   firedEvents.push(events[frameIndex]);}};spine.DrawOrderTimeline=function(frameCount){this.frames=[];this.frames.length=frameCount;this.drawOrders=[];this.drawOrders.length=frameCount;};spine.DrawOrderTimeline.prototype={getFrameCount:function(){return this.frames.length;},setFrame:function(frameIndex,time,drawOrder){this.frames[frameIndex]=time;this.drawOrders[frameIndex]=drawOrder;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var frameIndex;if(time>=frames[frames.length-1])
  frameIndex=frames.length-1;else
  frameIndex=spine.Animation.binarySearch1(frames,time)-1;var drawOrder=skeleton.drawOrder;var slots=skeleton.slots;var drawOrderToSetupIndex=this.drawOrders[frameIndex];if(!drawOrderToSetupIndex){for(var i=0,n=slots.length;i<n;i++)
  drawOrder[i]=slots[i];}else{for(var i=0,n=drawOrderToSetupIndex.length;i<n;i++)
  drawOrder[i]=skeleton.slots[drawOrderToSetupIndex[i]];}}};spine.FfdTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount;this.frameVertices=[];this.frameVertices.length=frameCount;};spine.FfdTimeline.prototype={slotIndex:0,attachment:0,getFrameCount:function(){return this.frames.length;},setFrame:function(frameIndex,time,vertices){this.frames[frameIndex]=time;this.frameVertices[frameIndex]=vertices;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var slot=skeleton.slots[this.slotIndex];if(slot.attachment!=this.attachment)return;var frames=this.frames;if(time<frames[0])return;var frameVertices=this.frameVertices;var vertexCount=frameVertices[0].length;var vertices=slot.attachmentVertices;if(vertices.length!=vertexCount)alpha=1;vertices.length=vertexCount;if(time>=frames[frames.length-1]){var lastVertices=frameVertices[frames.length-1];if(alpha<1){for(var i=0;i<vertexCount;i++)
  vertices[i]+=(lastVertices[i]-vertices[i])*alpha;}else{for(var i=0;i<vertexCount;i++)
  vertices[i]=lastVertices[i];}
  return;}
  var frameIndex=spine.Animation.binarySearch1(frames,time);var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex-1]-frameTime);percent=this.curves.getCurvePercent(frameIndex-1,percent<0?0:(percent>1?1:percent));var prevVertices=frameVertices[frameIndex-1];var nextVertices=frameVertices[frameIndex];if(alpha<1){for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=(prev+(nextVertices[i]-prev)*percent-vertices[i])*alpha;}}else{for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]=prev+(nextVertices[i]-prev)*percent;}}}};spine.IkConstraintTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*3;};spine.IkConstraintTimeline.prototype={ikConstraintIndex:0,getFrameCount:function(){return this.frames.length/3;},setFrame:function(frameIndex,time,mix,bendDirection){frameIndex*=3;this.frames[frameIndex]=time;this.frames[frameIndex+1]=mix;this.frames[frameIndex+2]=bendDirection;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0])return;var ikConstraint=skeleton.ikConstraints[this.ikConstraintIndex];if(time>=frames[frames.length-3]){ikConstraint.mix+=(frames[frames.length-2]-ikConstraint.mix)*alpha;ikConstraint.bendDirection=frames[frames.length-1];return;}
  var frameIndex=spine.Animation.binarySearch(frames,time,3);var prevFrameMix=frames[frameIndex+-2];var frameTime=frames[frameIndex];var percent=1-(time-frameTime)/(frames[frameIndex+-3]-frameTime);percent=this.curves.getCurvePercent(frameIndex/3-1,percent);var mix=prevFrameMix+(frames[frameIndex+1]-prevFrameMix)*percent;ikConstraint.mix+=(mix-ikConstraint.mix)*alpha;ikConstraint.bendDirection=frames[frameIndex+-1];}};spine.FlipXTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*2;};spine.FlipXTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2;},setFrame:function(frameIndex,time,flip){frameIndex*=2;this.frames[frameIndex]=time;this.frames[frameIndex+1]=flip?1:0;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0]){if(lastTime>time)this.apply(skeleton,lastTime,Number.MAX_VALUE,null,0);return;}else if(lastTime>time)
  lastTime=-1;var frameIndex=(time>=frames[frames.length-2]?frames.length:spine.Animation.binarySearch(frames,time,2))-2;if(frames[frameIndex]<lastTime)return;skeleton.bones[boneIndex].flipX=frames[frameIndex+1]!=0;}};spine.FlipYTimeline=function(frameCount){this.curves=new spine.Curves(frameCount);this.frames=[];this.frames.length=frameCount*2;};spine.FlipYTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2;},setFrame:function(frameIndex,time,flip){frameIndex*=2;this.frames[frameIndex]=time;this.frames[frameIndex+1]=flip?1:0;},apply:function(skeleton,lastTime,time,firedEvents,alpha){var frames=this.frames;if(time<frames[0]){if(lastTime>time)this.apply(skeleton,lastTime,Number.MAX_VALUE,null,0);return;}else if(lastTime>time)
  lastTime=-1;var frameIndex=(time>=frames[frames.length-2]?frames.length:spine.Animation.binarySearch(frames,time,2))-2;if(frames[frameIndex]<lastTime)return;skeleton.bones[boneIndex].flipY=frames[frameIndex+1]!=0;}};spine.SkeletonData=function(){this.bones=[];this.slots=[];this.skins=[];this.events=[];this.animations=[];this.ikConstraints=[];};spine.SkeletonData.prototype={name:null,defaultSkin:null,width:0,height:0,version:null,hash:null,findBone:function(boneName){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)
  if(bones[i].name==boneName)return bones[i];return null;},findBoneIndex:function(boneName){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)
  if(bones[i].name==boneName)return i;return-1;},findSlot:function(slotName){var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){if(slots[i].name==slotName)return slot[i];}
  return null;},findSlotIndex:function(slotName){var slots=this.slots;for(var i=0,n=slots.length;i<n;i++)
  if(slots[i].name==slotName)return i;return-1;},findSkin:function(skinName){var skins=this.skins;for(var i=0,n=skins.length;i<n;i++)
  if(skins[i].name==skinName)return skins[i];return null;},findEvent:function(eventName){var events=this.events;for(var i=0,n=events.length;i<n;i++)
  if(events[i].name==eventName)return events[i];return null;},findAnimation:function(animationName){var animations=this.animations;for(var i=0,n=animations.length;i<n;i++)
  if(animations[i].name==animationName)return animations[i];return null;},findIkConstraint:function(ikConstraintName){var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++)
  if(ikConstraints[i].name==ikConstraintName)return ikConstraints[i];return null;}};spine.Skeleton=function(skeletonData){this.data=skeletonData;this.bones=[];for(var i=0,n=skeletonData.bones.length;i<n;i++){var boneData=skeletonData.bones[i];var parent=!boneData.parent?null:this.bones[skeletonData.bones.indexOf(boneData.parent)];this.bones.push(new spine.Bone(boneData,this,parent));}
  this.slots=[];this.drawOrder=[];for(var i=0,n=skeletonData.slots.length;i<n;i++){var slotData=skeletonData.slots[i];var bone=this.bones[skeletonData.bones.indexOf(slotData.boneData)];var slot=new spine.Slot(slotData,bone);this.slots.push(slot);this.drawOrder.push(slot);}
  this.ikConstraints=[];for(var i=0,n=skeletonData.ikConstraints.length;i<n;i++)
   this.ikConstraints.push(new spine.IkConstraint(skeletonData.ikConstraints[i],this));this.boneCache=[];this.updateCache();};spine.Skeleton.prototype={x:0,y:0,skin:null,r:1,g:1,b:1,a:1,time:0,flipX:false,flipY:false,updateCache:function(){var ikConstraints=this.ikConstraints;var ikConstraintsCount=ikConstraints.length;var arrayCount=ikConstraintsCount+1;var boneCache=this.boneCache;if(boneCache.length>arrayCount)boneCache.length=arrayCount;for(var i=0,n=boneCache.length;i<n;i++)
  boneCache[i].length=0;while(boneCache.length<arrayCount)
  boneCache[boneCache.length]=[];var nonIkBones=boneCache[0];var bones=this.bones;outer:for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];var current=bone;do{for(var ii=0;ii<ikConstraintsCount;ii++){var ikConstraint=ikConstraints[ii];var parent=ikConstraint.bones[0];var child=ikConstraint.bones[ikConstraint.bones.length-1];while(true){if(current==child){boneCache[ii].push(bone);boneCache[ii+1].push(bone);continue outer;}
  if(child==parent)break;child=child.parent;}}
  current=current.parent;}while(current);nonIkBones[nonIkBones.length]=bone;}},updateWorldTransform:function(){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];bone.rotationIK=bone.rotation;}
  var i=0,last=this.boneCache.length-1;while(true){var cacheBones=this.boneCache[i];for(var ii=0,nn=cacheBones.length;ii<nn;ii++)
   cacheBones[ii].updateWorldTransform();if(i==last)break;this.ikConstraints[i].apply();i++;}},setToSetupPose:function(){this.setBonesToSetupPose();this.setSlotsToSetupPose();},setBonesToSetupPose:function(){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)
  bones[i].setToSetupPose();var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++){var ikConstraint=ikConstraints[i];ikConstraint.bendDirection=ikConstraint.data.bendDirection;ikConstraint.mix=ikConstraint.data.mix;}},setSlotsToSetupPose:function(){var slots=this.slots;var drawOrder=this.drawOrder;for(var i=0,n=slots.length;i<n;i++){drawOrder[i]=slots[i];slots[i].setToSetupPose(i);}},getRootBone:function(){return this.bones.length?this.bones[0]:null;},findBone:function(boneName){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)
  if(bones[i].data.name==boneName)return bones[i];return null;},findBoneIndex:function(boneName){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)
  if(bones[i].data.name==boneName)return i;return-1;},findSlot:function(slotName){var slots=this.slots;for(var i=0,n=slots.length;i<n;i++)
  if(slots[i].data.name==slotName)return slots[i];return null;},findSlotIndex:function(slotName){var slots=this.slots;for(var i=0,n=slots.length;i<n;i++)
  if(slots[i].data.name==slotName)return i;return-1;},setSkinByName:function(skinName){var skin=this.data.findSkin(skinName);if(!skin)throw"Skin not found: "+skinName;this.setSkin(skin);},setSkin:function(newSkin){if(newSkin){if(this.skin)
  newSkin._attachAll(this,this.skin);else{var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];var name=slot.data.attachmentName;if(name){var attachment=newSkin.getAttachment(i,name);if(attachment)slot.setAttachment(attachment);}}}}
  this.skin=newSkin;},getAttachmentBySlotName:function(slotName,attachmentName){return this.getAttachmentBySlotIndex(this.data.findSlotIndex(slotName),attachmentName);},getAttachmentBySlotIndex:function(slotIndex,attachmentName){if(this.skin){var attachment=this.skin.getAttachment(slotIndex,attachmentName);if(attachment)return attachment;}
  if(this.data.defaultSkin)return this.data.defaultSkin.getAttachment(slotIndex,attachmentName);return null;},setAttachment:function(slotName,attachmentName){var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];if(slot.data.name==slotName){var attachment=null;if(attachmentName){attachment=this.getAttachmentBySlotIndex(i,attachmentName);if(!attachment)throw"Attachment not found: "+attachmentName+", for slot: "+slotName;}
  slot.setAttachment(attachment);return;}}
  throw"Slot not found: "+slotName;},findIkConstraint:function(ikConstraintName){var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++)
  if(ikConstraints[i].data.name==ikConstraintName)return ikConstraints[i];return null;},update:function(delta){this.time+=delta;}};spine.EventData=function(name){this.name=name;};spine.EventData.prototype={intValue:0,floatValue:0,stringValue:null};spine.Event=function(data){this.data=data;};spine.Event.prototype={intValue:0,floatValue:0,stringValue:null};spine.AttachmentType={region:0,boundingbox:1,mesh:2,skinnedmesh:3};spine.RegionAttachment=function(name){this.name=name;this.offset=[];this.offset.length=8;this.uvs=[];this.uvs.length=8;};spine.RegionAttachment.prototype={type:spine.AttachmentType.region,x:0,y:0,rotation:0,scaleX:1,scaleY:1,width:0,height:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,setUVs:function(u,v,u2,v2,rotate){var uvs=this.uvs;if(rotate){uvs[2]=u;uvs[3]=v2;uvs[4]=u;uvs[5]=v;uvs[6]=u2;uvs[7]=v;uvs[0]=u2;uvs[1]=v2;}else{uvs[0]=u;uvs[1]=v2;uvs[2]=u;uvs[3]=v;uvs[4]=u2;uvs[5]=v;uvs[6]=u2;uvs[7]=v2;}},updateOffset:function(){var regionScaleX=this.width/this.regionOriginalWidth*this.scaleX;var regionScaleY=this.height/this.regionOriginalHeight*this.scaleY;var localX=-this.width/2*this.scaleX+this.regionOffsetX*regionScaleX;var localY=-this.height/2*this.scaleY+this.regionOffsetY*regionScaleY;var localX2=localX+this.regionWidth*regionScaleX;var localY2=localY+this.regionHeight*regionScaleY;var radians=this.rotation*spine.degRad;var cos=Math.cos(radians);var sin=Math.sin(radians);var localXCos=localX*cos+this.x;var localXSin=localX*sin;var localYCos=localY*cos+this.y;var localYSin=localY*sin;var localX2Cos=localX2*cos+this.x;var localX2Sin=localX2*sin;var localY2Cos=localY2*cos+this.y;var localY2Sin=localY2*sin;var offset=this.offset;offset[0]=localXCos-localYSin;offset[1]=localYCos+localXSin;offset[2]=localXCos-localY2Sin;offset[3]=localY2Cos+localXSin;offset[4]=localX2Cos-localY2Sin;offset[5]=localY2Cos+localX2Sin;offset[6]=localX2Cos-localYSin;offset[7]=localYCos+localX2Sin;},computeVertices:function(x,y,bone,vertices){x+=bone.worldX;y+=bone.worldY;var m00=bone.m00,m01=bone.m01,m10=bone.m10,m11=bone.m11;var offset=this.offset;vertices[0]=offset[0]*m00+offset[1]*m01+x;vertices[1]=offset[0]*m10+offset[1]*m11+y;vertices[2]=offset[2]*m00+offset[3]*m01+x;vertices[3]=offset[2]*m10+offset[3]*m11+y;vertices[4]=offset[4]*m00+offset[5]*m01+x;vertices[5]=offset[4]*m10+offset[5]*m11+y;vertices[6]=offset[6]*m00+offset[7]*m01+x;vertices[7]=offset[6]*m10+offset[7]*m11+y;}};spine.MeshAttachment=function(name){this.name=name;};spine.MeshAttachment.prototype={type:spine.AttachmentType.mesh,vertices:null,uvs:null,regionUVs:null,triangles:null,hullLength:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionU:0,regionV:0,regionU2:0,regionV2:0,regionRotate:false,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,edges:null,width:0,height:0,updateUVs:function(){var width=this.regionU2-this.regionU,height=this.regionV2-this.regionV;var n=this.regionUVs.length;if(!this.uvs||this.uvs.length!=n){this.uvs=new spine.Float32Array(n);}
  if(this.regionRotate){for(var i=0;i<n;i+=2){this.uvs[i]=this.regionU+this.regionUVs[i+1]*width;this.uvs[i+1]=this.regionV+height-this.regionUVs[i]*height;}}else{for(var i=0;i<n;i+=2){this.uvs[i]=this.regionU+this.regionUVs[i]*width;this.uvs[i+1]=this.regionV+this.regionUVs[i+1]*height;}}},computeWorldVertices:function(x,y,slot,worldVertices){var bone=slot.bone;x+=bone.worldX;y+=bone.worldY;var m00=bone.m00,m01=bone.m01,m10=bone.m10,m11=bone.m11;var vertices=this.vertices;var verticesCount=vertices.length;if(slot.attachmentVertices.length==verticesCount)vertices=slot.attachmentVertices;for(var i=0;i<verticesCount;i+=2){var vx=vertices[i];var vy=vertices[i+1];worldVertices[i]=vx*m00+vy*m01+x;worldVertices[i+1]=vx*m10+vy*m11+y;}}};spine.SkinnedMeshAttachment=function(name){this.name=name;};spine.SkinnedMeshAttachment.prototype={type:spine.AttachmentType.skinnedmesh,bones:null,weights:null,uvs:null,regionUVs:null,triangles:null,hullLength:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionU:0,regionV:0,regionU2:0,regionV2:0,regionRotate:false,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,edges:null,width:0,height:0,updateUVs:function(u,v,u2,v2,rotate){var width=this.regionU2-this.regionU,height=this.regionV2-this.regionV;var n=this.regionUVs.length;if(!this.uvs||this.uvs.length!=n){this.uvs=new spine.Float32Array(n);}
  if(this.regionRotate){for(var i=0;i<n;i+=2){this.uvs[i]=this.regionU+this.regionUVs[i+1]*width;this.uvs[i+1]=this.regionV+height-this.regionUVs[i]*height;}}else{for(var i=0;i<n;i+=2){this.uvs[i]=this.regionU+this.regionUVs[i]*width;this.uvs[i+1]=this.regionV+this.regionUVs[i+1]*height;}}},computeWorldVertices:function(x,y,slot,worldVertices){var skeletonBones=slot.bone.skeleton.bones;var weights=this.weights;var bones=this.bones;var w=0,v=0,b=0,f=0,n=bones.length,nn;var wx,wy,bone,vx,vy,weight;if(!slot.attachmentVertices.length){for(;v<n;w+=2){wx=0;wy=0;nn=bones[v++]+v;for(;v<nn;v++,b+=3){bone=skeletonBones[bones[v]];vx=weights[b];vy=weights[b+1];weight=weights[b+2];wx+=(vx*bone.m00+vy*bone.m01+bone.worldX)*weight;wy+=(vx*bone.m10+vy*bone.m11+bone.worldY)*weight;}
  worldVertices[w]=wx+x;worldVertices[w+1]=wy+y;}}else{var ffd=slot.attachmentVertices;for(;v<n;w+=2){wx=0;wy=0;nn=bones[v++]+v;for(;v<nn;v++,b+=3,f+=2){bone=skeletonBones[bones[v]];vx=weights[b]+ffd[f];vy=weights[b+1]+ffd[f+1];weight=weights[b+2];wx+=(vx*bone.m00+vy*bone.m01+bone.worldX)*weight;wy+=(vx*bone.m10+vy*bone.m11+bone.worldY)*weight;}
  worldVertices[w]=wx+x;worldVertices[w+1]=wy+y;}}}};spine.BoundingBoxAttachment=function(name){this.name=name;this.vertices=[];};spine.BoundingBoxAttachment.prototype={type:spine.AttachmentType.boundingbox,computeWorldVertices:function(x,y,bone,worldVertices){x+=bone.worldX;y+=bone.worldY;var m00=bone.m00,m01=bone.m01,m10=bone.m10,m11=bone.m11;var vertices=this.vertices;for(var i=0,n=vertices.length;i<n;i+=2){var px=vertices[i];var py=vertices[i+1];worldVertices[i]=px*m00+py*m01+x;worldVertices[i+1]=px*m10+py*m11+y;}}};spine.AnimationStateData=function(skeletonData){this.skeletonData=skeletonData;this.animationToMixTime={};};spine.AnimationStateData.prototype={defaultMix:0,setMixByName:function(fromName,toName,duration){var from=this.skeletonData.findAnimation(fromName);if(!from)throw"Animation not found: "+fromName;var to=this.skeletonData.findAnimation(toName);if(!to)throw"Animation not found: "+toName;this.setMix(from,to,duration);},setMix:function(from,to,duration){this.animationToMixTime[from.name+":"+to.name]=duration;},getMix:function(from,to){var key=from.name+":"+to.name;return this.animationToMixTime.hasOwnProperty(key)?this.animationToMixTime[key]:this.defaultMix;}};spine.TrackEntry=function(){};spine.TrackEntry.prototype={next:null,previous:null,animation:null,loop:false,delay:0,time:0,lastTime:-1,endTime:0,timeScale:1,mixTime:0,mixDuration:0,mix:1,onStart:null,onEnd:null,onComplete:null,onEvent:null};spine.AnimationState=function(stateData){this.data=stateData;this.tracks=[];this.events=[];};spine.AnimationState.prototype={onStart:null,onEnd:null,onComplete:null,onEvent:null,timeScale:1,update:function(delta){delta*=this.timeScale;for(var i=0;i<this.tracks.length;i++){var current=this.tracks[i];if(!current)continue;current.time+=delta*current.timeScale;if(current.previous){var previousDelta=delta*current.previous.timeScale;current.previous.time+=previousDelta;current.mixTime+=previousDelta;}
  var next=current.next;if(next){next.time=current.lastTime-next.delay;if(next.time>=0)this.setCurrent(i,next);}else{if(!current.loop&&current.lastTime>=current.endTime)this.clearTrack(i);}}},apply:function(skeleton){for(var i=0;i<this.tracks.length;i++){var current=this.tracks[i];if(!current)continue;this.events.length=0;var time=current.time;var lastTime=current.lastTime;var endTime=current.endTime;var loop=current.loop;if(!loop&&time>endTime)time=endTime;var previous=current.previous;if(!previous){if(current.mix==1)
  current.animation.apply(skeleton,current.lastTime,time,loop,this.events);else
  current.animation.mix(skeleton,current.lastTime,time,loop,this.events,current.mix);}else{var previousTime=previous.time;if(!previous.loop&&previousTime>previous.endTime)previousTime=previous.endTime;previous.animation.apply(skeleton,previousTime,previousTime,previous.loop,null);var alpha=current.mixTime/current.mixDuration*current.mix;if(alpha>=1){alpha=1;current.previous=null;}
  current.animation.mix(skeleton,current.lastTime,time,loop,this.events,alpha);}
  for(var ii=0,nn=this.events.length;ii<nn;ii++){var event=this.events[ii];if(current.onEvent)current.onEvent(i,event);if(this.onEvent)this.onEvent(i,event);}
  if(loop?(lastTime%endTime>time%endTime):(lastTime<endTime&&time>=endTime)){var count=Math.floor(time/endTime);if(current.onComplete)current.onComplete(i,count);if(this.onComplete)this.onComplete(i,count);}
  current.lastTime=current.time;}},clearTracks:function(){for(var i=0,n=this.tracks.length;i<n;i++)
  this.clearTrack(i);this.tracks.length=0;},clearTrack:function(trackIndex){if(trackIndex>=this.tracks.length)return;var current=this.tracks[trackIndex];if(!current)return;if(current.onEnd)current.onEnd(trackIndex);if(this.onEnd)this.onEnd(trackIndex);this.tracks[trackIndex]=null;},_expandToIndex:function(index){if(index<this.tracks.length)return this.tracks[index];while(index>=this.tracks.length)
  this.tracks.push(null);return null;},setCurrent:function(index,entry){var current=this._expandToIndex(index);if(current){var previous=current.previous;current.previous=null;if(current.onEnd)current.onEnd(index);if(this.onEnd)this.onEnd(index);entry.mixDuration=this.data.getMix(current.animation,entry.animation);if(entry.mixDuration>0){entry.mixTime=0;if(previous&&current.mixTime/current.mixDuration<0.5)
  entry.previous=previous;else
  entry.previous=current;}}
  this.tracks[index]=entry;if(entry.onStart)entry.onStart(index);if(this.onStart)this.onStart(index);},setAnimationByName:function(trackIndex,animationName,loop){var animation=this.data.skeletonData.findAnimation(animationName);if(!animation)throw"Animation not found: "+animationName;return this.setAnimation(trackIndex,animation,loop);},setAnimation:function(trackIndex,animation,loop){var entry=new spine.TrackEntry();entry.animation=animation;entry.loop=loop;entry.endTime=animation.duration;this.setCurrent(trackIndex,entry);return entry;},addAnimationByName:function(trackIndex,animationName,loop,delay){var animation=this.data.skeletonData.findAnimation(animationName);if(!animation)throw"Animation not found: "+animationName;return this.addAnimation(trackIndex,animation,loop,delay);},addAnimation:function(trackIndex,animation,loop,delay){var entry=new spine.TrackEntry();entry.animation=animation;entry.loop=loop;entry.endTime=animation.duration;var last=this._expandToIndex(trackIndex);if(last){while(last.next)
  last=last.next;last.next=entry;}else
  this.tracks[trackIndex]=entry;if(delay<=0){if(last)
  delay+=last.endTime-this.data.getMix(last.animation,animation);else
  delay=0;}
  entry.delay=delay;return entry;},getCurrent:function(trackIndex){if(trackIndex>=this.tracks.length)return null;return this.tracks[trackIndex];}};spine.SkeletonJson=function(attachmentLoader){this.attachmentLoader=attachmentLoader;};spine.SkeletonJson.prototype={scale:1,readSkeletonData:function(root,name){var skeletonData=new spine.SkeletonData();skeletonData.name=name;var skeletonMap=root["skeleton"];if(skeletonMap){skeletonData.hash=skeletonMap["hash"];skeletonData.version=skeletonMap["spine"];skeletonData.width=skeletonMap["width"]||0;skeletonData.height=skeletonMap["height"]||0;}
  var bones=root["bones"];for(var i=0,n=bones.length;i<n;i++){var boneMap=bones[i];var parent=null;if(boneMap["parent"]){parent=skeletonData.findBone(boneMap["parent"]);if(!parent)throw"Parent bone not found: "+boneMap["parent"];}
   var boneData=new spine.BoneData(boneMap["name"],parent);boneData.length=(boneMap["length"]||0)*this.scale;boneData.x=(boneMap["x"]||0)*this.scale;boneData.y=(boneMap["y"]||0)*this.scale;boneData.rotation=(boneMap["rotation"]||0);boneData.scaleX=boneMap.hasOwnProperty("scaleX")?boneMap["scaleX"]:1;boneData.scaleY=boneMap.hasOwnProperty("scaleY")?boneMap["scaleY"]:1;boneData.inheritScale=boneMap.hasOwnProperty("inheritScale")?boneMap["inheritScale"]:true;boneData.inheritRotation=boneMap.hasOwnProperty("inheritRotation")?boneMap["inheritRotation"]:true;skeletonData.bones.push(boneData);}
  var ik=root["ik"];if(ik){for(var i=0,n=ik.length;i<n;i++){var ikMap=ik[i];var ikConstraintData=new spine.IkConstraintData(ikMap["name"]);var bones=ikMap["bones"];for(var ii=0,nn=bones.length;ii<nn;ii++){var bone=skeletonData.findBone(bones[ii]);if(!bone)throw"IK bone not found: "+bones[ii];ikConstraintData.bones.push(bone);}
   ikConstraintData.target=skeletonData.findBone(ikMap["target"]);if(!ikConstraintData.target)throw"Target bone not found: "+ikMap["target"];ikConstraintData.bendDirection=(!ikMap.hasOwnProperty("bendPositive")||ikMap["bendPositive"])?1:-1;ikConstraintData.mix=ikMap.hasOwnProperty("mix")?ikMap["mix"]:1;skeletonData.ikConstraints.push(ikConstraintData);}}
  var slots=root["slots"];for(var i=0,n=slots.length;i<n;i++){var slotMap=slots[i];var boneData=skeletonData.findBone(slotMap["bone"]);if(!boneData)throw"Slot bone not found: "+slotMap["bone"];var slotData=new spine.SlotData(slotMap["name"],boneData);var color=slotMap["color"];if(color){slotData.r=this.toColor(color,0);slotData.g=this.toColor(color,1);slotData.b=this.toColor(color,2);slotData.a=this.toColor(color,3);}
   slotData.attachmentName=slotMap["attachment"];slotData.additiveBlending=slotMap["additive"]&&slotMap["additive"]=="true";skeletonData.slots.push(slotData);}
  var skins=root["skins"];for(var skinName in skins){if(!skins.hasOwnProperty(skinName))continue;var skinMap=skins[skinName];var skin=new spine.Skin(skinName);for(var slotName in skinMap){if(!skinMap.hasOwnProperty(slotName))continue;var slotIndex=skeletonData.findSlotIndex(slotName);var slotEntry=skinMap[slotName];for(var attachmentName in slotEntry){if(!slotEntry.hasOwnProperty(attachmentName))continue;var attachment=this.readAttachment(skin,attachmentName,slotEntry[attachmentName]);if(attachment)skin.addAttachment(slotIndex,attachmentName,attachment);}}
   skeletonData.skins.push(skin);if(skin.name=="default")skeletonData.defaultSkin=skin;}
  var events=root["events"];for(var eventName in events){if(!events.hasOwnProperty(eventName))continue;var eventMap=events[eventName];var eventData=new spine.EventData(eventName);eventData.intValue=eventMap["int"]||0;eventData.floatValue=eventMap["float"]||0;eventData.stringValue=eventMap["string"]||null;skeletonData.events.push(eventData);}
  var animations=root["animations"];for(var animationName in animations){if(!animations.hasOwnProperty(animationName))continue;this.readAnimation(animationName,animations[animationName],skeletonData);}
  return skeletonData;},readAttachment:function(skin,name,map){name=map["name"]||name;var type=spine.AttachmentType[map["type"]||"region"];var path=map["path"]||name;var scale=this.scale;if(type==spine.AttachmentType.region){var region=this.attachmentLoader.newRegionAttachment(skin,name,path);if(!region)return null;region.path=path;region.x=(map["x"]||0)*scale;region.y=(map["y"]||0)*scale;region.scaleX=map.hasOwnProperty("scaleX")?map["scaleX"]:1;region.scaleY=map.hasOwnProperty("scaleY")?map["scaleY"]:1;region.rotation=map["rotation"]||0;region.width=(map["width"]||0)*scale;region.height=(map["height"]||0)*scale;var color=map["color"];if(color){region.r=this.toColor(color,0);region.g=this.toColor(color,1);region.b=this.toColor(color,2);region.a=this.toColor(color,3);}
  region.updateOffset();return region;}else if(type==spine.AttachmentType.mesh){var mesh=this.attachmentLoader.newMeshAttachment(skin,name,path);if(!mesh)return null;mesh.path=path;mesh.vertices=this.getFloatArray(map,"vertices",scale);mesh.triangles=this.getIntArray(map,"triangles");mesh.regionUVs=this.getFloatArray(map,"uvs",1);mesh.updateUVs();color=map["color"];if(color){mesh.r=this.toColor(color,0);mesh.g=this.toColor(color,1);mesh.b=this.toColor(color,2);mesh.a=this.toColor(color,3);}
  mesh.hullLength=(map["hull"]||0)*2;if(map["edges"])mesh.edges=this.getIntArray(map,"edges");mesh.width=(map["width"]||0)*scale;mesh.height=(map["height"]||0)*scale;return mesh;}else if(type==spine.AttachmentType.skinnedmesh){var mesh=this.attachmentLoader.newSkinnedMeshAttachment(skin,name,path);if(!mesh)return null;mesh.path=path;var uvs=this.getFloatArray(map,"uvs",1);var vertices=this.getFloatArray(map,"vertices",1);var weights=[];var bones=[];for(var i=0,n=vertices.length;i<n;){var boneCount=vertices[i++]|0;bones[bones.length]=boneCount;for(var nn=i+boneCount*4;i<nn;){bones[bones.length]=vertices[i];weights[weights.length]=vertices[i+1]*scale;weights[weights.length]=vertices[i+2]*scale;weights[weights.length]=vertices[i+3];i+=4;}}
  mesh.bones=bones;mesh.weights=weights;mesh.triangles=this.getIntArray(map,"triangles");mesh.regionUVs=uvs;mesh.updateUVs();color=map["color"];if(color){mesh.r=this.toColor(color,0);mesh.g=this.toColor(color,1);mesh.b=this.toColor(color,2);mesh.a=this.toColor(color,3);}
  mesh.hullLength=(map["hull"]||0)*2;if(map["edges"])mesh.edges=this.getIntArray(map,"edges");mesh.width=(map["width"]||0)*scale;mesh.height=(map["height"]||0)*scale;return mesh;}else if(type==spine.AttachmentType.boundingbox){var attachment=this.attachmentLoader.newBoundingBoxAttachment(skin,name);var vertices=map["vertices"];for(var i=0,n=vertices.length;i<n;i++)
  attachment.vertices.push(vertices[i]*scale);return attachment;}
  throw"Unknown attachment type: "+type;},readAnimation:function(name,map,skeletonData){var timelines=[];var duration=0;var slots=map["slots"];for(var slotName in slots){if(!slots.hasOwnProperty(slotName))continue;var slotMap=slots[slotName];var slotIndex=skeletonData.findSlotIndex(slotName);for(var timelineName in slotMap){if(!slotMap.hasOwnProperty(timelineName))continue;var values=slotMap[timelineName];if(timelineName=="color"){var timeline=new spine.ColorTimeline(values.length);timeline.slotIndex=slotIndex;var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];var color=valueMap["color"];var r=this.toColor(color,0);var g=this.toColor(color,1);var b=this.toColor(color,2);var a=this.toColor(color,3);timeline.setFrame(frameIndex,valueMap["time"],r,g,b,a);this.readCurve(timeline,frameIndex,valueMap);frameIndex++;}
  timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()*5-5]);}else if(timelineName=="attachment"){var timeline=new spine.AttachmentTimeline(values.length);timeline.slotIndex=slotIndex;var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];timeline.setFrame(frameIndex++,valueMap["time"],valueMap["name"]);}
  timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1]);}else
  throw"Invalid timeline type for a slot: "+timelineName+" ("+slotName+")";}}
  var bones=map["bones"];for(var boneName in bones){if(!bones.hasOwnProperty(boneName))continue;var boneIndex=skeletonData.findBoneIndex(boneName);if(boneIndex==-1)throw"Bone not found: "+boneName;var boneMap=bones[boneName];for(var timelineName in boneMap){if(!boneMap.hasOwnProperty(timelineName))continue;var values=boneMap[timelineName];if(timelineName=="rotate"){var timeline=new spine.RotateTimeline(values.length);timeline.boneIndex=boneIndex;var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];timeline.setFrame(frameIndex,valueMap["time"],valueMap["angle"]);this.readCurve(timeline,frameIndex,valueMap);frameIndex++;}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()*2-2]);}else if(timelineName=="translate"||timelineName=="scale"){var timeline;var timelineScale=1;if(timelineName=="scale")
   timeline=new spine.ScaleTimeline(values.length);else{timeline=new spine.TranslateTimeline(values.length);timelineScale=this.scale;}
   timeline.boneIndex=boneIndex;var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];var x=(valueMap["x"]||0)*timelineScale;var y=(valueMap["y"]||0)*timelineScale;timeline.setFrame(frameIndex,valueMap["time"],x,y);this.readCurve(timeline,frameIndex,valueMap);frameIndex++;}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()*3-3]);}else if(timelineName=="flipX"||timelineName=="flipY"){var x=timelineName=="flipX";var timeline=x?new spine.FlipXTimeline(values.length):new spine.FlipYTimeline(values.length);timeline.boneIndex=boneIndex;var field=x?"x":"y";var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];timeline.setFrame(frameIndex,valueMap["time"],valueMap[field]||false);frameIndex++;}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()*2-2]);}else
   throw"Invalid timeline type for a bone: "+timelineName+" ("+boneName+")";}}
  var ikMap=map["ik"];for(var ikConstraintName in ikMap){if(!ikMap.hasOwnProperty(ikConstraintName))continue;var ikConstraint=skeletonData.findIkConstraint(ikConstraintName);var values=ikMap[ikConstraintName];var timeline=new spine.IkConstraintTimeline(values.length);timeline.ikConstraintIndex=skeletonData.ikConstraints.indexOf(ikConstraint);var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];var mix=valueMap.hasOwnProperty("mix")?valueMap["mix"]:1;var bendDirection=(!valueMap.hasOwnProperty("bendPositive")||valueMap["bendPositive"])?1:-1;timeline.setFrame(frameIndex,valueMap["time"],mix,bendDirection);this.readCurve(timeline,frameIndex,valueMap);frameIndex++;}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.frameCount*3-3]);}
  var ffd=map["ffd"];for(var skinName in ffd){var skin=skeletonData.findSkin(skinName);var slotMap=ffd[skinName];for(slotName in slotMap){var slotIndex=skeletonData.findSlotIndex(slotName);var meshMap=slotMap[slotName];for(var meshName in meshMap){var values=meshMap[meshName];var timeline=new spine.FfdTimeline(values.length);var attachment=skin.getAttachment(slotIndex,meshName);if(!attachment)throw"FFD attachment not found: "+meshName;timeline.slotIndex=slotIndex;timeline.attachment=attachment;var isMesh=attachment.type==spine.AttachmentType.mesh;var vertexCount;if(isMesh)
   vertexCount=attachment.vertices.length;else
   vertexCount=attachment.weights.length/3*2;var frameIndex=0;for(var i=0,n=values.length;i<n;i++){var valueMap=values[i];var vertices;if(!valueMap["vertices"]){if(isMesh)
   vertices=attachment.vertices;else{vertices=[];vertices.length=vertexCount;}}else{var verticesValue=valueMap["vertices"];var vertices=[];vertices.length=vertexCount;var start=valueMap["offset"]||0;var nn=verticesValue.length;if(this.scale==1){for(var ii=0;ii<nn;ii++)
   vertices[ii+start]=verticesValue[ii];}else{for(var ii=0;ii<nn;ii++)
   vertices[ii+start]=verticesValue[ii]*this.scale;}
   if(isMesh){var meshVertices=attachment.vertices;for(var ii=0,nn=vertices.length;ii<nn;ii++)
    vertices[ii]+=meshVertices[ii];}}
   timeline.setFrame(frameIndex,valueMap["time"],vertices);this.readCurve(timeline,frameIndex,valueMap);frameIndex++;}
   timelines[timelines.length]=timeline;duration=Math.max(duration,timeline.frames[timeline.frameCount-1]);}}}
  var drawOrderValues=map["drawOrder"];if(!drawOrderValues)drawOrderValues=map["draworder"];if(drawOrderValues){var timeline=new spine.DrawOrderTimeline(drawOrderValues.length);var slotCount=skeletonData.slots.length;var frameIndex=0;for(var i=0,n=drawOrderValues.length;i<n;i++){var drawOrderMap=drawOrderValues[i];var drawOrder=null;if(drawOrderMap["offsets"]){drawOrder=[];drawOrder.length=slotCount;for(var ii=slotCount-1;ii>=0;ii--)
   drawOrder[ii]=-1;var offsets=drawOrderMap["offsets"];var unchanged=[];unchanged.length=slotCount-offsets.length;var originalIndex=0,unchangedIndex=0;for(var ii=0,nn=offsets.length;ii<nn;ii++){var offsetMap=offsets[ii];var slotIndex=skeletonData.findSlotIndex(offsetMap["slot"]);if(slotIndex==-1)throw"Slot not found: "+offsetMap["slot"];while(originalIndex!=slotIndex)
   unchanged[unchangedIndex++]=originalIndex++;drawOrder[originalIndex+offsetMap["offset"]]=originalIndex++;}
   while(originalIndex<slotCount)
    unchanged[unchangedIndex++]=originalIndex++;for(var ii=slotCount-1;ii>=0;ii--)
    if(drawOrder[ii]==-1)drawOrder[ii]=unchanged[--unchangedIndex];}
   timeline.setFrame(frameIndex++,drawOrderMap["time"],drawOrder);}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1]);}
  var events=map["events"];if(events){var timeline=new spine.EventTimeline(events.length);var frameIndex=0;for(var i=0,n=events.length;i<n;i++){var eventMap=events[i];var eventData=skeletonData.findEvent(eventMap["name"]);if(!eventData)throw"Event not found: "+eventMap["name"];var event=new spine.Event(eventData);event.intValue=eventMap.hasOwnProperty("int")?eventMap["int"]:eventData.intValue;event.floatValue=eventMap.hasOwnProperty("float")?eventMap["float"]:eventData.floatValue;event.stringValue=eventMap.hasOwnProperty("string")?eventMap["string"]:eventData.stringValue;timeline.setFrame(frameIndex++,eventMap["time"],event);}
   timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1]);}
  skeletonData.animations.push(new spine.Animation(name,timelines,duration));},readCurve:function(timeline,frameIndex,valueMap){var curve=valueMap["curve"];if(!curve)
  timeline.curves.setLinear(frameIndex);else if(curve=="stepped")
  timeline.curves.setStepped(frameIndex);else if(curve instanceof Array)
  timeline.curves.setCurve(frameIndex,curve[0],curve[1],curve[2],curve[3]);},toColor:function(hexString,colorIndex){if(hexString.length!=8)throw"Color hexidecimal length must be 8, recieved: "+hexString;return parseInt(hexString.substring(colorIndex*2,(colorIndex*2)+2),16)/255;},getFloatArray:function(map,name,scale){var list=map[name];var values=new spine.Float32Array(list.length);var i=0,n=list.length;if(scale==1){for(;i<n;i++)
  values[i]=list[i];}else{for(;i<n;i++)
  values[i]=list[i]*scale;}
  return values;},getIntArray:function(map,name){var list=map[name];var values=new spine.Uint16Array(list.length);for(var i=0,n=list.length;i<n;i++)
  values[i]=list[i]|0;return values;}};spine.Atlas=function(atlasText,textureLoader){this.textureLoader=textureLoader;this.pages=[];this.regions=[];var reader=new spine.AtlasReader(atlasText);var tuple=[];tuple.length=4;var page=null;while(true){var line=reader.readLine();if(line===null)break;line=reader.trim(line);if(!line.length)
  page=null;else if(!page){page=new spine.AtlasPage();page.name=line;if(reader.readTuple(tuple)==2){page.width=parseInt(tuple[0]);page.height=parseInt(tuple[1]);reader.readTuple(tuple);}
  page.format=spine.Atlas.Format[tuple[0]];reader.readTuple(tuple);page.minFilter=spine.Atlas.TextureFilter[tuple[0]];page.magFilter=spine.Atlas.TextureFilter[tuple[1]];var direction=reader.readValue();page.uWrap=spine.Atlas.TextureWrap.clampToEdge;page.vWrap=spine.Atlas.TextureWrap.clampToEdge;if(direction=="x")
   page.uWrap=spine.Atlas.TextureWrap.repeat;else if(direction=="y")
   page.vWrap=spine.Atlas.TextureWrap.repeat;else if(direction=="xy")
   page.uWrap=page.vWrap=spine.Atlas.TextureWrap.repeat;textureLoader.load(page,line,this);this.pages.push(page);}else{var region=new spine.AtlasRegion();region.name=line;region.page=page;region.rotate=reader.readValue()=="true";reader.readTuple(tuple);var x=parseInt(tuple[0]);var y=parseInt(tuple[1]);reader.readTuple(tuple);var width=parseInt(tuple[0]);var height=parseInt(tuple[1]);region.u=x/page.width;region.v=y/page.height;if(region.rotate){region.u2=(x+height)/page.width;region.v2=(y+width)/page.height;}else{region.u2=(x+width)/page.width;region.v2=(y+height)/page.height;}
  region.x=x;region.y=y;region.width=Math.abs(width);region.height=Math.abs(height);if(reader.readTuple(tuple)==4){region.splits=[parseInt(tuple[0]),parseInt(tuple[1]),parseInt(tuple[2]),parseInt(tuple[3])];if(reader.readTuple(tuple)==4){region.pads=[parseInt(tuple[0]),parseInt(tuple[1]),parseInt(tuple[2]),parseInt(tuple[3])];reader.readTuple(tuple);}}
  region.originalWidth=parseInt(tuple[0]);region.originalHeight=parseInt(tuple[1]);reader.readTuple(tuple);region.offsetX=parseInt(tuple[0]);region.offsetY=parseInt(tuple[1]);region.index=parseInt(reader.readValue());this.regions.push(region);}}};spine.Atlas.prototype={findRegion:function(name){var regions=this.regions;for(var i=0,n=regions.length;i<n;i++)
  if(regions[i].name==name)return regions[i];return null;},dispose:function(){var pages=this.pages;for(var i=0,n=pages.length;i<n;i++)
  this.textureLoader.unload(pages[i].rendererObject);},updateUVs:function(page){var regions=this.regions;for(var i=0,n=regions.length;i<n;i++){var region=regions[i];if(region.page!=page)continue;region.u=region.x/page.width;region.v=region.y/page.height;if(region.rotate){region.u2=(region.x+region.height)/page.width;region.v2=(region.y+region.width)/page.height;}else{region.u2=(region.x+region.width)/page.width;region.v2=(region.y+region.height)/page.height;}}}};spine.Atlas.Format={alpha:0,intensity:1,luminanceAlpha:2,rgb565:3,rgba4444:4,rgb888:5,rgba8888:6};spine.Atlas.TextureFilter={nearest:0,linear:1,mipMap:2,mipMapNearestNearest:3,mipMapLinearNearest:4,mipMapNearestLinear:5,mipMapLinearLinear:6};spine.Atlas.TextureWrap={mirroredRepeat:0,clampToEdge:1,repeat:2};spine.AtlasPage=function(){};spine.AtlasPage.prototype={name:null,format:null,minFilter:null,magFilter:null,uWrap:null,vWrap:null,rendererObject:null,width:0,height:0};spine.AtlasRegion=function(){};spine.AtlasRegion.prototype={page:null,name:null,x:0,y:0,width:0,height:0,u:0,v:0,u2:0,v2:0,offsetX:0,offsetY:0,originalWidth:0,originalHeight:0,index:0,rotate:false,splits:null,pads:null};spine.AtlasReader=function(text){this.lines=text.split(/\r\n|\r|\n/);};spine.AtlasReader.prototype={index:0,trim:function(value){return value.replace(/^\s+|\s+$/g,"");},readLine:function(){if(this.index>=this.lines.length)return null;return this.lines[this.index++];},readValue:function(){var line=this.readLine();var colon=line.indexOf(":");if(colon==-1)throw"Invalid line: "+line;return this.trim(line.substring(colon+1));},readTuple:function(tuple){var line=this.readLine();var colon=line.indexOf(":");if(colon==-1)throw"Invalid line: "+line;var i=0,lastMatch=colon+1;for(;i<3;i++){var comma=line.indexOf(",",lastMatch);if(comma==-1)break;tuple[i]=this.trim(line.substr(lastMatch,comma-lastMatch));lastMatch=comma+1;}
  tuple[i]=this.trim(line.substring(lastMatch));return i+1;}};spine.AtlasAttachmentLoader=function(atlas){this.atlas=atlas;};spine.AtlasAttachmentLoader.prototype={newRegionAttachment:function(skin,name,path){var region=this.atlas.findRegion(path);if(!region)throw"Region not found in atlas: "+path+" (region attachment: "+name+")";var attachment=new spine.RegionAttachment(name);attachment.rendererObject=region;attachment.setUVs(region.u,region.v,region.u2,region.v2,region.rotate);attachment.regionOffsetX=region.offsetX;attachment.regionOffsetY=region.offsetY;attachment.regionWidth=region.width;attachment.regionHeight=region.height;attachment.regionOriginalWidth=region.originalWidth;attachment.regionOriginalHeight=region.originalHeight;return attachment;},newMeshAttachment:function(skin,name,path){var region=this.atlas.findRegion(path);if(!region)throw"Region not found in atlas: "+path+" (mesh attachment: "+name+")";var attachment=new spine.MeshAttachment(name);attachment.rendererObject=region;attachment.regionU=region.u;attachment.regionV=region.v;attachment.regionU2=region.u2;attachment.regionV2=region.v2;attachment.regionRotate=region.rotate;attachment.regionOffsetX=region.offsetX;attachment.regionOffsetY=region.offsetY;attachment.regionWidth=region.width;attachment.regionHeight=region.height;attachment.regionOriginalWidth=region.originalWidth;attachment.regionOriginalHeight=region.originalHeight;return attachment;},newSkinnedMeshAttachment:function(skin,name,path){var region=this.atlas.findRegion(path);if(!region)throw"Region not found in atlas: "+path+" (skinned mesh attachment: "+name+")";var attachment=new spine.SkinnedMeshAttachment(name);attachment.rendererObject=region;attachment.regionU=region.u;attachment.regionV=region.v;attachment.regionU2=region.u2;attachment.regionV2=region.v2;attachment.regionRotate=region.rotate;attachment.regionOffsetX=region.offsetX;attachment.regionOffsetY=region.offsetY;attachment.regionWidth=region.width;attachment.regionHeight=region.height;attachment.regionOriginalWidth=region.originalWidth;attachment.regionOriginalHeight=region.originalHeight;return attachment;},newBoundingBoxAttachment:function(skin,name){return new spine.BoundingBoxAttachment(name);}};spine.SkeletonBounds=function(){this.polygonPool=[];this.polygons=[];this.boundingBoxes=[];};spine.SkeletonBounds.prototype={minX:0,minY:0,maxX:0,maxY:0,update:function(skeleton,updateAabb){var slots=skeleton.slots;var slotCount=slots.length;var x=skeleton.x,y=skeleton.y;var boundingBoxes=this.boundingBoxes;var polygonPool=this.polygonPool;var polygons=this.polygons;boundingBoxes.length=0;for(var i=0,n=polygons.length;i<n;i++)
  polygonPool.push(polygons[i]);polygons.length=0;for(var i=0;i<slotCount;i++){var slot=slots[i];var boundingBox=slot.attachment;if(boundingBox.type!=spine.AttachmentType.boundingbox)continue;boundingBoxes.push(boundingBox);var poolCount=polygonPool.length,polygon;if(poolCount>0){polygon=polygonPool[poolCount-1];polygonPool.splice(poolCount-1,1);}else
  polygon=[];polygons.push(polygon);polygon.length=boundingBox.vertices.length;boundingBox.computeWorldVertices(x,y,slot.bone,polygon);}
  if(updateAabb)this.aabbCompute();},aabbCompute:function(){var polygons=this.polygons;var minX=Number.MAX_VALUE,minY=Number.MAX_VALUE,maxX=Number.MIN_VALUE,maxY=Number.MIN_VALUE;for(var i=0,n=polygons.length;i<n;i++){var vertices=polygons[i];for(var ii=0,nn=vertices.length;ii<nn;ii+=2){var x=vertices[ii];var y=vertices[ii+1];minX=Math.min(minX,x);minY=Math.min(minY,y);maxX=Math.max(maxX,x);maxY=Math.max(maxY,y);}}
  this.minX=minX;this.minY=minY;this.maxX=maxX;this.maxY=maxY;},aabbContainsPoint:function(x,y){return x>=this.minX&&x<=this.maxX&&y>=this.minY&&y<=this.maxY;},aabbIntersectsSegment:function(x1,y1,x2,y2){var minX=this.minX,minY=this.minY,maxX=this.maxX,maxY=this.maxY;if((x1<=minX&&x2<=minX)||(y1<=minY&&y2<=minY)||(x1>=maxX&&x2>=maxX)||(y1>=maxY&&y2>=maxY))
  return false;var m=(y2-y1)/(x2-x1);var y=m*(minX-x1)+y1;if(y>minY&&y<maxY)return true;y=m*(maxX-x1)+y1;if(y>minY&&y<maxY)return true;var x=(minY-y1)/m+x1;if(x>minX&&x<maxX)return true;x=(maxY-y1)/m+x1;if(x>minX&&x<maxX)return true;return false;},aabbIntersectsSkeleton:function(bounds){return this.minX<bounds.maxX&&this.maxX>bounds.minX&&this.minY<bounds.maxY&&this.maxY>bounds.minY;},containsPoint:function(x,y){var polygons=this.polygons;for(var i=0,n=polygons.length;i<n;i++)
  if(this.polygonContainsPoint(polygons[i],x,y))return this.boundingBoxes[i];return null;},intersectsSegment:function(x1,y1,x2,y2){var polygons=this.polygons;for(var i=0,n=polygons.length;i<n;i++)
  if(polygons[i].intersectsSegment(x1,y1,x2,y2))return this.boundingBoxes[i];return null;},polygonContainsPoint:function(polygon,x,y){var nn=polygon.length;var prevIndex=nn-2;var inside=false;for(var ii=0;ii<nn;ii+=2){var vertexY=polygon[ii+1];var prevY=polygon[prevIndex+1];if((vertexY<y&&prevY>=y)||(prevY<y&&vertexY>=y)){var vertexX=polygon[ii];if(vertexX+(y-vertexY)/(prevY-vertexY)*(polygon[prevIndex]-vertexX)<x)inside=!inside;}
  prevIndex=ii;}
  return inside;},polygonIntersectsSegment:function(polygon,x1,y1,x2,y2){var nn=polygon.length;var width12=x1-x2,height12=y1-y2;var det1=x1*y2-y1*x2;var x3=polygon[nn-2],y3=polygon[nn-1];for(var ii=0;ii<nn;ii+=2){var x4=polygon[ii],y4=polygon[ii+1];var det2=x3*y4-y3*x4;var width34=x3-x4,height34=y3-y4;var det3=width12*height34-height12*width34;var x=(det1*width34-width12*det2)/det3;if(((x>=x3&&x<=x4)||(x>=x4&&x<=x3))&&((x>=x1&&x<=x2)||(x>=x2&&x<=x1))){var y=(det1*height34-height12*det2)/det3;if(((y>=y3&&y<=y4)||(y>=y4&&y<=y3))&&((y>=y1&&y<=y2)||(y>=y2&&y<=y1)))return true;}
  x3=x4;y3=y4;}
  return false;},getPolygon:function(attachment){var index=this.boundingBoxes.indexOf(attachment);return index==-1?null:this.polygons[index];},getWidth:function(){return this.maxX-this.minX;},getHeight:function(){return this.maxY-this.minY;}};spine.Bone.yDown=true;PIXI.AnimCache={};PIXI.SpineTextureLoader=function(basePath,crossorigin)
 {PIXI.EventTarget.call(this);this.basePath=basePath;this.crossorigin=crossorigin;this.loadingCount=0;};PIXI.SpineTextureLoader.prototype=PIXI.SpineTextureLoader;PIXI.SpineTextureLoader.prototype.load=function(page,file)
 {page.rendererObject=PIXI.BaseTexture.fromImage(this.basePath+'/'+file,this.crossorigin);if(!page.rendererObject.hasLoaded)
 {var scope=this;++scope.loadingCount;page.rendererObject.addEventListener('loaded',function(){--scope.loadingCount;scope.dispatchEvent({type:'loadedBaseTexture',content:scope});});}};PIXI.SpineTextureLoader.prototype.unload=function(texture)
 {texture.destroy(true);};PIXI.Spine=function(url){PIXI.DisplayObjectContainer.call(this);this.spineData=PIXI.AnimCache[url];if(!this.spineData){throw new Error('Spine data must be preloaded using PIXI.SpineLoader or PIXI.AssetLoader: '+url);}
  this.skeleton=new spine.Skeleton(this.spineData);this.skeleton.updateWorldTransform();this.stateData=new spine.AnimationStateData(this.spineData);this.state=new spine.AnimationState(this.stateData);this.slotContainers=[];for(var i=0,n=this.skeleton.drawOrder.length;i<n;i++){var slot=this.skeleton.drawOrder[i];var attachment=slot.attachment;var slotContainer=new PIXI.DisplayObjectContainer();this.slotContainers.push(slotContainer);this.addChild(slotContainer);if(attachment instanceof spine.RegionAttachment)
  {var spriteName=attachment.rendererObject.name;var sprite=this.createSprite(slot,attachment);slot.currentSprite=sprite;slot.currentSpriteName=spriteName;slotContainer.addChild(sprite);}
  else if(attachment instanceof spine.MeshAttachment)
  {var mesh=this.createMesh(slot,attachment);slot.currentMesh=mesh;slot.currentMeshName=attachment.name;slotContainer.addChild(mesh);}
  else
  {continue;}}
  this.autoUpdate=true;};PIXI.Spine.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);PIXI.Spine.prototype.constructor=PIXI.Spine;Object.defineProperty(PIXI.Spine.prototype,'autoUpdate',{get:function()
 {return(this.updateTransform===PIXI.Spine.prototype.autoUpdateTransform);},set:function(value)
 {this.updateTransform=value?PIXI.Spine.prototype.autoUpdateTransform:PIXI.DisplayObjectContainer.prototype.updateTransform;}});PIXI.Spine.prototype.update=function(dt)
 {this.state.update(dt);this.state.apply(this.skeleton);this.skeleton.updateWorldTransform();var drawOrder=this.skeleton.drawOrder;for(var i=0,n=drawOrder.length;i<n;i++){var slot=drawOrder[i];var attachment=slot.attachment;var slotContainer=this.slotContainers[i];if(!attachment)
 {slotContainer.visible=false;continue;}
  var type=attachment.type;if(type===spine.AttachmentType.region)
  {if(attachment.rendererObject)
  {if(!slot.currentSpriteName||slot.currentSpriteName!==attachment.name)
  {var spriteName=attachment.rendererObject.name;if(slot.currentSprite!==undefined)
  {slot.currentSprite.visible=false;}
   slot.sprites=slot.sprites||{};if(slot.sprites[spriteName]!==undefined)
  {slot.sprites[spriteName].visible=true;}
  else
  {var sprite=this.createSprite(slot,attachment);slotContainer.addChild(sprite);}
   slot.currentSprite=slot.sprites[spriteName];slot.currentSpriteName=spriteName;}}
   var bone=slot.bone;slotContainer.position.x=bone.worldX+attachment.x*bone.m00+attachment.y*bone.m01;slotContainer.position.y=bone.worldY+attachment.x*bone.m10+attachment.y*bone.m11;slotContainer.scale.x=bone.worldScaleX;slotContainer.scale.y=bone.worldScaleY;slotContainer.rotation=-(slot.bone.worldRotation*spine.degRad);slot.currentSprite.tint=PIXI.rgb2hex([slot.r,slot.g,slot.b]);}
  else if(type===spine.AttachmentType.skinnedmesh)
  {if(!slot.currentMeshName||slot.currentMeshName!==attachment.name)
  {var meshName=attachment.name;if(slot.currentMesh!==undefined)
  {slot.currentMesh.visible=false;}
   slot.meshes=slot.meshes||{};if(slot.meshes[meshName]!==undefined)
  {slot.meshes[meshName].visible=true;}
  else
  {var mesh=this.createMesh(slot,attachment);slotContainer.addChild(mesh);}
   slot.currentMesh=slot.meshes[meshName];slot.currentMeshName=meshName;}
   attachment.computeWorldVertices(slot.bone.skeleton.x,slot.bone.skeleton.y,slot,slot.currentMesh.vertices);}
  else
  {slotContainer.visible=false;continue;}
  slotContainer.visible=true;slotContainer.alpha=slot.a;}};PIXI.Spine.prototype.autoUpdateTransform=function(){this.lastTime=this.lastTime||Date.now();var timeDelta=(Date.now()-this.lastTime)*0.001;this.lastTime=Date.now();this.update(timeDelta);PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);};PIXI.Spine.prototype.createSprite=function(slot,attachment){var descriptor=attachment.rendererObject;var baseTexture=descriptor.page.rendererObject;var spriteRect=new PIXI.Rectangle(descriptor.x,descriptor.y,descriptor.rotate?descriptor.height:descriptor.width,descriptor.rotate?descriptor.width:descriptor.height);var spriteTexture=new PIXI.Texture(baseTexture,spriteRect);var sprite=new PIXI.Sprite(spriteTexture);var baseRotation=descriptor.rotate?Math.PI*0.5:0.0;sprite.scale.set(descriptor.width/descriptor.originalWidth,descriptor.height/descriptor.originalHeight);sprite.rotation=baseRotation-(attachment.rotation*spine.degRad);sprite.anchor.x=sprite.anchor.y=0.5;slot.sprites=slot.sprites||{};slot.sprites[descriptor.name]=sprite;return sprite;};PIXI.Spine.prototype.createMesh=function(slot,attachment){var descriptor=attachment.rendererObject;var baseTexture=descriptor.page.rendererObject;var texture=new PIXI.Texture(baseTexture);var strip=new PIXI.Strip(texture);strip.drawMode=PIXI.Strip.DrawModes.TRIANGLES;strip.canvasPadding=1.5;strip.vertices=new PIXI.Float32Array(attachment.uvs.length);strip.uvs=attachment.uvs;strip.indices=attachment.triangles;slot.meshes=slot.meshes||{};slot.meshes[attachment.name]=strip;return strip;};PIXI.BaseTextureCache={};PIXI.BaseTextureCacheIdGenerator=0;PIXI.BaseTexture=function(source,scaleMode)
 {this.resolution=1;this.width=100;this.height=100;this.scaleMode=scaleMode||PIXI.scaleModes.DEFAULT;this.hasLoaded=false;this.source=source;this._UID=PIXI._UID++;this.premultipliedAlpha=true;this._glTextures=[];this.mipmap=false;this._dirty=[true,true,true,true];if(!source)return;if((this.source.complete||this.source.getContext)&&this.source.width&&this.source.height)
 {this.hasLoaded=true;this.width=this.source.naturalWidth||this.source.width;this.height=this.source.naturalHeight||this.source.height;this.dirty();}
 else
 {var scope=this;this.source.onload=function(){scope.hasLoaded=true;scope.width=scope.source.naturalWidth||scope.source.width;scope.height=scope.source.naturalHeight||scope.source.height;scope.dirty();scope.dispatchEvent({type:'loaded',content:scope});};this.source.onerror=function(){scope.dispatchEvent({type:'error',content:scope});};}
  this.imageUrl=null;this._powerOf2=false;};PIXI.BaseTexture.prototype.constructor=PIXI.BaseTexture;PIXI.EventTarget.mixin(PIXI.BaseTexture.prototype);PIXI.BaseTexture.prototype.destroy=function()
 {if(this.imageUrl)
 {delete PIXI.BaseTextureCache[this.imageUrl];delete PIXI.TextureCache[this.imageUrl];this.imageUrl=null;if(!navigator.isCocoonJS)this.source.src='';}
 else if(this.source&&this.source._pixiId)
 {delete PIXI.BaseTextureCache[this.source._pixiId];}
  this.source=null;this.unloadFromGPU();};PIXI.BaseTexture.prototype.updateSourceImage=function(newSrc)
 {this.hasLoaded=false;this.source.src=null;this.source.src=newSrc;};PIXI.BaseTexture.prototype.dirty=function()
 {for(var i=0;i<this._glTextures.length;i++)
 {this._dirty[i]=true;}};PIXI.BaseTexture.prototype.unloadFromGPU=function()
 {this.dirty();for(var i=this._glTextures.length-1;i>=0;i--)
 {var glTexture=this._glTextures[i];var gl=PIXI.glContexts[i];if(gl&&glTexture)
 {gl.deleteTexture(glTexture);}}
  this._glTextures.length=0;this.dirty();};PIXI.BaseTexture.fromImage=function(imageUrl,crossorigin,scaleMode)
 {var baseTexture=PIXI.BaseTextureCache[imageUrl];if(crossorigin===undefined&&imageUrl.indexOf('data:')===-1)crossorigin=true;if(!baseTexture)
 {var image=new Image();if(crossorigin)
 {image.crossOrigin='';}
  image.src=imageUrl;baseTexture=new PIXI.BaseTexture(image,scaleMode);baseTexture.imageUrl=imageUrl;PIXI.BaseTextureCache[imageUrl]=baseTexture;if(imageUrl.indexOf(PIXI.RETINA_PREFIX+'.')!==-1)
 {baseTexture.resolution=2;}}
  return baseTexture;};PIXI.BaseTexture.fromCanvas=function(canvas,scaleMode)
 {if(!canvas._pixiId)
 {canvas._pixiId='canvas_'+PIXI.TextureCacheIdGenerator++;}
  var baseTexture=PIXI.BaseTextureCache[canvas._pixiId];if(!baseTexture)
 {baseTexture=new PIXI.BaseTexture(canvas,scaleMode);PIXI.BaseTextureCache[canvas._pixiId]=baseTexture;}
  return baseTexture;};PIXI.TextureCache={};PIXI.FrameCache={};PIXI.TextureCacheIdGenerator=0;PIXI.Texture=function(baseTexture,frame,crop,trim)
 {this.noFrame=false;if(!frame)
 {this.noFrame=true;frame=new PIXI.Rectangle(0,0,1,1);}
  if(baseTexture instanceof PIXI.Texture)
  {baseTexture=baseTexture.baseTexture;}
  this.baseTexture=baseTexture;this.frame=frame;this.trim=trim;this.valid=false;this.requiresUpdate=false;this._uvs=null;this.width=0;this.height=0;this.crop=crop||new PIXI.Rectangle(0,0,1,1);if(baseTexture.hasLoaded)
 {if(this.noFrame)frame=new PIXI.Rectangle(0,0,baseTexture.width,baseTexture.height);this.setFrame(frame);}
 else
 {baseTexture.addEventListener('loaded',this.onBaseTextureLoaded.bind(this));}};PIXI.Texture.prototype.constructor=PIXI.Texture;PIXI.EventTarget.mixin(PIXI.Texture.prototype);PIXI.Texture.prototype.onBaseTextureLoaded=function()
 {var baseTexture=this.baseTexture;baseTexture.removeEventListener('loaded',this.onLoaded);if(this.noFrame)this.frame=new PIXI.Rectangle(0,0,baseTexture.width,baseTexture.height);this.setFrame(this.frame);this.dispatchEvent({type:'update',content:this});};PIXI.Texture.prototype.destroy=function(destroyBase)
 {if(destroyBase)this.baseTexture.destroy();this.valid=false;};PIXI.Texture.prototype.setFrame=function(frame)
 {this.noFrame=false;this.frame=frame;this.width=frame.width;this.height=frame.height;this.crop.x=frame.x;this.crop.y=frame.y;this.crop.width=frame.width;this.crop.height=frame.height;if(!this.trim&&(frame.x+frame.width>this.baseTexture.width||frame.y+frame.height>this.baseTexture.height))
 {throw new Error('Texture Error: frame does not fit inside the base Texture dimensions '+this);}
  this.valid=frame&&frame.width&&frame.height&&this.baseTexture.source&&this.baseTexture.hasLoaded;if(this.trim)
 {this.width=this.trim.width;this.height=this.trim.height;this.frame.width=this.trim.width;this.frame.height=this.trim.height;}
  if(this.valid)this._updateUvs();};PIXI.Texture.prototype._updateUvs=function()
 {if(!this._uvs)this._uvs=new PIXI.TextureUvs();var frame=this.crop;var tw=this.baseTexture.width;var th=this.baseTexture.height;this._uvs.x0=frame.x/tw;this._uvs.y0=frame.y/th;this._uvs.x1=(frame.x+frame.width)/tw;this._uvs.y1=frame.y/th;this._uvs.x2=(frame.x+frame.width)/tw;this._uvs.y2=(frame.y+frame.height)/th;this._uvs.x3=frame.x/tw;this._uvs.y3=(frame.y+frame.height)/th;};PIXI.Texture.fromImage=function(imageUrl,crossorigin,scaleMode)
 {var texture=PIXI.TextureCache[imageUrl];if(!texture)
 {texture=new PIXI.Texture(PIXI.BaseTexture.fromImage(imageUrl,crossorigin,scaleMode));PIXI.TextureCache[imageUrl]=texture;}
  return texture;};PIXI.Texture.fromFrame=function(frameId)
 {var texture=PIXI.TextureCache[frameId];if(!texture)throw new Error('The frameId "'+frameId+'" does not exist in the texture cache ');return texture;};PIXI.Texture.fromCanvas=function(canvas,scaleMode)
 {var baseTexture=PIXI.BaseTexture.fromCanvas(canvas,scaleMode);return new PIXI.Texture(baseTexture);};PIXI.Texture.addTextureToCache=function(texture,id)
 {PIXI.TextureCache[id]=texture;};PIXI.Texture.removeTextureFromCache=function(id)
 {var texture=PIXI.TextureCache[id];delete PIXI.TextureCache[id];delete PIXI.BaseTextureCache[id];return texture;};PIXI.TextureUvs=function()
 {this.x0=0;this.y0=0;this.x1=0;this.y1=0;this.x2=0;this.y2=0;this.x3=0;this.y3=0;};PIXI.Texture.emptyTexture=new PIXI.Texture(new PIXI.BaseTexture());PIXI.RenderTexture=function(width,height,renderer,scaleMode,resolution)
 {this.width=width||100;this.height=height||100;this.resolution=resolution||1;this.frame=new PIXI.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution);this.crop=new PIXI.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution);this.baseTexture=new PIXI.BaseTexture();this.baseTexture.width=this.width*this.resolution;this.baseTexture.height=this.height*this.resolution;this.baseTexture._glTextures=[];this.baseTexture.resolution=this.resolution;this.baseTexture.scaleMode=scaleMode||PIXI.scaleModes.DEFAULT;this.baseTexture.hasLoaded=true;PIXI.Texture.call(this,this.baseTexture,new PIXI.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution));this.renderer=renderer||PIXI.defaultRenderer;if(this.renderer.type===PIXI.WEBGL_RENDERER)
 {var gl=this.renderer.gl;this.baseTexture._dirty[gl.id]=false;this.textureBuffer=new PIXI.FilterTexture(gl,this.width,this.height,this.baseTexture.scaleMode);this.baseTexture._glTextures[gl.id]=this.textureBuffer.texture;this.render=this.renderWebGL;this.projection=new PIXI.Point(this.width*0.5,-this.height*0.5);}
 else
 {this.render=this.renderCanvas;this.textureBuffer=new PIXI.CanvasBuffer(this.width*this.resolution,this.height*this.resolution);this.baseTexture.source=this.textureBuffer.canvas;}
  this.valid=true;this._updateUvs();};PIXI.RenderTexture.prototype=Object.create(PIXI.Texture.prototype);PIXI.RenderTexture.prototype.constructor=PIXI.RenderTexture;PIXI.RenderTexture.prototype.resize=function(width,height,updateBase)
 {if(width===this.width&&height===this.height)return;this.valid=(width>0&&height>0);this.width=width;this.height=height;this.frame.width=this.crop.width=width*this.resolution;this.frame.height=this.crop.height=height*this.resolution;if(updateBase)
 {this.baseTexture.width=this.width*this.resolution;this.baseTexture.height=this.height*this.resolution;}
  if(this.renderer.type===PIXI.WEBGL_RENDERER)
  {this.projection.x=this.width/2;this.projection.y=-this.height/2;}
  if(!this.valid)return;this.textureBuffer.resize(this.width,this.height);};PIXI.RenderTexture.prototype.clear=function()
 {if(!this.valid)return;if(this.renderer.type===PIXI.WEBGL_RENDERER)
 {this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER,this.textureBuffer.frameBuffer);}
  this.textureBuffer.clear();};PIXI.RenderTexture.prototype.renderWebGL=function(displayObject,matrix,clear)
 {if(!this.valid)return;var wt=displayObject.worldTransform;wt.identity();wt.translate(0,this.projection.y*2);if(matrix)wt.append(matrix);wt.scale(1,-1);displayObject.worldAlpha=1;var children=displayObject.children;for(var i=0,j=children.length;i<j;i++)
 {children[i].updateTransform();}
  var gl=this.renderer.gl;gl.viewport(0,0,this.width*this.resolution,this.height*this.resolution);gl.bindFramebuffer(gl.FRAMEBUFFER,this.textureBuffer.frameBuffer);if(clear)this.textureBuffer.clear();this.renderer.spriteBatch.dirty=true;this.renderer.renderDisplayObject(displayObject,this.projection,this.textureBuffer.frameBuffer);this.renderer.spriteBatch.dirty=true;};PIXI.RenderTexture.prototype.renderCanvas=function(displayObject,matrix,clear)
 {if(!this.valid)return;var wt=displayObject.worldTransform;wt.identity();if(matrix)wt.append(matrix);displayObject.worldAlpha=1;var children=displayObject.children;for(var i=0,j=children.length;i<j;i++)
 {children[i].updateTransform();}
  if(clear)this.textureBuffer.clear();var context=this.textureBuffer.context;var realResolution=this.renderer.resolution;this.renderer.resolution=this.resolution;this.renderer.renderDisplayObject(displayObject,context);this.renderer.resolution=realResolution;};PIXI.RenderTexture.prototype.getImage=function()
 {var image=new Image();image.src=this.getBase64();return image;};PIXI.RenderTexture.prototype.getBase64=function()
 {return this.getCanvas().toDataURL();};PIXI.RenderTexture.prototype.getCanvas=function()
 {if(this.renderer.type===PIXI.WEBGL_RENDERER)
 {var gl=this.renderer.gl;var width=this.textureBuffer.width;var height=this.textureBuffer.height;var webGLPixels=new Uint8Array(4*width*height);gl.bindFramebuffer(gl.FRAMEBUFFER,this.textureBuffer.frameBuffer);gl.readPixels(0,0,width,height,gl.RGBA,gl.UNSIGNED_BYTE,webGLPixels);gl.bindFramebuffer(gl.FRAMEBUFFER,null);var tempCanvas=new PIXI.CanvasBuffer(width,height);var canvasData=tempCanvas.context.getImageData(0,0,width,height);canvasData.data.set(webGLPixels);tempCanvas.context.putImageData(canvasData,0,0);return tempCanvas.canvas;}
 else
 {return this.textureBuffer.canvas;}};PIXI.RenderTexture.tempMatrix=new PIXI.Matrix();PIXI.VideoTexture=function(source,scaleMode)
 {if(!source){throw new Error('No video source element specified.');}
  if((source.readyState===source.HAVE_ENOUGH_DATA||source.readyState===source.HAVE_FUTURE_DATA)&&source.width&&source.height)
  {source.complete=true;}
  PIXI.BaseTexture.call(this,source,scaleMode);this.autoUpdate=false;this.updateBound=this._onUpdate.bind(this);if(!source.complete)
 {this._onCanPlay=this.onCanPlay.bind(this);source.addEventListener('canplay',this._onCanPlay);source.addEventListener('canplaythrough',this._onCanPlay);source.addEventListener('play',this.onPlayStart.bind(this));source.addEventListener('pause',this.onPlayStop.bind(this));}};PIXI.VideoTexture.prototype=Object.create(PIXI.BaseTexture.prototype);PIXI.VideoTexture.constructor=PIXI.VideoTexture;PIXI.VideoTexture.prototype._onUpdate=function()
 {if(this.autoUpdate)
 {window.requestAnimationFrame(this.updateBound);this.dirty();}};PIXI.VideoTexture.prototype.onPlayStart=function()
 {if(!this.autoUpdate)
 {window.requestAnimationFrame(this.updateBound);this.autoUpdate=true;}};PIXI.VideoTexture.prototype.onPlayStop=function()
 {this.autoUpdate=false;};PIXI.VideoTexture.prototype.onCanPlay=function()
 {if(event.type==='canplaythrough')
 {this.hasLoaded=true;if(this.source)
 {this.source.removeEventListener('canplay',this._onCanPlay);this.source.removeEventListener('canplaythrough',this._onCanPlay);this.width=this.source.videoWidth;this.height=this.source.videoHeight;if(!this.__loaded){this.__loaded=true;this.dispatchEvent({type:'loaded',content:this});}}}};PIXI.VideoTexture.prototype.destroy=function()
 {if(this.source&&this.source._pixiId)
 {PIXI.BaseTextureCache[this.source._pixiId]=null;delete PIXI.BaseTextureCache[this.source._pixiId];this.source._pixiId=null;delete this.source._pixiId;}
  PIXI.BaseTexture.prototype.destroy.call(this);};PIXI.VideoTexture.baseTextureFromVideo=function(video,scaleMode)
 {if(!video._pixiId)
 {video._pixiId='video_'+PIXI.TextureCacheIdGenerator++;}
  var baseTexture=PIXI.BaseTextureCache[video._pixiId];if(!baseTexture)
 {baseTexture=new PIXI.VideoTexture(video,scaleMode);PIXI.BaseTextureCache[video._pixiId]=baseTexture;}
  return baseTexture;};PIXI.VideoTexture.textureFromVideo=function(video,scaleMode)
 {var baseTexture=PIXI.VideoTexture.baseTextureFromVideo(video,scaleMode);return new PIXI.Texture(baseTexture);};PIXI.VideoTexture.fromUrl=function(videoSrc,scaleMode)
 {var video=document.createElement('video');video.src=videoSrc;video.autoPlay=true;video.play();return PIXI.VideoTexture.textureFromVideo(video,scaleMode);};PIXI.AssetLoader=function(assetURLs,crossorigin)
 {this.assetURLs=assetURLs;this.crossorigin=crossorigin;this.loadersByType={'jpg':PIXI.ImageLoader,'jpeg':PIXI.ImageLoader,'png':PIXI.ImageLoader,'gif':PIXI.ImageLoader,'webp':PIXI.ImageLoader,'json':PIXI.JsonLoader,'atlas':PIXI.AtlasLoader,'anim':PIXI.SpineLoader,'xml':PIXI.BitmapFontLoader,'fnt':PIXI.BitmapFontLoader};};PIXI.EventTarget.mixin(PIXI.AssetLoader.prototype);PIXI.AssetLoader.prototype.constructor=PIXI.AssetLoader;PIXI.AssetLoader.prototype._getDataType=function(str)
 {var test='data:';var start=str.slice(0,test.length).toLowerCase();if(start===test){var data=str.slice(test.length);var sepIdx=data.indexOf(',');if(sepIdx===-1)
  return null;var info=data.slice(0,sepIdx).split(';')[0];if(!info||info.toLowerCase()==='text/plain')
  return'txt';return info.split('/').pop().toLowerCase();}
  return null;};PIXI.AssetLoader.prototype.load=function()
 {var scope=this;function onLoad(evt){scope.onAssetLoaded(evt.data.content);}
  this.loadCount=this.assetURLs.length;for(var i=0;i<this.assetURLs.length;i++)
 {var fileName=this.assetURLs[i];var fileType=this._getDataType(fileName);if(!fileType)
  fileType=fileName.split('?').shift().split('.').pop().toLowerCase();var Constructor=this.loadersByType[fileType];if(!Constructor)
  throw new Error(fileType+' is an unsupported file type');var loader=new Constructor(fileName,this.crossorigin);loader.on('loaded',onLoad);loader.load();}};PIXI.AssetLoader.prototype.onAssetLoaded=function(loader)
 {this.loadCount--;this.emit('onProgress',{content:this,loader:loader,loaded:this.assetURLs.length-this.loadCount,total:this.assetURLs.length});if(this.onProgress)this.onProgress(loader);if(!this.loadCount)
 {this.emit('onComplete',{content:this});if(this.onComplete)this.onComplete();}};PIXI.JsonLoader=function(url,crossorigin){this.url=url;this.crossorigin=crossorigin;this.baseUrl=url.replace(/[^\/]*$/,'');this.loaded=false;};PIXI.JsonLoader.prototype.constructor=PIXI.JsonLoader;PIXI.EventTarget.mixin(PIXI.JsonLoader.prototype);PIXI.JsonLoader.prototype.load=function(){if(window.XDomainRequest&&this.crossorigin)
 {this.ajaxRequest=new window.XDomainRequest();this.ajaxRequest.timeout=3000;this.ajaxRequest.onerror=this.onError.bind(this);this.ajaxRequest.ontimeout=this.onError.bind(this);this.ajaxRequest.onprogress=function(){};this.ajaxRequest.onload=this.onJSONLoaded.bind(this);}
 else
 {if(window.XMLHttpRequest)
 {this.ajaxRequest=new window.XMLHttpRequest();}
 else
 {this.ajaxRequest=new window.ActiveXObject('Microsoft.XMLHTTP');}
  this.ajaxRequest.onreadystatechange=this.onReadyStateChanged.bind(this);}
  this.ajaxRequest.open('GET',this.url,true);this.ajaxRequest.send();};PIXI.JsonLoader.prototype.onReadyStateChanged=function(){if(this.ajaxRequest.readyState===4&&(this.ajaxRequest.status===200||window.location.href.indexOf('http')===-1)){this.onJSONLoaded();}};PIXI.JsonLoader.prototype.onJSONLoaded=function(){if(!this.ajaxRequest.responseText)
 {this.onError();return;}
  this.json=JSON.parse(this.ajaxRequest.responseText);if(this.json.frames&&this.json.meta&&this.json.meta.image)
  {var textureUrl=this.baseUrl+this.json.meta.image;var image=new PIXI.ImageLoader(textureUrl,this.crossorigin);var frameData=this.json.frames;this.texture=image.texture.baseTexture;image.addEventListener('loaded',this.onLoaded.bind(this));for(var i in frameData)
  {var rect=frameData[i].frame;if(rect)
  {var textureSize=new PIXI.Rectangle(rect.x,rect.y,rect.w,rect.h);var crop=textureSize.clone();var trim=null;if(frameData[i].trimmed)
  {var actualSize=frameData[i].sourceSize;var realSize=frameData[i].spriteSourceSize;trim=new PIXI.Rectangle(realSize.x,realSize.y,actualSize.w,actualSize.h);}
   PIXI.TextureCache[i]=new PIXI.Texture(this.texture,textureSize,crop,trim);}}
   image.load();}
  else if(this.json.bones)
  {if(PIXI.AnimCache[this.url])
  {this.onLoaded();}
  else
  {var atlasPath=this.url.substr(0,this.url.lastIndexOf('.'))+'.atlas';var atlasLoader=new PIXI.JsonLoader(atlasPath,this.crossorigin);var originalLoader=this;atlasLoader.onJSONLoaded=function()
  {if(!this.ajaxRequest.responseText)
  {this.onError();return;}
   var textureLoader=new PIXI.SpineTextureLoader(this.url.substring(0,this.url.lastIndexOf('/')));var spineAtlas=new spine.Atlas(this.ajaxRequest.responseText,textureLoader);var attachmentLoader=new spine.AtlasAttachmentLoader(spineAtlas);var spineJsonParser=new spine.SkeletonJson(attachmentLoader);var skeletonData=spineJsonParser.readSkeletonData(originalLoader.json);PIXI.AnimCache[originalLoader.url]=skeletonData;originalLoader.spine=skeletonData;originalLoader.spineAtlas=spineAtlas;originalLoader.spineAtlasLoader=atlasLoader;if(textureLoader.loadingCount>0)
  {textureLoader.addEventListener('loadedBaseTexture',function(evt){if(evt.content.content.loadingCount<=0)
  {originalLoader.onLoaded();}});}
  else
  {originalLoader.onLoaded();}};atlasLoader.load();}}
  else
  {this.onLoaded();}};PIXI.JsonLoader.prototype.onLoaded=function(){this.loaded=true;this.dispatchEvent({type:'loaded',content:this});};PIXI.JsonLoader.prototype.onError=function(){this.dispatchEvent({type:'error',content:this});};PIXI.AtlasLoader=function(url,crossorigin){this.url=url;this.baseUrl=url.replace(/[^\/]*$/,'');this.crossorigin=crossorigin;this.loaded=false;};PIXI.AtlasLoader.constructor=PIXI.AtlasLoader;PIXI.EventTarget.mixin(PIXI.AtlasLoader.prototype);PIXI.AtlasLoader.prototype.load=function(){this.ajaxRequest=new PIXI.AjaxRequest();this.ajaxRequest.onreadystatechange=this.onAtlasLoaded.bind(this);this.ajaxRequest.open('GET',this.url,true);if(this.ajaxRequest.overrideMimeType)this.ajaxRequest.overrideMimeType('application/json');this.ajaxRequest.send(null);};PIXI.AtlasLoader.prototype.onAtlasLoaded=function(){if(this.ajaxRequest.readyState===4){if(this.ajaxRequest.status===200||window.location.href.indexOf('http')===-1){this.atlas={meta:{image:[]},frames:[]};var result=this.ajaxRequest.responseText.split(/\r?\n/);var lineCount=-3;var currentImageId=0;var currentFrame=null;var nameInNextLine=false;var i=0,j=0,selfOnLoaded=this.onLoaded.bind(this);for(i=0;i<result.length;i++){result[i]=result[i].replace(/^\s+|\s+$/g,'');if(result[i]===''){nameInNextLine=i+1;}
  if(result[i].length>0){if(nameInNextLine===i){this.atlas.meta.image.push(result[i]);currentImageId=this.atlas.meta.image.length-1;this.atlas.frames.push({});lineCount=-3;}else if(lineCount>0){if(lineCount%7===1){if(currentFrame!=null){this.atlas.frames[currentImageId][currentFrame.name]=currentFrame;}
   currentFrame={name:result[i],frame:{}};}else{var text=result[i].split(' ');if(lineCount%7===3){currentFrame.frame.x=Number(text[1].replace(',',''));currentFrame.frame.y=Number(text[2]);}else if(lineCount%7===4){currentFrame.frame.w=Number(text[1].replace(',',''));currentFrame.frame.h=Number(text[2]);}else if(lineCount%7===5){var realSize={x:0,y:0,w:Number(text[1].replace(',','')),h:Number(text[2])};if(realSize.w>currentFrame.frame.w||realSize.h>currentFrame.frame.h){currentFrame.trimmed=true;currentFrame.realSize=realSize;}else{currentFrame.trimmed=false;}}}}
   lineCount++;}}
  if(currentFrame!=null){this.atlas.frames[currentImageId][currentFrame.name]=currentFrame;}
  if(this.atlas.meta.image.length>0){this.images=[];for(j=0;j<this.atlas.meta.image.length;j++){var textureUrl=this.baseUrl+this.atlas.meta.image[j];var frameData=this.atlas.frames[j];this.images.push(new PIXI.ImageLoader(textureUrl,this.crossorigin));for(i in frameData){var rect=frameData[i].frame;if(rect){PIXI.TextureCache[i]=new PIXI.Texture(this.images[j].texture.baseTexture,{x:rect.x,y:rect.y,width:rect.w,height:rect.h});if(frameData[i].trimmed){PIXI.TextureCache[i].realSize=frameData[i].realSize;PIXI.TextureCache[i].trim.x=0;PIXI.TextureCache[i].trim.y=0;}}}}
   this.currentImageId=0;for(j=0;j<this.images.length;j++){this.images[j].on('loaded',selfOnLoaded);}
   this.images[this.currentImageId].load();}else{this.onLoaded();}}else{this.onError();}}};PIXI.AtlasLoader.prototype.onLoaded=function(){if(this.images.length-1>this.currentImageId){this.currentImageId++;this.images[this.currentImageId].load();}else{this.loaded=true;this.emit('loaded',{content:this});}};PIXI.AtlasLoader.prototype.onError=function(){this.emit('error',{content:this});};PIXI.SpriteSheetLoader=function(url,crossorigin){this.url=url;this.crossorigin=crossorigin;this.baseUrl=url.replace(/[^\/]*$/,'');this.texture=null;this.frames={};};PIXI.SpriteSheetLoader.prototype.constructor=PIXI.SpriteSheetLoader;PIXI.EventTarget.mixin(PIXI.SpriteSheetLoader.prototype);PIXI.SpriteSheetLoader.prototype.load=function(){var scope=this;var jsonLoader=new PIXI.JsonLoader(this.url,this.crossorigin);jsonLoader.on('loaded',function(event){scope.json=event.data.content.json;scope.onLoaded();});jsonLoader.load();};PIXI.SpriteSheetLoader.prototype.onLoaded=function(){this.emit('loaded',{content:this});};PIXI.ImageLoader=function(url,crossorigin)
 {this.texture=PIXI.Texture.fromImage(url,crossorigin);this.frames=[];};PIXI.ImageLoader.prototype.constructor=PIXI.ImageLoader;PIXI.EventTarget.mixin(PIXI.ImageLoader.prototype);PIXI.ImageLoader.prototype.load=function()
 {if(!this.texture.baseTexture.hasLoaded)
 {this.texture.baseTexture.on('loaded',this.onLoaded.bind(this));}
 else
 {this.onLoaded();}};PIXI.ImageLoader.prototype.onLoaded=function()
 {this.emit('loaded',{content:this});};PIXI.ImageLoader.prototype.loadFramedSpriteSheet=function(frameWidth,frameHeight,textureName)
 {this.frames=[];var cols=Math.floor(this.texture.width/frameWidth);var rows=Math.floor(this.texture.height/frameHeight);var i=0;for(var y=0;y<rows;y++)
 {for(var x=0;x<cols;x++,i++)
 {var texture=new PIXI.Texture(this.texture.baseTexture,{x:x*frameWidth,y:y*frameHeight,width:frameWidth,height:frameHeight});this.frames.push(texture);if(textureName)PIXI.TextureCache[textureName+'-'+i]=texture;}}
  this.load();};PIXI.BitmapFontLoader=function(url,crossorigin)
 {this.url=url;this.crossorigin=crossorigin;this.baseUrl=url.replace(/[^\/]*$/,'');this.texture=null;};PIXI.BitmapFontLoader.prototype.constructor=PIXI.BitmapFontLoader;PIXI.EventTarget.mixin(PIXI.BitmapFontLoader.prototype);PIXI.BitmapFontLoader.prototype.load=function()
 {this.ajaxRequest=new PIXI.AjaxRequest();this.ajaxRequest.onreadystatechange=this.onXMLLoaded.bind(this);this.ajaxRequest.open('GET',this.url,true);if(this.ajaxRequest.overrideMimeType)this.ajaxRequest.overrideMimeType('application/xml');this.ajaxRequest.send(null);};PIXI.BitmapFontLoader.prototype.onXMLLoaded=function()
 {if(this.ajaxRequest.readyState===4)
 {if(this.ajaxRequest.status===200||window.location.protocol.indexOf('http')===-1)
 {var responseXML=this.ajaxRequest.responseXML;if(!responseXML||/MSIE 9/i.test(navigator.userAgent)||navigator.isCocoonJS){if(typeof(window.DOMParser)==='function'){var domparser=new DOMParser();responseXML=domparser.parseFromString(this.ajaxRequest.responseText,'text/xml');}else{var div=document.createElement('div');div.innerHTML=this.ajaxRequest.responseText;responseXML=div;}}
  var textureUrl=this.baseUrl+responseXML.getElementsByTagName('page')[0].getAttribute('file');var image=new PIXI.ImageLoader(textureUrl,this.crossorigin);this.texture=image.texture.baseTexture;var data={};var info=responseXML.getElementsByTagName('info')[0];var common=responseXML.getElementsByTagName('common')[0];data.font=info.getAttribute('face');data.size=parseInt(info.getAttribute('size'),10);data.lineHeight=parseInt(common.getAttribute('lineHeight'),10);data.chars={};var letters=responseXML.getElementsByTagName('char');for(var i=0;i<letters.length;i++)
 {var charCode=parseInt(letters[i].getAttribute('id'),10);var textureRect=new PIXI.Rectangle(parseInt(letters[i].getAttribute('x'),10),parseInt(letters[i].getAttribute('y'),10),parseInt(letters[i].getAttribute('width'),10),parseInt(letters[i].getAttribute('height'),10));data.chars[charCode]={xOffset:parseInt(letters[i].getAttribute('xoffset'),10),yOffset:parseInt(letters[i].getAttribute('yoffset'),10),xAdvance:parseInt(letters[i].getAttribute('xadvance'),10),kerning:{},texture:PIXI.TextureCache[charCode]=new PIXI.Texture(this.texture,textureRect)};}
  var kernings=responseXML.getElementsByTagName('kerning');for(i=0;i<kernings.length;i++)
 {var first=parseInt(kernings[i].getAttribute('first'),10);var second=parseInt(kernings[i].getAttribute('second'),10);var amount=parseInt(kernings[i].getAttribute('amount'),10);data.chars[second].kerning[first]=amount;}
  PIXI.BitmapText.fonts[data.font]=data;image.addEventListener('loaded',this.onLoaded.bind(this));image.load();}}};PIXI.BitmapFontLoader.prototype.onLoaded=function()
 {this.emit('loaded',{content:this});};PIXI.SpineLoader=function(url,crossorigin)
 {this.url=url;this.crossorigin=crossorigin;this.loaded=false;};PIXI.SpineLoader.prototype.constructor=PIXI.SpineLoader;PIXI.EventTarget.mixin(PIXI.SpineLoader.prototype);PIXI.SpineLoader.prototype.load=function(){var scope=this;var jsonLoader=new PIXI.JsonLoader(this.url,this.crossorigin);jsonLoader.on('loaded',function(event){scope.json=event.data.content.json;scope.onLoaded();});jsonLoader.load();};PIXI.SpineLoader.prototype.onLoaded=function(){this.loaded=true;this.emit('loaded',{content:this});};PIXI.AbstractFilter=function(fragmentSrc,uniforms)
 {this.passes=[this];this.shaders=[];this.dirty=true;this.padding=0;this.uniforms=uniforms||{};this.fragmentSrc=fragmentSrc||[];};PIXI.AbstractFilter.prototype.constructor=PIXI.AbstractFilter;PIXI.AbstractFilter.prototype.syncUniforms=function()
 {for(var i=0,j=this.shaders.length;i<j;i++)
 {this.shaders[i].dirty=true;}};PIXI.AlphaMaskFilter=function(texture)
 {PIXI.AbstractFilter.call(this);this.passes=[this];texture.baseTexture._powerOf2=true;this.uniforms={mask:{type:'sampler2D',value:texture},mapDimensions:{type:'2f',value:{x:1,y:5112}},dimensions:{type:'4fv',value:[0,0,0,0]}};if(texture.baseTexture.hasLoaded)
 {this.uniforms.mask.value.x=texture.width;this.uniforms.mask.value.y=texture.height;}
 else
 {this.boundLoadedFunction=this.onTextureLoaded.bind(this);texture.baseTexture.on('loaded',this.boundLoadedFunction);}
  this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D mask;','uniform sampler2D uSampler;','uniform vec2 offset;','uniform vec4 dimensions;','uniform vec2 mapDimensions;','void main(void) {','   vec2 mapCords = vTextureCoord.xy;','   mapCords += (dimensions.zw + offset)/ dimensions.xy ;','   mapCords.y *= -1.0;','   mapCords.y += 1.0;','   mapCords *= dimensions.xy / mapDimensions;','   vec4 original =  texture2D(uSampler, vTextureCoord);','   float maskAlpha =  texture2D(mask, mapCords).r;','   original *= maskAlpha;','   gl_FragColor =  original;','}'];};PIXI.AlphaMaskFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.AlphaMaskFilter.prototype.constructor=PIXI.AlphaMaskFilter;PIXI.AlphaMaskFilter.prototype.onTextureLoaded=function()
 {this.uniforms.mapDimensions.value.x=this.uniforms.mask.value.width;this.uniforms.mapDimensions.value.y=this.uniforms.mask.value.height;this.uniforms.mask.value.baseTexture.off('loaded',this.boundLoadedFunction);};Object.defineProperty(PIXI.AlphaMaskFilter.prototype,'map',{get:function(){return this.uniforms.mask.value;},set:function(value){this.uniforms.mask.value=value;}});PIXI.ColorMatrixFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={matrix:{type:'mat4',value:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float invert;','uniform mat4 matrix;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord) * matrix;','}'];};PIXI.ColorMatrixFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.ColorMatrixFilter.prototype.constructor=PIXI.ColorMatrixFilter;Object.defineProperty(PIXI.ColorMatrixFilter.prototype,'matrix',{get:function(){return this.uniforms.matrix.value;},set:function(value){this.uniforms.matrix.value=value;}});PIXI.GrayFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={gray:{type:'1f',value:1}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D uSampler;','uniform float gray;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord);','   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);','}'];};PIXI.GrayFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.GrayFilter.prototype.constructor=PIXI.GrayFilter;Object.defineProperty(PIXI.GrayFilter.prototype,'gray',{get:function(){return this.uniforms.gray.value;},set:function(value){this.uniforms.gray.value=value;}});PIXI.DisplacementFilter=function(texture)
 {PIXI.AbstractFilter.call(this);this.passes=[this];texture.baseTexture._powerOf2=true;this.uniforms={displacementMap:{type:'sampler2D',value:texture},scale:{type:'2f',value:{x:30,y:30}},offset:{type:'2f',value:{x:0,y:0}},mapDimensions:{type:'2f',value:{x:1,y:5112}},dimensions:{type:'4fv',value:[0,0,0,0]}};if(texture.baseTexture.hasLoaded)
 {this.uniforms.mapDimensions.value.x=texture.width;this.uniforms.mapDimensions.value.y=texture.height;}
 else
 {this.boundLoadedFunction=this.onTextureLoaded.bind(this);texture.baseTexture.on('loaded',this.boundLoadedFunction);}
  this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D displacementMap;','uniform sampler2D uSampler;','uniform vec2 scale;','uniform vec2 offset;','uniform vec4 dimensions;','uniform vec2 mapDimensions;','void main(void) {','   vec2 mapCords = vTextureCoord.xy;','   mapCords += (dimensions.zw + offset)/ dimensions.xy ;','   mapCords.y *= -1.0;','   mapCords.y += 1.0;','   vec2 matSample = texture2D(displacementMap, mapCords).xy;','   matSample -= 0.5;','   matSample *= scale;','   matSample /= mapDimensions;','   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));','   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);','   vec2 cord = vTextureCoord;','}'];};PIXI.DisplacementFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.DisplacementFilter.prototype.constructor=PIXI.DisplacementFilter;PIXI.DisplacementFilter.prototype.onTextureLoaded=function()
 {this.uniforms.mapDimensions.value.x=this.uniforms.displacementMap.value.width;this.uniforms.mapDimensions.value.y=this.uniforms.displacementMap.value.height;this.uniforms.displacementMap.value.baseTexture.off('loaded',this.boundLoadedFunction);};Object.defineProperty(PIXI.DisplacementFilter.prototype,'map',{get:function(){return this.uniforms.displacementMap.value;},set:function(value){this.uniforms.displacementMap.value=value;}});Object.defineProperty(PIXI.DisplacementFilter.prototype,'scale',{get:function(){return this.uniforms.scale.value;},set:function(value){this.uniforms.scale.value=value;}});Object.defineProperty(PIXI.DisplacementFilter.prototype,'offset',{get:function(){return this.uniforms.offset.value;},set:function(value){this.uniforms.offset.value=value;}});PIXI.PixelateFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={invert:{type:'1f',value:0},dimensions:{type:'4fv',value:new PIXI.Float32Array([10000,100,10,10])},pixelSize:{type:'2f',value:{x:10,y:10}}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform vec2 testDim;','uniform vec4 dimensions;','uniform vec2 pixelSize;','uniform sampler2D uSampler;','void main(void) {','   vec2 coord = vTextureCoord;','   vec2 size = dimensions.xy/pixelSize;','   vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;','   gl_FragColor = texture2D(uSampler, color);','}'];};PIXI.PixelateFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.PixelateFilter.prototype.constructor=PIXI.PixelateFilter;Object.defineProperty(PIXI.PixelateFilter.prototype,'size',{get:function(){return this.uniforms.pixelSize.value;},set:function(value){this.dirty=true;this.uniforms.pixelSize.value=value;}});PIXI.BlurXFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={blur:{type:'1f',value:1/512}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float blur;','uniform sampler2D uSampler;','void main(void) {','   vec4 sum = vec4(0.0);','   sum += texture2D(uSampler, vec2(vTextureCoord.x - 4.0*blur, vTextureCoord.y)) * 0.05;','   sum += texture2D(uSampler, vec2(vTextureCoord.x - 3.0*blur, vTextureCoord.y)) * 0.09;','   sum += texture2D(uSampler, vec2(vTextureCoord.x - 2.0*blur, vTextureCoord.y)) * 0.12;','   sum += texture2D(uSampler, vec2(vTextureCoord.x - blur, vTextureCoord.y)) * 0.15;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;','   sum += texture2D(uSampler, vec2(vTextureCoord.x + blur, vTextureCoord.y)) * 0.15;','   sum += texture2D(uSampler, vec2(vTextureCoord.x + 2.0*blur, vTextureCoord.y)) * 0.12;','   sum += texture2D(uSampler, vec2(vTextureCoord.x + 3.0*blur, vTextureCoord.y)) * 0.09;','   sum += texture2D(uSampler, vec2(vTextureCoord.x + 4.0*blur, vTextureCoord.y)) * 0.05;','   gl_FragColor = sum;','}'];};PIXI.BlurXFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.BlurXFilter.prototype.constructor=PIXI.BlurXFilter;Object.defineProperty(PIXI.BlurXFilter.prototype,'blur',{get:function(){return this.uniforms.blur.value/(1/7000);},set:function(value){this.dirty=true;this.uniforms.blur.value=(1/7000)*value;}});PIXI.BlurYFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={blur:{type:'1f',value:1/512}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float blur;','uniform sampler2D uSampler;','void main(void) {','   vec4 sum = vec4(0.0);','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 4.0*blur)) * 0.05;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 3.0*blur)) * 0.09;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 2.0*blur)) * 0.12;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - blur)) * 0.15;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + blur)) * 0.15;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 2.0*blur)) * 0.12;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 3.0*blur)) * 0.09;','   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 4.0*blur)) * 0.05;','   gl_FragColor = sum;','}'];};PIXI.BlurYFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.BlurYFilter.prototype.constructor=PIXI.BlurYFilter;Object.defineProperty(PIXI.BlurYFilter.prototype,'blur',{get:function(){return this.uniforms.blur.value/(1/7000);},set:function(value){this.uniforms.blur.value=(1/7000)*value;}});PIXI.BlurFilter=function()
 {this.blurXFilter=new PIXI.BlurXFilter();this.blurYFilter=new PIXI.BlurYFilter();this.passes=[this.blurXFilter,this.blurYFilter];};PIXI.BlurFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.BlurFilter.prototype.constructor=PIXI.BlurFilter;Object.defineProperty(PIXI.BlurFilter.prototype,'blur',{get:function(){return this.blurXFilter.blur;},set:function(value){this.blurXFilter.blur=this.blurYFilter.blur=value;}});Object.defineProperty(PIXI.BlurFilter.prototype,'blurX',{get:function(){return this.blurXFilter.blur;},set:function(value){this.blurXFilter.blur=value;}});Object.defineProperty(PIXI.BlurFilter.prototype,'blurY',{get:function(){return this.blurYFilter.blur;},set:function(value){this.blurYFilter.blur=value;}});PIXI.InvertFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={invert:{type:'1f',value:1}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float invert;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord);','   gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);','}'];};PIXI.InvertFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.InvertFilter.prototype.constructor=PIXI.InvertFilter;Object.defineProperty(PIXI.InvertFilter.prototype,'invert',{get:function(){return this.uniforms.invert.value;},set:function(value){this.uniforms.invert.value=value;}});PIXI.SepiaFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={sepia:{type:'1f',value:1}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float sepia;','uniform sampler2D uSampler;','const mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);','void main(void) {','   gl_FragColor = texture2D(uSampler, vTextureCoord);','   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);','}'];};PIXI.SepiaFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.SepiaFilter.prototype.constructor=PIXI.SepiaFilter;Object.defineProperty(PIXI.SepiaFilter.prototype,'sepia',{get:function(){return this.uniforms.sepia.value;},set:function(value){this.uniforms.sepia.value=value;}});PIXI.TwistFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={radius:{type:'1f',value:0.5},angle:{type:'1f',value:5},offset:{type:'2f',value:{x:0.5,y:0.5}}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform vec4 dimensions;','uniform sampler2D uSampler;','uniform float radius;','uniform float angle;','uniform vec2 offset;','void main(void) {','   vec2 coord = vTextureCoord - offset;','   float distance = length(coord);','   if (distance < radius) {','       float ratio = (radius - distance) / radius;','       float angleMod = ratio * ratio * angle;','       float s = sin(angleMod);','       float c = cos(angleMod);','       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);','   }','   gl_FragColor = texture2D(uSampler, coord+offset);','}'];};PIXI.TwistFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.TwistFilter.prototype.constructor=PIXI.TwistFilter;Object.defineProperty(PIXI.TwistFilter.prototype,'offset',{get:function(){return this.uniforms.offset.value;},set:function(value){this.dirty=true;this.uniforms.offset.value=value;}});Object.defineProperty(PIXI.TwistFilter.prototype,'radius',{get:function(){return this.uniforms.radius.value;},set:function(value){this.dirty=true;this.uniforms.radius.value=value;}});Object.defineProperty(PIXI.TwistFilter.prototype,'angle',{get:function(){return this.uniforms.angle.value;},set:function(value){this.dirty=true;this.uniforms.angle.value=value;}});PIXI.ColorStepFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={step:{type:'1f',value:5}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform sampler2D uSampler;','uniform float step;','void main(void) {','   vec4 color = texture2D(uSampler, vTextureCoord);','   color = floor(color * step) / step;','   gl_FragColor = color;','}'];};PIXI.ColorStepFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.ColorStepFilter.prototype.constructor=PIXI.ColorStepFilter;Object.defineProperty(PIXI.ColorStepFilter.prototype,'step',{get:function(){return this.uniforms.step.value;},set:function(value){this.uniforms.step.value=value;}});PIXI.DotScreenFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={scale:{type:'1f',value:1},angle:{type:'1f',value:5},dimensions:{type:'4fv',value:[0,0,0,0]}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform vec4 dimensions;','uniform sampler2D uSampler;','uniform float angle;','uniform float scale;','float pattern() {','   float s = sin(angle), c = cos(angle);','   vec2 tex = vTextureCoord * dimensions.xy;','   vec2 point = vec2(','       c * tex.x - s * tex.y,','       s * tex.x + c * tex.y','   ) * scale;','   return (sin(point.x) * sin(point.y)) * 4.0;','}','void main() {','   vec4 color = texture2D(uSampler, vTextureCoord);','   float average = (color.r + color.g + color.b) / 3.0;','   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);','}'];};PIXI.DotScreenFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.DotScreenFilter.prototype.constructor=PIXI.DotScreenFilter;Object.defineProperty(PIXI.DotScreenFilter.prototype,'scale',{get:function(){return this.uniforms.scale.value;},set:function(value){this.dirty=true;this.uniforms.scale.value=value;}});Object.defineProperty(PIXI.DotScreenFilter.prototype,'angle',{get:function(){return this.uniforms.angle.value;},set:function(value){this.dirty=true;this.uniforms.angle.value=value;}});PIXI.CrossHatchFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={blur:{type:'1f',value:1/512}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform float blur;','uniform sampler2D uSampler;','void main(void) {','    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);','    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);','    if (lum < 1.00) {','        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {','            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);','        }','    }','    if (lum < 0.75) {','        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {','            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);','        }','    }','    if (lum < 0.50) {','        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {','            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);','        }','    }','    if (lum < 0.3) {','        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {','            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);','        }','    }','}'];};PIXI.CrossHatchFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.CrossHatchFilter.prototype.constructor=PIXI.CrossHatchFilter;Object.defineProperty(PIXI.CrossHatchFilter.prototype,'blur',{get:function(){return this.uniforms.blur.value/(1/7000);},set:function(value){this.uniforms.blur.value=(1/7000)*value;}});PIXI.RGBSplitFilter=function()
 {PIXI.AbstractFilter.call(this);this.passes=[this];this.uniforms={red:{type:'2f',value:{x:20,y:20}},green:{type:'2f',value:{x:-20,y:20}},blue:{type:'2f',value:{x:20,y:-20}},dimensions:{type:'4fv',value:[0,0,0,0]}};this.fragmentSrc=['precision mediump float;','varying vec2 vTextureCoord;','varying vec4 vColor;','uniform vec2 red;','uniform vec2 green;','uniform vec2 blue;','uniform vec4 dimensions;','uniform sampler2D uSampler;','void main(void) {','   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;','   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;','   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;','   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;','}'];};PIXI.RGBSplitFilter.prototype=Object.create(PIXI.AbstractFilter.prototype);PIXI.RGBSplitFilter.prototype.constructor=PIXI.RGBSplitFilter;Object.defineProperty(PIXI.RGBSplitFilter.prototype,'red',{get:function(){return this.uniforms.red.value;},set:function(value){this.uniforms.red.value=value;}});Object.defineProperty(PIXI.RGBSplitFilter.prototype,'green',{get:function(){return this.uniforms.green.value;},set:function(value){this.uniforms.green.value=value;}});Object.defineProperty(PIXI.RGBSplitFilter.prototype,'blue',{get:function(){return this.uniforms.blue.value;},set:function(value){this.uniforms.blue.value=value;}});if(typeof exports!=='undefined'){if(typeof module!=='undefined'&&module.exports){exports=module.exports=PIXI;}
  exports.PIXI=PIXI;}else if(typeof define!=='undefined'&&define.amd){define(PIXI);}else{root.PIXI=PIXI;}}).call(this);GodStep.Const=function(){var mark=GodStep.MARK='[Mejdu] ';var err='ERROR: ';GodStep.ERR_DIV_NF=mark+err+'Div Element Not Found!';GodStep.ERR_AUDIO_SUPPORT=mark+err+'Your browser do not support audio API';GodStep.ERR_AUDIO_DECODE=mark+err+'Decoding file';GodStep.ERR_MVK_CONNECT=mark+err+'VK Api not initialized';GodStep.ERR_FILEAPI=mark+err+'File Api not supported';GodStep.TRACK_LOADED=mark+'Track Loaded';GodStep.TRACK_DECODED=mark+'Track Decoded';GodStep.MVK_CONNECT=mark+'VK API Connected';GodStep.MVK_DATA=mark+'VK API data';GodStep.LOOP_FINISH=mark+'Loop Finish';GodStep.EVENT_START=mark+'Event Start';GodStep.EVENT_END=mark+'Event End';GodStep.KEYUP=mark+'Key Up';GodStep.KEYPRESS=mark+'Key Press';GodStep.KEYDOWN=mark+'Key Down';GodStep.IMAGE_LOADED=mark+'Image Loaded';GodStep.FRAME_MOVE=mark+'Frame Move';GodStep.FRAME_RDOWN=mark+'Frame Right Down';GodStep.FRAME_RUP=mark+'Frame Right Up';GodStep.FRAME_DOWN=mark+'Frame Down';GodStep.FRAME_UP=mark+'Frame Up';GodStep.FRAME_OUT=mark+'Frame Out';GodStep.FRAME_OVER=mark+'Frame Over';GodStep.FRAME_CHANGED=mark+'Frame Changed';GodStep.DATA_LOADED=mark+'Data Loaded';GodStep.DOWN='down';GodStep.COLOR_STAGE=0x444444;GodStep.MAX_INT=9007199254740992;GodStep.GOLD=0.6180339887;GodStep.IGOLD=1-GodStep.GOLD;GodStep.WHITE=0xffffff;GodStep.BLACK=0x000000;GodStep.RED=0xff0000;GodStep.GREEN=0x00ff00;GodStep.BLUE=0x0000ff;};new GodStep.Const();GodStep.Frame=function(name,w,h){PIXI.DisplayObjectContainer.call(this);this.frames=[];this.W=w;this.H=h;this.name=name||('Frame'+GodStep.Frame.frameCount++);};GodStep.Frame.frameCount=0;pro=GodStep.Frame.prototype=Object.create(PIXI.DisplayObjectContainer.prototype);pro.addChild=function(child){this.addChildAt(child,this.children.length);return child;};pro.addFrame=function(frame,container){this.frames.push(frame);this.frames[frame.name]=frame;if(container){container.addChild(frame);}
else{this.addChild(frame);}
 return frame;};pro.addFrameAt=function(frame,container,index){this.frames.push(frame);this.frames[frame.name]=frame;if(container){if(index){container.addChildAt(frame,index);}else{container.addChild(frame);}}
else{if(index){this.addChildAt(frame,index);}else{this.addChild(frame);}}
 return frame;};pro.delFrame=function(frame){this.frames.splice(this.frames.indexOf(frame),1);delete this.frames[frame.name];frame.parent.removeChild(frame);return frame;};pro.setHitArea=function(x,y,w,h,object){var frame=object||this;frame.interactive=true;frame.hitArea=new PIXI.Rectangle(x,y,w,h);};pro.destroy=function(){var children=this.children;while(children.length){this.removeChild(children[0]);}
 return this;};pro.destrukt=function(){this.destroy();var p=this.parent;if(p){if(p.delFrame){p.delFrame(this);}else{p.removeChild(this);}}
 return this;};pro.update=function(){for(var i=0,frame;frame=this.frames[i];i++){frame.update();}};pro.place=function(x,y){this.x=x;this.y=y;};pro.addPoint=function(x,y){this.ps=this.ps||[];this.ps.push(new PIXI.Point(x,y));};pro.addWay=function(){var way;this.ways=this.ways||[];this.ways.push(way=new GodStep.Way(new PIXI.Point(0,0)));way.push(new PIXI.Point(20,20),'p');return way;};pro.isInRect=function(x,y){return GodStep.Math.isInRect(x,y,this.position.x,this.position.y,this.W,this.H);};pro.viewOriginal=function(){var i=0,count=this.children.length-1;while(i<count){this.children[i].visible=true;i++;}
 this.rendered.alpha=0;};pro.reCache=function(){var a=this.alpha;var v=this.visible;this.visible=true;this.alpha=1;this.cacheAsBitmap=false;this.cacheAsBitmap=true;this.visible=v;this.alpha=a;};pro.setData=function(data){if(data.lp){if(!this.loop){this.loop=new GodStep.Loop();}
 this.loop.setData(data.lp);}
 if(data.ws){this.ways=[];for(var w=0;w<data.ws.length;w++){this.ways.push(GodStep.Way.parse(data.ws[w]));}}
 if(data.fr){for(var i=0;i<data.fr.length;i++){var frame=this.frames[data.fr[i].n];if(frame){frame.setData(data.fr[i]);}}}};pro.getData=function(){var object={};object.n=this.name;if(this.loop){object.lp=this.loop.getData();}
 if(this.ways){object.ws=[];for(var w=0;w<this.ways.length;w++){object.ws.push(this.ways[w].getData());}}
 if(this.frames.length>0){var fr=[];for(var i=0;i<this.frames.length;i++){if(this.frames[i].name.substr(0,5)!="Frame"){fr.push(this.frames[i].getData());}}
  if(fr.length>0)object.fr=fr;}
 return object;};pro.resizeRendered=function(w,h){var needRedraw=false;if(this.renderedTexture.width!=w||this.renderedTexture.height!=h){needRedraw=true;}
 this.renderedTexture.resize(w,h);if(needRedraw){this.renderThis(-w/2,-h/2);this.rendered.position=new PIXI.Point(-w/2,-h/2);}};pro.createGraphics=function(gName,container){var g=this[gName||'graphics']=new PIXI.Graphics();if(container==undefined)this.addChild(g);else if(container!=null)container.addChild(g);return this[gName||'graphics'];};pro.createText=function(text,size,font,align,fill){return this.addChild(new PIXI.Text(text,{font:""+size+"px "+font+"",align:align||"center",fill:fill||'#ffffff'}));};pro.renderThis=function(offX,offY){var i=0;this.lastOffRendered=new PIXI.Point(offX,offY);var child,count=this.children.length-1;var W2=this.W*.5;var H2=this.H*.5;this.rendered.alpha=1;this.rendered.position=new PIXI.Point(offX,offY);while(i<count){child=this.children[i];child.visible=true;this.renderedTexture.render(child,{x:child.position.x-offX,y:child.position.y-offY},i==0);child.visible=false;i++;}};pro.createRendered=function(){this.addChild(this.rendered=new PIXI.Sprite(this.renderedTexture=new PIXI.RenderTexture(this.W,this.H)));return this.rendered;};pro.roundRect=function(w,h,color,alpha,r,x,y){var g=this.graphics;g.beginFill(color,alpha);g.drawRoundedRect(x||0,y||0,w,h,r);g.endFill();};pro.rect=function(w,h,color,alpha,x,y,graphics){var g=graphics||(this.graphics||this.addChild(this.graphics=new PIXI.Graphics()));g.beginFill(color,alpha||1);g.drawRect(x||0,y||0,w,h);g.endFill();};pro.redraw=function(){};Object.defineProperty(pro,'Scale',{get:function(){return this.scale.x;},set:function(value){this.scale.x=this.scale.y=value;}});Object.defineProperty(pro,'Place',{get:function(){return new PIXI.Point(this.x,this.y);},set:function(value){this.x=value.x;this.y=value.y;}});Object.defineProperty(pro,'IsDown',{get:function(){return this.isDown;},set:function(value){this.isDown=value;}});Object.defineProperty(pro,'IsOver',{get:function(){return this.isOver;},set:function(value){this.isOver=value;}});GodStep.Event=function(start,length){this.start=start;this.length=length;this.startCount=0;this.id=GodStep.Event.count++;PIXI.EventTarget.call(this);};GodStep.Event.DATA_TRUTH=1000;GodStep.Event.count=0;pro=GodStep.Event.prototype=Object.create(Object.prototype);pro.getData=function(){var truth=GodStep.Event.DATA_TRUTH.toString().length;var data={};data.s=(this.start).toString().substr(0,truth);data.l=(this.length).toString().substr(0,truth);data.y=(this.y).toString().substr(0,truth);return data;};pro.getPosition=function(globalPosition){return(globalPosition-this.start)/this.length;};pro.reset=function(){this.isStarted=false;this.startCount=0;};pro.finish=function(){if(this.isStarted){this.isStarted=false;GodStep.dispatch(this,GodStep.EVENT_END);}};pro.begin=function(){this.startCount++;this.isStarted=true;GodStep.dispatch(this,GodStep.EVENT_START);};GodStep.Event.parse=function(data){var e=new GodStep.Event(parseFloat(data.s),parseFloat(data.l));e.y=parseFloat(data.y);return e;};GodStep.Dialog=function(soul){this.soul=soul;GodStep.Frame.call(this,"Dialog");this.rect(soul.W,soul.H,0,.5,0,0);this.windowRect=this.addChild(new PIXI.Graphics());this.messageText=this.createText('message',30,'Arial','left');};pro=GodStep.Dialog.prototype=Object.create(GodStep.Frame.prototype);pro.view=function(){this.visible=true;this.alpha=1;};pro.update=function(){if(this.visible){if(this.outTime){this.outTime-=0.1;if(this.outTime<0){this.alpha-=.1;if(this.alpha<0){this.alpha=0;this.outTime=null;this.visible=false;}}}}};pro.out=function(outTime){this.outTime=outTime;};pro.setMessage=function(message){trace(message);this.messageText.setText(message);this.messageText.updateText();this.messageText.position.x=this.soul.W/2-this.messageText.width/2;this.messageText.position.y=this.soul.H/2-this.messageText.height/2;};GodStep.Image=function(texture){if(!texture){trace(texture);}
 PIXI.Sprite.call(this,texture);PIXI.EventTarget.call(this,texture);this.isNewTexture=true;};extend(GodStep.Image,PIXI.Sprite);GodStep.Image.fromImage=function(imgPath,callBackLoaded){if(imgPath.length>4){if(imgPath.substr(0,4)!='http'){imgPath=GodPath+imgPath;}}
 var image=new GodStep.Image(PIXI.Texture.fromImage(imgPath));if(callBackLoaded){image.texture.image=image;if(!image.texture.baseTexture.hasLoaded){image.texture.addEventListener('update',callBackLoaded);}}
 return image;};pro.place=function(x,y){this.x=x;this.y=y;};pro.update=function(){if(this.isNewTexture){if(this.texture.baseTexture.hasLoaded){this.isNewTexture=false;GodStep.dispatch(this,GodStep.IMAGE_LOADED);}}};Object.defineProperty(pro,'Scale',{get:function(){return this.scale.x;},set:function(value){this.scale.x=this.scale.y=value;}});GodStep.Preloader=function(soul){this.preloadState=0;GodStep.Preloader.textures=[];this.startS=soul.startS;this.soul=soul;this.isAudioTag=soul.AUDIOTAG;this.isOnlyOneView=true;GodStep.Frame.call(this,'Preloader',soul.W,soul.H);PIXI.EventTarget.call(this);};extend(GodStep.Preloader,GodStep.Frame);GodStep.ASSETS_LOADED='assets loaded';GodStep.SOUNDS_LOADED='sounds loaded';pro.loadAll=function(pathImages,pngs,jpgs,pathSounds,sounds,assets){this.textures=[];this.pathImages=pathImages;var i,img;this.images=pngs;this.assets=assets;this.exts=[];for(i=0;i<this.images.length;i++){this.exts.push('.png');}
 for(i=0;i<jpgs.length;i++){this.images.push(jpgs[i]);this.exts.push('.jpg');}
 this.imagesCount=this.images.length;if(this.images.length>0){img=GodStep.Image.fromImage(this.pathImages+this.images[0]+this.exts[0]);img.p=this;img.texName=this.images[0];this.textures[img.texName]=img.texture;}
 this.initSounds(pathSounds,sounds);this.soundsCount=sounds.length;if(this.images.length==0){this.isImagesComplete=true;this.loadSounds();}};pro.trace=function(v){trace(v);};pro.initSounds=function(soundPath,arr){this.trace('init sounds');GodStep.Game.instance.sound={};var sounds=[];var isLoop=false;for(var i=0;i<arr.length;i++){var name=arr[i];isLoop=false;if(name.length>4){if(name.substr(0,4)=='loop'){isLoop=true;name=name.substr(5,name.length-5);}}
 sounds.push({src:name,id:name,loop:isLoop});}
 this.soundPath=soundPath;GodStep.Game.instance.sound.needLoaded=this.needLoaded=this.sounds=sounds;};pro.loadSound=function(url,vol,loop){var audio=new Audio();if(loop){audio.addEventListener('ended',function(){audio.currentTime=0;audio.play();},false);}
 this.sounds.push(audio);audio.src=url;audio.preload="auto";audio.volume=vol;audio.preloader=this;audio.onloadeddata=this.launchApp;audio.load();return audio;};pro.launchApp=function(launch){var preloader=this.preloader;preloader.audio_preload++;if(preloader.audio_preload==preloader.needLoaded.length||launch==1){preloader.startSounds();}else{preloader.loadSound(GodPath+preloader.soundPath+preloader.needLoaded[preloader.audio_preload].src+"."+preloader.support.audio,1,preloader.needLoaded[preloader.audio_preload].loop);}};pro.startSounds=function(){this.loadAssets();};pro.loadSounds=function(){if(this.soul.DISABLE_SOUND){this.loadAssets();return;}
 if(this.isAudioTag){this.support={};this.audio_preload=0;GodStep.Game.instance.sound.sounds=this.sounds=[];GodStep.Game.instance.sound.AVAILABLE=true;var a=document.createElement('audio');var ogg=!!(a.canPlayType&&a.canPlayType('audio/ogg; codecs="vorbis"').replace(/no/,''));var mp3=!!(a.canPlayType&&a.canPlayType('audio/mpeg;').replace(/no/,''));if(ogg){trace('AUDIOTAG: '+'ogg');this.support.audio='ogg';}else
 if(mp3){trace('AUDIOTAG: '+'mp3');this.support.audio='mp3';}
 else{trace('no sound supported');this.support.audio='no';GodStep.Game.instance.sound.AVAILABLE=false;this.startSounds();return 0;}
  this.loadSound(GodPath+this.soundPath+this.needLoaded[0].src+"."+this.support.audio,1,this.needLoaded[0].loop);}else{this.trace('loadSounds');var sound=GodStep.Game.instance.sound={preloader:this};sound.AVAILABLE=true;if(window['createjs']){if(createjs.BrowserDetect.isIOS||createjs.BrowserDetect.isAndroid||createjs.BrowserDetect.isBlackberry){this.ISMOBILE=true;}}else{sound.AVAILABLE=false;GodStep.Game.instance.sound={};this.loadAssets();return;}
  if(sound.AVAILABLE){}
  if(!this.soul.isNativeAndroid){if(!createjs.Sound.initializeDefaultPlugins()){sound.AVAILABLE=false;this.loadAssets();return;}
   if(sound.AVAILABLE){for(var i=0;i<this.sounds.length;i++){this.sounds[i].src+='.ogg';}
    createjs.Sound.alternateExtensions=["mp3"];createjs.Sound.addEventListener("fileload",this.h_loadedSound);sound.countLoaded=this.sounds.length;createjs.Sound.addEventListener("fileload",createjs.proxy(this.h_loadedSound,this));createjs.Sound.registerSounds(this.sounds,GodPath+this.soundPath);}else{GodStep.Game.instance.sound={};this.loadAssets();}}else{sound.AVAILABLE=false;GodStep.Game.instance.sound={};this.loadAssets();}}};pro.update=function(){if(!this.isImagesComplete){var img;if(this.images){for(var im in this.images){var tex=this.textures[this.images[im]];if(tex){if(tex.baseTexture.hasLoaded){this.exts.splice(this.images.indexOf(this.images[im]),1);this.images.splice(this.images.indexOf(this.images[im]),1);if(this.images.length>0){img=GodStep.Image.fromImage(this.pathImages+this.images[0]+this.exts[0]);img.p=this;img.texName=this.images[0];this.textures[img.texName]=img.texture;}
 if(this.images.length>0){for(var i=0;i<10;i++){if(this.images[i]){img=GodStep.Image.fromImage(this.pathImages+this.images[i]+this.exts[i]);img.p=this;img.texName=this.images[i];this.textures[img.texName]=img.texture;}}}}}}
 if(this.images.length==0){this.isImagesComplete=true;GodStep.textures=this.textures;if(GodStep.IMAGE_RESOLUTION!=null&&GodStep.IMAGE_RESOLUTION!=1){this.resizeImages(GodStep.IMAGE_RESOLUTION);}
  this.loadSounds();}}}};pro.resizeImages=function(res){var i;for(var img in GodStep.textures){var isFound=false;if(GodStep.DONT_RESIZE!=null){for(i=0;i<GodStep.DONT_RESIZE.length;i++){if(img==GodStep.DONT_RESIZE[i]){isFound=true;}}}
 if(!isFound){var tex=GodStep.textures[img];var newTex=new PIXI.RenderTexture(parseInt(tex.width*res),parseInt(tex.height*res));this.addChild(this.spr=new PIXI.Sprite(tex));newTex.render(this.spr,new PIXI.Matrix(res,0,0,res,0,0));this.removeChild(this.spr);GodStep.textures[img]=newTex;if(newTex.width==0||newTex.height==0){}}}
 for(var bt in PIXI.BaseTextureCache){if(GodStep.DONT_RESIZE!=null){isFound=false;for(i=0;i<GodStep.DONT_RESIZE.length;i++){var id=bt.search(GodStep.DONT_RESIZE[i]);if(id>=0){isFound=true;}}}
  if(!isFound){if(!PIXI.BaseTextureCache[bt].isLoader){PIXI.BaseTextureCache[bt].destroy();}}}};pro.loadAssets=function(){this.trace('loading assets');if(this.assets){var assetsToLoader;if(window['GodAssetsPath']!=undefined){assetsToLoader=[window['GodAssetsPath']+this.assets[0]];}else{assetsToLoader=[this.pathImages+this.assets[0]];}
 var loader;if(this.fontLoaderClass){loader=new this.fontLoaderClass(assetsToLoader);this.soul.startS*=this.Scale;dispatch(this,GodStep.ASSETS_LOADED);}else{loader=new PIXI.AssetLoader(assetsToLoader);loader.onComplete=this.h_loadedAssets;loader.preloader=this;loader.load();}}else{dispatch(this,GodStep.ASSETS_LOADED);}};pro.h_loadedSound=function(e){var sound=GodStep.Game.instance.sound;sound.countLoaded--;if(sound.countLoaded==0){this.trace('sound loaded');sound.preloader.loadAssets();}};pro.h_loadedAssets=function(e){this.preloader.trace('sound game');if(this.soul){this.soul.startS*=this.Scale;}
 dispatch(this.preloader,GodStep.ASSETS_LOADED);};GodStep.State=function(){this.values=[];};extend(GodStep.State,Object);pro.pushValues=function(values,length){this.values=values.slice(0,length);};pro.push=function(v){this.values.push(v);};pro.randomize=function(){var values=this.values;var vl=values.length;for(var i=0;i<vl;i++){values[i]=Math.random();}};pro.clone=function(){var state=new GodStep.State();var values=this.values;var newValues=state.values;var vl=values.length;for(var i=0;i<vl;i++){newValues.push(values[i]);}
 return state;};GodStep.Color=function(r,g,b){this.r=r||0;this.g=g||0;this.b=b||0;this.calcHex();};extend(GodStep.Color,Object);pro.add=function(a){with(this){r+=a;g+=a;b+=a;r=Math.max(0,Math.min(r,255));g=Math.max(0,Math.min(g,255));b=Math.max(0,Math.min(b,255));}
 return this;};pro.grayscale=function(){var gr=(this.r+this.g+this.b)/3;this.r=gr;this.g=gr;this.b=gr;return this;};pro.calcHex=function(){var h;with(this){h=((r<<16)+(g<<8)+b);}
 this.hex=h;return h;};pro.clone=function(c){return new GodStep.Color(c.r,c.g,c.b);};pro.mix=function(c,percent){var ip=1-percent;this.r=parseInt(c.r*percent+this.r*ip);this.g=parseInt(c.g*percent+this.g*ip);this.b=parseInt(c.b*percent+this.b*ip);};GodStep.Color.getData=function(){return this.calcHex().toString(16);};GodStep.Color.fromHEX=function(hex){return new GodStep.Color((hex>>16)&255,(hex>>8)&255,hex&255);};GodStep.Color.random=function(){return new GodStep.Color(parseInt(Math.random()*255),parseInt(Math.random()*255),parseInt(Math.random()*255))};GodStep.Point=function(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0;};pro=Object.prototype=Object.create(Object.prototype);pro.clone=function(p){return new GodStep.Point(p.x,p.y,p.z);};GodStep.Point.getLength=function(point){return Math.sqrt(point.x*point.x+point.y*point.y)};GodStep.Point.distance2=function(p1x,p1y,p2x,p2y){return Math.sqrt(Math.pow(p1x-p2x,2)+Math.pow(p1y-p2y,2));};GodStep.Point.distance=function(p1,p2){return Math.sqrt(Math.pow(p1.x-p2.x,2)+Math.pow(p1.y-p2.y,2));};GodStep.Point.middlePoint=function(p1,p2,c){return new GodStep.Point(p1.x+(p2.x-p1.x)*c,p1.y+(p2.y-p1.y)*c);};GodStep.Point.getData=function(p){return[parseInt(p.x*1000)/1000,parseInt(p.y*1000)/1000];};GodStep.Point.random=function(ix,iy,ax,ay){return new GodStep.Point(ix+Math.random()*ax,iy+Math.random()*ay);};GodStep.Point.randomR=function(i,a){var r=Math.random();return new GodStep.Point(i+r*a,i+r*a);};GodStep.Ajax=function(url,parent,h_loaded,h_error){this.parent=parent;this.load(url,h_loaded,h_error);};pro=GodStep.Ajax.prototype=Object.create(Object.prototype);pro.load=function(url,h_loaded,h_error){var xhr=this.xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.onload=h_loaded;xhr.onerror=h_error||function(e){trace('Error: '+e);};xhr.parent=this.parent;xhr.send();};GodStep.Bezier=function(start,control,end,isSegment){this.start=start||new PIXI.Point();this.control=control||new PIXI.Point();this.end=end||new PIXI.Point();this.isSegment=Boolean(isSegment);};GodStep.Bezier.PRECISION=1e-10;pro=GodStep.Bezier.prototype=Object.create(Object.prototype);pro.startToControlVector=function(){return new PIXI.Point(this.control.x-this.start.x,this.control.y-this.start.y);};pro.diagonalVector=function(){return new PIXI.Point(this.start.x-2*this.control.x+this.end.x,this.start.y-2*this.control.y+this.end.y);};pro.getLength=function(){return this.getSegmentLength(1);};pro.getSegmentLength=function(time){var startToControlVector=this.startToControlVector();var diagonalVector=this.diagonalVector();var startToControlLenght=GodStep.Point.getLength(startToControlVector);var startToControlLenghtPower2=startToControlLenght*startToControlLenght;var controlToStartMultiplyMainDiagonal=2*(startToControlVector.x*diagonalVector.x+startToControlVector.y*diagonalVector.y);var diagonalLenght=GodStep.Point.getLength(diagonalVector);var diagonalLenghtPower2=diagonalLenght*diagonalLenght;var integralValueInTime;var integralValueInZero;if(diagonalLenght==0){integralValueInTime=2*diagonalLenght*time;integralValueInZero=0;}else{var integralFrequentPart1=Math.sqrt(diagonalLenghtPower2*time*time+controlToStartMultiplyMainDiagonal*time+startToControlLenghtPower2);var integralFrequentPart2=(controlToStartMultiplyMainDiagonal+2*diagonalLenghtPower2*time)/diagonalLenght+2*integralFrequentPart1;var integralFrequentPart3=controlToStartMultiplyMainDiagonal/diagonalLenght+2*startToControlLenght;var integralFrequentPart4=(startToControlLenghtPower2-0.25*controlToStartMultiplyMainDiagonal*controlToStartMultiplyMainDiagonal/diagonalLenghtPower2);integralValueInTime=0.5*(2*diagonalLenghtPower2*time+controlToStartMultiplyMainDiagonal)*integralFrequentPart1/diagonalLenghtPower2;if(Math.abs(integralFrequentPart2)>=GodStep.Bezier.PRECISION){integralValueInTime+=Math.log(integralFrequentPart2)/diagonalLenght*integralFrequentPart4;}
 integralValueInZero=0.5*(controlToStartMultiplyMainDiagonal)*startToControlLenght/diagonalLenghtPower2;if(Math.abs(integralFrequentPart3)>=GodStep.Bezier.PRECISION){integralValueInZero+=Math.log(integralFrequentPart3)/diagonalLenght*integralFrequentPart4;}}
 return integralValueInTime-integralValueInZero;};pro.getPoint=function(time,point){if(isNaN(time)){return null;}
 point=point||new PIXI.Point();var invertedTime=1-time;var timePower2=time*time;var invertedTimePower2=invertedTime*invertedTime;point.x=invertedTimePower2*this.start.x+2*time*invertedTime*this.control.x+timePower2*this.end.x;point.y=invertedTimePower2*this.start.y+2*time*invertedTime*this.control.y+timePower2*this.end.y;return point;};GodStep.Curve=function(startPoint,endPoint){this.start=startPoint||new PIXI.Point();this.end=endPoint||new PIXI.Point();this.beziers=[];this.controls=[];this.points=[this.start,this.end];};extend(GodStep.Curve,GodStep.Frame);pro.drawBezier=function(target,bezier,move){if(move){target.moveTo(bezier.start.x,bezier.start.y);}
 target.quadraticCurveTo(bezier.control.x,bezier.control.y,bezier.end.x,bezier.end.y);};pro.update=function(){var len=this.beziers.length;if(len){var prevBezier=this.beziers[0],currentBezier,mid;for(var j=1;j<len;j++){currentBezier=this.beziers[j];mid=GodStep.Math.middlePoint(prevBezier.control,currentBezier.control,0.5);currentBezier.start.x=mid.x;currentBezier.start.y=mid.y;prevBezier=currentBezier;}}};pro.draw=function(graphics,hold){var len=this.beziers.length;this.update();if(!hold)graphics.moveTo(this.start.x,this.start.y);if(!len){graphics.lineTo(this.end.x,this.end.y);return;}
 var bezier=this.beziers[0];this.drawBezier(graphics,bezier,false);for(var i=1;i<len;i++){bezier=this.beziers[i];this.drawBezier(graphics,bezier,false);}};pro.addControl=function(control){this.controls.push(control);this.points.splice(1,0,control);if(control){var newBezier;if(this.beziers.length){var lastBezier=this.beziers[this.beziers.length-1];lastBezier.end=new PIXI.Point();newBezier=new GodStep.Bezier(lastBezier.end,control,this.end);}else{newBezier=new GodStep.Bezier(this.start,control,this.end);}
 this.beziers[this.beziers.length]=newBezier;}};pro.getLength=function(){var __length;var len=this.beziers.length;if(len){var curveLength=0;for(var i=0;i<len;i++){var bezier=this.beziers[i];curveLength+=bezier.getLength();}
 __length=curveLength;}else{__length=GodStep.Point.distance(this.start,this.end);}
 return __length;};pro.getPoint=function(time){if(this.controls.length==0){return new PIXI.Point((this.end.x-this.start.x)*time+this.start.x,(this.end.y-this.start.y)*time+this.start.y);}
 var globalEnd=0;var globalStart=0;var globalTime=time*this.getLength();for(var b=0;b<this.beziers.length;b++){globalEnd+=this.beziers[b].getLength();if(globalEnd>=globalTime){this.lastBezier=this.beziers[b];globalStart=globalEnd-this.beziers[b].getLength();break;}}
 var localTime=(globalTime-globalStart)/(this.lastBezier.getLength());return this.lastBezier.getPoint(localTime);};GodStep.Path=function(startPoint){this.start=startPoint||new PIXI.Point();this.points=[this.start];};pro=GodStep.Path.prototype=Object.create(Object.prototype);pro.push=function(point){this.points.push(point);};pro.draw=function(graphics,hold){var len=this.points.length;if(hold)graphics.lineTo(this.start.x,this.start.y);else graphics.moveTo(this.start.x,this.start.y);if(len){for(var i=1;i<len;i++){graphics.lineTo(this.points[i].x,this.points[i].y);}}};GodStep.Way=function(startPoint,type){this.start=startPoint||new PIXI.Point();this.points=[];this.push(startPoint,(type==undefined)?'p':type);this.start.isStart=true;this.curves=[];this.position=0;};extend(GodStep.Way,Object);pro.clone=function(){var way=new GodStep.Way(this.start.clone(),this.start.ctype);var len=this.points.length,point;for(var p=1;p<len;p++){point=this.points[p];way.push(point.clone(),point.ctype);}
 return way;};pro.offset=function(dx,dy){for(var i=0;i<this.points.length;i++){this.points[i].x+=dx;this.points[i].y+=dy;}};pro.pushc=function(point){this.push(point,'c');};pro.pushp=function(point){this.push(point,'p');};pro.push=function(point,type){point.ctype=type;this.points.push(point);};pro.addPoint=function(point,after){for(var i=0;i<this.points.length;i++){if(this.points[i]==after){var next=this.points[i+1];this.points.splice(i+1,0,point);if(next){point.x=(this.points[i].x+next.x)*.5;point.y=(this.points[i].y+next.y)*.5;}else{point.x=(this.points[i].x+this.start.x)*.5;point.y=(this.points[i].y+this.start.y)*.5;}
 point.ctype=this.points[i].ctype;return;}}};pro.delPoint=function(point){for(var i=0;i<this.points.length;i++){if(this.points[i]==point){this.points.splice(i,1);return;}}};pro.draw=function(graphics,hold){var len=this.points.length;var point,next;if(hold)graphics.lineTo(this.start.x,this.start.y);else{if(this.start.ctype=='c'){if(this.points[len-1].ctype=='c'){graphics.moveTo((this.start.x+this.points[len-1].x)*.5,(this.start.y+this.points[len-1].y)*.5);}else{graphics.moveTo((this.points[len-1].x),(this.points[len-1].y));}}else{graphics.moveTo(this.start.x,this.start.y);}}
 this.points.push(this.points[0]);if(len){for(var i=1;i<len;i++){point=this.points[i];next=this.points[i+1];if(point.ctype=='c'){if(i==1){if(this.start.ctype=='c')graphics.quadraticCurveTo(this.start.x,this.start.y,(this.start.x+point.x)*.5,(this.start.y+point.y)*.5);if(next.ctype=='c'){graphics.quadraticCurveTo(point.x,point.y,(this.points[i+1].x+point.x)*.5,(this.points[i+1].y+point.y)*.5);}else{graphics.quadraticCurveTo(point.x,point.y,this.points[i+1].x,this.points[i+1].y);}}else{if(next.ctype=='c'){graphics.quadraticCurveTo(point.x,point.y,(this.points[i+1].x+point.x)*.5,(this.points[i+1].y+point.y)*.5);}else{graphics.quadraticCurveTo(point.x,point.y,this.points[i+1].x,this.points[i+1].y);}}}else{if(this.start.ctype=='c'&&i==1){graphics.quadraticCurveTo(this.start.x,this.start.y,point.x,point.y);}else
  graphics.lineTo(point.x,point.y);}}}
 this.points.pop();};pro.reflect=function(axis){var points=this.points,i;switch(axis){case'x':for(i=0;i<points.length;i++){points[i].x=-points[i].x;}
 break;case'y':for(i=0;i<points.length;i++){points[i].y=-points[i].y;}
 break;}};pro.getData=function(){var data={};var p=[];var points=this.points;var point;for(var i=0;i<points.length;i++){point=points[i];p.push({x:parseInt(point.x*10)/10,y:parseInt(point.y*10)/10,c:point.ctype});}
 data.t='w';data.p=p;return data;};pro.createCurves=function(){if(this.points.length>1){this.curves=[];var curve;var start,first;var isStartC=false;if(this.points[0].ctype=='c'){if(this.points[this.points.length-1].ctype=='p'){start=this.points[this.points.length-1];}else{start=GodStep.Point.middlePoint(this.points[0],this.points[this.points.length-1],.5);}
 isStartC=true;}else{start=this.points[0];}
 var end,starti=0;for(var i=1;i<this.points.length;i++){if(this.points[i].ctype=='p'){end=this.points[i];curve=new GodStep.Curve(start,end);for(var j=starti+1;j<i;j++){curve.addControl(this.points[j]);}
  this.curves.push(curve);curve.update();start=end;starti=i;}}
 if(starti<this.points.length-1){if(this.points[this.points.length-1].ctype=='c'){if(this.points[0].ctype=='c'){curve=new GodStep.Curve(start,start);}else{curve=new GodStep.Curve(start,this.points[0]);}}else{curve=new GodStep.Curve(start,start);}
  if(isStartC){curve.addControl(this.points[0]);}
  for(var k=starti+1;k<this.points.length;k++){curve.addControl(this.points[k]);}
  this.curves.push(curve);curve.update();}}};pro.getFirstPoint=function(){return this.points[0];};pro.getLastPoint=function(){return this.points[this.points.length-1];};pro.getPoint=function(pos){var time=Math.min(0.999999999,pos);var lengths=[];var summ=0;for(var i=0;i<this.curves.length;i++){lengths.push(this.curves[i].getLength());summ+=lengths[i];}
 var cur=0;var last=0;for(var l=0;l<lengths.length;l++){cur+=lengths[l];if(cur/summ>time){var t=time*summ;var len=cur-last;var pos=(time*summ-last)/len;return this.curves[l].getPoint(pos);}
  last=cur;}
 return null};pro.getBounds=function(){var min=new PIXI.Point(GodStep.MAX_INT,GodStep.MAX_INT);var max=new PIXI.Point(-GodStep.MAX_INT,-GodStep.MAX_INT);var l=this.points.length;var p=this.points;var point;for(var i=0;i<l;i++){point=p[i];min.x=Math.min(point.x,min.x);min.y=Math.min(point.y,min.y);max.x=Math.max(point.x,max.x);max.y=Math.max(point.y,max.y);}
 return new PIXI.Rectangle(min.x,min.y,max.x,max.y);};GodStep.Way.parse=function(data){var points=data.p;var point;var way=new GodStep.Way(new PIXI.Point(points[0].x,points[0].y),points[0].c);for(var i=1;i<points.length;i++){point=points[i];way.push(new PIXI.Point(point.x,point.y),point.c);}
 way.createCurves();return way;};GodStep.Form=function(){this.elements=[];};pro=GodStep.Form.prototype=Object.create(Object.prototype);pro.update=function(){};pro.addPoint=function(point,after){var len=this.elements.length,elem;for(var i=0;i<len;i++){elem=this.elements[i];elem.addPoint(point,after);}};pro.delPoint=function(point){var len=this.elements.length,elem;for(var i=0;i<len;i++){elem=this.elements[i];elem.delPoint(point);}};pro.addElem=function(elem){this.elements.push(elem);};pro.drawLines=function(graphics){var len=this.elements.length,elem,point;var start;for(var i=0;i<len;i++){elem=this.elements[i];if(!start)start=elem.points[0];for(var p=0;p<elem.points.length;p++){point=elem.points[p];graphics.lineTo(point.x,point.y);}}
 if(start)graphics.lineTo(start.x,start.y);};pro.draw=function(graphics){var len=this.elements.length,elem;for(var i=0;i<len;i++){elem=this.elements[i];elem.draw(graphics,i>0);}};pro.clone=function(){var form=new GodStep.Form();var len=this.elements.length;for(var e=0;e<len;e++){form.addElem(this.elements[e].clone());}
 return form;};pro.getCenter=function(){var elemPoints;var lt,rb;var center;for(var e=0;e<this.elements.length;e++){elemPoints=this.elements[e].points;if(elemPoints.length>2){lt=elemPoints[0];rb=elemPoints[1];for(var p=0;p<elemPoints.length;p++){lt=new PIXI.Point(Math.min(lt.x,elemPoints[p].x),Math.min(lt.y,elemPoints[p].y));rb=new PIXI.Point(Math.max(rb.x,elemPoints[p].x),Math.max(rb.y,elemPoints[p].y));}}
 if(!center){center=new PIXI.Point((lt.x+rb.x)*.5,(lt.y+rb.y)*.5);}else{center=new PIXI.Point((center.x+(lt.x+rb.x)*.5)*.5,(center.y+(lt.y+rb.y)*.5)*.5);}}
 return center;};pro.setData=function(data){for(var i=0;i<data.e.length;i++){switch(data.e[i].t){case'w':this.addElem(GodStep.Way.parse(data.e[i]));break;}}};pro.getData=function(){var data={};data.e=[];for(var i=0;i<this.elements.length;i++){data.e.push(this.elements[i].getData());}
 return data;};pro.getBounds=function(){var min=new PIXI.Point(GodStep.MAX_INT,GodStep.MAX_INT);var max=new PIXI.Point(-GodStep.MAX_INT,-GodStep.MAX_INT);for(var e=0;e<this.elements.length;e++){var b=this.elements[e].getBounds();min.x=Math.min(min.x,b.x);min.y=Math.min(min.y,b.y);max.x=Math.max(max.x,b.width);max.y=Math.max(max.y,b.height);}
 return new PIXI.Rectangle(min.x,min.y,max.x,max.y);};GodStep.Math=function(){};GodStep.Math.middlePoint=function(p1,p2,c){return new PIXI.Point(p1.x+(p2.x-p1.x)*c,p1.y+(p2.y-p1.y)*c);};GodStep.Math.isInRect=function(x,y,rx,ry,rw,rh){if(x>rx&&y>ry){if(x<rx+rw&&y<ry+rh)return true;}
 return false;};GodStep.Math.isBetweenLTRB=function(p,lt,rb){if(p.x>lt.x&&p.y>lt.y){if(p.x<rb.x&&p.y<rb.y)return true;}
 return false;};GodStep.Math.rotatePoint=function(p,c,a){return new PIXI.Point(c.x+(p.x-c.x)*Math.cos(a)-(p.y-c.y)*Math.sin(a),c.y+(p.y-c.y)*Math.cos(a)+(p.x-c.x)*Math.sin(a));};GodStep.Math.cycle=function(value,period){var d=1/period;return(value/d-parseInt(value/d));};GodStep.IHTML=function(){this.addInput=function(text,className,handle,x,y,w){var view=(this.canvas)?this.canvas.view:this.webgl.view;var input=document.createElement('input');input.className=className;input.style.position="absolute";input.style.zIndex="1000";input.style.left=(view.offsetLeft+(x||0))+'px';input.style.top=(view.offsetTop+(y||0))+'px';input.value=text;input.style.width=(w||100)+"px";input.onkeyup=handle;input.soul=this;this.div.appendChild(input);return input;};this.addButton=function(text,className,handle,x,y){var view=(this.canvas)?this.canvas.view:this.webgl.view;var button=document.createElement("div");button.className=className;button.innerHTML=text;button.style.position="absolute";button.style.zIndex="1000";button.style.left=(view.offsetLeft+(x||0))+'px';button.style.top=(view.offsetTop+(y||0))+'px';button.style['cursor']='pointer';button.style['-moz-user-select']=button.style['-khtml-user-select']=button.style['-webkit-user-select']=button.style['-o-user-select']='none';button.onclick=handle;button.soul=this;this.div.appendChild(button);return button;};this.addSelectBox=function(className,handle,x,y,w){var view=(this.canvas)?this.canvas.view:this.webgl.view;var select=document.createElement("select");select.className=className;select.style.position="absolute";select.style.zIndex="1000";select.style.left=(view.offsetLeft+(x||0))+'px';select.style.top=(view.offsetTop+(y||0))+'px';select.style.width=(w||65)+'px';select.style['cursor']='pointer';select.style['-moz-user-select']=select.style['-khtml-user-select']=select.style['-webkit-user-select']=select.style['-o-user-select']='none';select.onchange=handle;select.soul=this;this.div.appendChild(select);return select;};this.addTextLabel_btstrp=function(text,x,y,size){var h=document.createElement("h"+(size?size:1));var span=document.createElement("span");span.style.position="absolute";span.style.left=x+'px';span.style.top=y+'px';span.style.resize='none';span.className='label label-default"';span.innerText=text;span.innerText=text;this.div.appendChild(h);h.appendChild(span);h.X=x;h.Y=y;h.span=span;h.W=span.clientWidth;h.H=span.clientHeight;return h;};this.addTextField_btstrp=function(x,y,w,h,id,callback){var div=document.createElement("div");var span=document.createElement("span");var input=document.createElement("input");div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';div.style.resize='none';if(w)div.style.width=w+'px';if(h)input.style.height=h+'px';if(id){input.id=id;}
 input.onclick=callback;div.className='input-group';input.className='form-control';div.placeholder='Username';div.appendChild(input);input.soul=this;this.div.appendChild(div);input.div=div;input.X=div.X=x;input.Y=div.Y=y;input.W=div.W=div.clientWidth;input.H=div.H=div.clientHeight;return input;};this.addCalendar2=function(x,y,z,w,h,id,callback){var div=document.createElement("input");div.id=id;this.div.appendChild(div);var times=[];function pat(i){if(i.toString().length<2)return'0'+i;else return i;}
 for(var i=0;i<24;i++){for(var j=0;j<6;j++){times.push(pat(i)+":"+pat(j*10));}}
 $('#'+id).datetimepicker({lang:'ru',startDate:new Date(),format:'Y-m-d H:i',allowTimes:times,'autoclose':false,onChangeDateTime:callback});div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';div.soul=this;div.style.zIndex=z;div.W=w;div.H=h;div.X=x;div.Y=y;div.readOnly=true;return div;};this.addTextArea_btstrp=function(x,y,w,h,r){var div=document.createElement("div");var span=document.createElement("span");var input=document.createElement("textarea");div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';input.style.resize='none';var round=(r||0)+"px";input.style['-webkit-border-radius']=round;input.style['-moz-border-radius']=round;input.style['border-radius']=round;if(w)div.style.width=w+'px';if(h)input.style.height=h+'px';div.className='input-group';input.className='form-control';div.placeholder='Username';div.appendChild(input);input.soul=this;this.div.appendChild(div);input.X=div.X=x;input.Y=div.Y=y;input.W=div.W=div.clientWidth;input.H=div.H=div.clientHeight;input.div=div;return input;};this.addButton_btstrp=function(x,y,label,callback){var div=document.createElement("div");div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';div.innerHTML=label;div.className='btn btn-default disable';div.soul=this;div.onclick=callback;this.div.appendChild(div);div.X=x;div.Y=y;div.W=div.clientWidth;div.H=div.clientHeight;return div;};this.addInputFile2_btstrp=function(x,y,label,callback,w,h){var div=document.createElement("div");var span=document.createElement("span");var input=document.createElement("input");div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';div.style.resize='none';if(w)div.style.width=w+'px';if(h)div.style.height=h+'px';input.X=x;input.Y=y;span.innerHTML=label;div.className='file-input-wrapper btn btn-default';input.type='file';div.appendChild(span);input.soul=this;input.div=div;input.span=span;input.class='btn-primary';input.style.left=-300+'px';div.appendChild(input);this.div.appendChild(div);return input;};this.addInputFile_btstrp=function(x,y,label,callback){var div=document.createElement("input");div.type='file';div.style.position="absolute";div.style.left=x+'px';div.style.top=y+'px';div.innerHTML=label;div.soul=this;div.onclick=callback;this.div.appendChild(div);div.X=x;div.Y=y;div.W=div.clientWidth;div.H=div.clientHeight;return div;};this.addTextArea=function(className,w,h,x,y){var textarea=document.createElement("textarea");textarea.style.position="absolute";textarea.className=className||'godstepTextArea';textarea.style.zIndex="1000";textarea.style.width=w+'px';textarea.style.height=h+'px';textarea.style.left=x+'px';textarea.style.top=y+'px';textarea.soul=this;this.div.appendChild(textarea);return textarea;};GodStep.IHTML.clearSelectBox=function(selectBox){while(selectBox.options.length){selectBox.remove(0);}};};GodStep.IHTML.getPosition=function(elem){var top=0,left=0;while(elem){top=top+parseFloat(elem.offsetTop);left=left+parseFloat(elem.offsetLeft);elem=elem.offsetParent;}
 return{top:Math.round(top),left:Math.round(left)}};GodStep.IOverOut=function(w,h){if(!this.addEventListener)PIXI.EventTarget.call(this);if(w&&h){this.setHitArea(0,0,w,h);}
 this.mouseover=function(e){this.IsOver=true;this.redraw();GodStep.dispatch(this,GodStep.FRAME_OVER);};this.mouseout=function(e){this.IsOver=false;this.redraw();GodStep.dispatch(this,GodStep.FRAME_OUT);};};GodStep.IDownUp=function(w,h){if(!this.addEventListener)PIXI.EventTarget.call(this);if(w&&h){if(this.setHitArea){this.setHitArea(0,0,w,h);}else{this.interactive=true;this.hitArea=new PIXI.Rectangle(0,0,w,h);}}
 GodStep.addMEvent(this,'move',function(e){GodStep.dispatch(this,GodStep.FRAME_MOVE,null,e);});GodStep.addMEvent(this,'rightup',function(e){this.downRightPoint=e.getLocalPosition(this);this.IsRDown=true;if(this.redraw)this.redraw();GodStep.dispatch(this,GodStep.FRAME_RUP,null,e);});GodStep.addMEvent(this,'rightdown',function(e){this.downRightPoint=e.getLocalPosition(this);this.IsRDown=true;if(this.redraw)this.redraw();GodStep.dispatch(this,GodStep.FRAME_RDOWN,null,e);});GodStep.addMEvent(this,'down',function(e){this.downPoint=e.getLocalPosition(this);this.IsDown=true;if(this.redraw)this.redraw();GodStep.dispatch(this,GodStep.FRAME_DOWN,null,e);});GodStep.addMEvent(this,'up',function(e){this.IsDown=false;this.downPoint=null;if(this.redraw)this.redraw();GodStep.dispatch(e.target,GodStep.FRAME_UP,null,e);});};GodStep.IDragDrop=function(){this.div.ondragover=this.h_dragOver=function(e){e.stopPropagation();if(e.preventDefault)e.preventDefault();e.dataTransfer.dropEffect='copy';var rect=this.getBoundingClientRect();for(var j=0,frame;frame=this.mejdu.frames[j];j++){if(frame instanceof GodStep.DDFrame){frame.dropOver(e.clientX-rect.left,e.clientY-rect.top);}}};this.div.ondrop=this.h_dragDrop=function(e){e.stopPropagation();if(e.preventDefault)e.preventDefault();var rect=this.getBoundingClientRect();var files=e.target.files||e.dataTransfer.files;for(var j=0,frame;frame=this.mejdu.frames[j];j++){if(frame instanceof GodStep.DDFrame){frame.dropFiles(files,e.clientX-rect.left,e.clientY-rect.top);}}};};function catched(body,message){try{body();}catch(e){var s='CATCHED: "'+message+'"'+'\n['+e+']'+'\n\n'+e.stack;trace(s);alert(s);}}
function update(cl,instance){cl.prototype.update.call(instance);}
function extend(child,parent){pro=child.prototype=Object.create(parent.prototype);}
function trace(message){if(window.console){if(window.console.log){console.log(message);}}}
function include(path){if(!GodStep.includes[path]){GodStep.includes[path]=true;document.write("<script src="+GodPath+path+".js"+" type='text/javascript' charset='utf-8'></script>");}}
function addCSS(style){var newSS=document.createElement('link');newSS.rel='stylesheet';newSS.href=GodPath+style+'.css';document.getElementsByTagName("head")[0].appendChild(newSS);}
function dialog(message,out){if(GodStep.Mejdu.dialogSoul){GodStep.Mejdu.dialogSoul.dialog(message,out);}}
function dispatch(target,type,data,ee){GodStep.dispatch(target,type,data,ee);}
function delEvent(target,type,handle){target.removeEventListener(type,handle);}
function addEvent(target,type,handle){GodStep.addEvent(target,type,handle);}
function override(object,name,body){Object.defineProperty(object.prototype,name,body);}
(function(){GodStep.Mejdu=function(name,w,h){if(!GodStep.Mejdu.souls){if(GodStep.Audio)new GodStep.Audio();if(GodStep.Symfony)new GodStep.Symfony();window.requestAnimFrame(GodStep.Mejdu.render);}
 GodStep.Mejdu.souls=GodStep.Mejdu.souls||[];GodStep.Mejdu.souls.push(this);PIXI.EventTarget.call(this);var body,html;if(navigator){var isAndroid=navigator.userAgent.indexOf('Android')>=0;var webkitVer=parseInt((/WebKit\/([0-9]+)/.exec(navigator.appVersion)||0)[1],10)||void 0;this.isNativeAndroid=isAndroid&&webkitVer<=534&&navigator.vendor.indexOf('Google')==0;}
 this.div=document.getElementById(name);if(!this.div){this.div=document.createElement('div');document.body.appendChild(this.div);this.div.id=name;this.div.style.position='absolute';this.div.style.left=this.div.style.top='0px';}
 this.div.mejdu=this;this.name=name;if(this.div){trace("["+GodStep.version+"] {Godstep."+this.name+''+((this.WEBGL)?" WEBGL":'')+((this.CANVAS)?" CANVAS":'')+"}");}
 else{trace(GodStep.ERR_DIV_NF);return null;}
 if(w&&h){this.W=w;this.H=h;}else{body=document.body,html=document.documentElement;this.H=Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight);if(this.FULLPAGE){document.body.style.margin=0;document.body.padding=0;this.W=this.div.scrollWidth;this.H=html.clientHeight;}
 else{this.W=this.div.clientWidth;this.H=this.div.clientHeight;}}
 var opt=PIXI.defaultRenderOptions;opt.transparent=this.TRANSPARENT;opt.antialias=this.ANTIALIAS;if(this.WEBGL){this.webgl=new PIXI.WebGLRenderer(this.W,this.H,opt);this.div.appendChild(this.soulview=this.webgl.view);}
 else
 if(this.CANVAS){this.canvas=new PIXI.CanvasRenderer(this.W,this.H,opt);this.canvas.view.style.display='block';this.div.appendChild(this.soulview=this.canvas.view);GodStep.Mejdu.C=this.canvas;}else{var renderer=PIXI.autoDetectRenderer(this.W,this.H,opt);if(renderer instanceof PIXI.WebGLRenderer){this.WEBGL=true;this.webgl=renderer;this.div.appendChild(this.soulview=this.webgl.view);}else{this.CANVAS=true;this.canvas=renderer;this.canvas.view.style.display='block';this.div.appendChild(this.soulview=this.canvas.view);GodStep.Mejdu.C=this.canvas;}}
 if(GodStep.COLOR_STAGE){this.stage=new PIXI.Stage(GodStep.COLOR_STAGE);}else{this.stage=new PIXI.Stage();}
 this.stage.soul=this;this.frames=[];if(!GodStep.Mejdu.TESTCANVAS){GodStep.Mejdu.TESTCANVAS=document.createElement("canvas");GodStep.Mejdu.TESTCANVAS.width=GodStep.Mejdu.TESTCANVAS.height=1;GodStep.TESTCTX=GodStep.Mejdu.TESTCANVAS.getContext('2d');GodStep.TESTCTX_RT=new PIXI.RenderTexture(1,1);GodStep.TESTCTX_IMG=new PIXI.Sprite(GodStep.TESTCTX_RT);GodStep.TESTCTX_C=new PIXI.DisplayObjectContainer();this.stage.addChild(GodStep.TESTCTX_IMG);this.stage.addChild(GodStep.TESTCTX_C);}
 if(this.FULLPAGE){if(this.WEBGL&&this.CANVAS&&this.PARALLEL){this.canvas.view.style.position="absolute";this.canvas.view.style.left=this.webgl.view.offsetLeft+'px';this.canvas.view.style.top=this.webgl.view.offsetTop+'px';}
  if(this.ALWAYSONTOP){this.canvas.view.style.left=this.canvas.view.style.top='0px';this.div.style.position='absolute';}
  this.div.offsetParent.style['overflow-y']='hidden';this.div.offsetParent.style['overflow-x']='auto';}
 this.isStarted=true;this.isDataLoading=false;this.visible=true;this.start();};GodStep.Mejdu.pro=GodStep.Mejdu.prototype;GodStep.Mejdu.pro.start=function(){};GodStep.Mejdu.pro.update=function(){if(this.isStarted){if(this.visible){for(var i=0,frame;frame=this.frames[i];i++){frame.update();}}}};GodStep.Mejdu.pro.postFX=function(){};GodStep.Mejdu.pro.switchZ=function(soul){var t=soul.getZ();soul.setZ(this.getZ());this.setZ(t);};GodStep.Mejdu.pro.getZ=function(){if(this.canvas)return this.canvas.view.style.zIndex;if(this.webgl)return this.webgl.view.style.zIndex;};GodStep.Mejdu.pro.setZ=function(zIndex){if(this.canvas)this.canvas.view.style.zIndex=zIndex;if(this.webgl)this.webgl.view.style.zIndex=zIndex;};GodStep.Mejdu.pro.addPosition=function(dx,dy,viewType){if(!viewType){if(this.webgl){this.webgl.view.style.position="absolute";this.webgl.view.style.left=(this.webgl.view.offsetLeft+dx)+'px';this.webgl.view.style.top=(this.webgl.view.offsetTop+dy)+'px';}
 if(this.canvas){this.canvas.view.style.position="absolute";this.canvas.view.style.left=(this.canvas.view.offsetLeft+dx)+'px';this.canvas.view.style.top=(this.canvas.view.offsetTop+dy)+'px';}}else{this[viewType].view.style.position="absolute";this[viewType].view.style.left=(this[viewType].view.offsetLeft+dx)+'px';this[viewType].view.style.top=(this[viewType].view.offsetTop+dy)+'px';}};GodStep.Mejdu.pro.setAbsolutePositionAs=function(soul,viewType){var pos;if(!viewType){if(this.webgl){pos=GodStep.IHTML.getPosition(soul.webgl.view);this.webgl.view.style.position="absolute";this.webgl.view.style.left=pos.left+'px';this.webgl.view.style.top=pos.top+'px';}
 if(this.canvas){pos=GodStep.IHTML.getPosition(soul.canvas.view);this.canvas.view.style.position="absolute";this.canvas.view.style.left=pos.left+'px';this.canvas.view.style.top=pos.top+'px';}}
else{pos=GodStep.IHTML.getPosition(soul[viewType].view);this[viewType].view.style.position="absolute";this[viewType].view.style.left=pos.left+'px';this[viewType].view.style.top=pos.top+'px';}};GodStep.Mejdu.pro.setPositionAs=function(soul,viewType){if(!viewType){if(this.webgl){this.webgl.view.style.position="absolute";this.webgl.view.style.left=soul.webgl.view.offsetLeft+'px';this.webgl.view.style.top=soul.webgl.view.offsetTop+'px';}
 if(this.canvas){this.canvas.view.style.position="absolute";this.div.style.left=soul.div.offsetLeft+'px';this.div.style.top=soul.div.offsetTop+'px';}}
else{this[viewType].view.style.position="absolute";this[viewType].view.style.left=soul[viewType].view.offsetLeft+'px';this[viewType].view.style.top=soul[viewType].view.offsetTop+'px';}};GodStep.Mejdu.pro.addFrame=function(frame,container){if(container){container.addChild(frame);}else{this.stage.addChild(frame);}
 this.frames.push(frame);this.frames[frame.name]=frame;return frame;};GodStep.Mejdu.pro.delFrame=function(frame){frame.parent.removeChild(frame);this.frames.splice(this.frames.indexOf(frame),1);};GodStep.Mejdu.pro.dialog=function(message,outTime){if(!this.dialogWindow){GodStep.Mejdu.dialogSoul=this;this.addFrame(this.dialogWindow=new GodStep.Dialog(this));}
 this.dialogWindow.setMessage(message);this.dialogWindow.out(outTime);this.dialogWindow.view();};GodStep.Mejdu.pro.setData=function(data){this.dataObject=JSON.parse(data);this.isStarted=true;for(var i=0;i<this.dataObject.frames.length;i++){var frame=this.frames[this.dataObject.frames[i].n];if(frame){frame.setData(this.dataObject.frames[i]);}}
 GodStep.dispatch(this,GodStep.DATA_LOADED);};GodStep.Mejdu.pro.loadData=function(dataPath){this.isStarted=false;this.isDataLoading=true;this.dataLoader=new GodStep.Ajax(dataPath+'.json',this,this.h_data);};GodStep.Mejdu.pro.h_data=function(e){this.parent.isDataLoading=false;this.parent.setData(this.response);this.parent.dataLoader=null};GodStep.Mejdu.pro.beginFps=function(){if(this.fps)this.fps.begin();};GodStep.Mejdu.pro.endFps=function(){if(this.fps)this.fps.end();};GodStep.Mejdu.pro.createTempCanvas=function(w,h){if(!GodStep.TEMPCANVAS){var tempCanvas=GodStep.TEMPCANVAS=document.createElement("canvas");tempCanvas.width=w;tempCanvas.height=h;GodStep.TEMPCTX=tempCanvas.getContext('2d');this.stage.addChild(GodStep.TEMPCONTAINER=new PIXI.DisplayObjectContainer());}};GodStep.Mejdu.pro.createStats=function(x,y,visible){var stats=this.stats=new Stats();stats.domElement.style.position='absolute';stats.domElement.style.left=(x||0)+'px';stats.domElement.style.top=(y||0)+'px';if(visible){document.body.appendChild(stats.domElement);}};GodStep.Mejdu.pro.resize=function(ww,hh,oww,ohh){var s=1;var w=ww*s;var h=hh*s;var ow=oww*s;var oh=ohh*s;this.W=w;this.H=h;this.HH=h*.5;this.HW=w*.5;this.OH=oh;this.OW=ow;this.HOW=w*.5;this.HOH=oh*.5;this.DOW=this.OW-this.W;this.DOH=this.OH-this.H;if(this.canvas)this.canvas.resize(ow||w,oh||h);if(this.webgl)this.webgl.resize(ow||w,oh||h);this.div.style.width=(ow||w)+'px';this.div.style.height=(oh||h)+'px';};Object.defineProperty(GodStep.Mejdu.pro,'position',{get:function(){var view=(this.canvas)?this.canvas.view:this.webgl.view;return new PIXI.Point(view.clientLeft,view.clientTop);},set:function(value){if(this.canvas){}
 if(this.webgl){}}});Object.defineProperty(GodStep.Mejdu.pro,'visible',{get:function(){return this.isVisible;},set:function(value){this.isVisible=value;if(this.canvas)this.canvas.view.style.visibility=(value)?'visible':'hidden';if(this.webgl)this.webgl.view.style.visibility=(value)?'visible':'hidden';this.div.style.visibility=(value)?'visible':'hidden';}});}());GodStep.hitTest=function(obj,x,y){var ctx=GodStep.TESTCTX;var p=obj.parent;var c=GodStep.TESTCTX_C;var id=obj.parent.children.indexOf(obj);p.removeChild(obj);c.addChild(obj);GodStep.TESTCTX_RT.render(c,{x:-x,y:-y},true);ctx.drawImage(GodStep.TESTCTX_IMG.texture.baseTexture.source,0,0);var hit=ctx.getImageData(0,0,1,1).data[3]>1;ctx.clearRect(0,0,2,2);c.removeChild(obj);p.addChildAt(obj,id);return hit;};GodStep.addMEvent=function(target,type,handle){var type1;var type2;switch(type){case'up':type1='mouseup';type2='touchend';break;case'move':type1='mousemove';type2='touchmove';break;case'down':type1='mousedown';type2='touchstart';break;case'rightdown':type1='rightdown';break;case'rightup':type1='rightup';break;}
 target[type1]=handle;target[type2]=handle;};GodStep.addEvent=function(target,type,handle){if(!target.addEventListener){PIXI.EventTarget.call(target);}
 target.addEventListener(type,handle);};GodStep.dispatch=function(target,type,data,ee){var event;try{if(ee){event=ee;ee.type=type;}else{event=new Event(type);}
 event.t=target;event.data=data;target.dispatchEvent(event);}
catch(e){event=document.createEvent('Event');event.t=target;event.data=data;event.initEvent(type,true,true);target.dispatchEvent(event);}};GodStep.Mejdu.render=function(){var framesCount=GodStep.Mejdu.souls.length;for(var s=0;s<framesCount;s++){var soul=GodStep.Mejdu.souls[s];soul.update();if(soul.WEBGL)soul.webgl.render(soul.stage);if(soul.CANVAS)soul.canvas.render(soul.stage);soul.postFX();}
 window.requestAnimFrame(GodStep.Mejdu.render);};var Games=Games||{};Games.SCALE=1;Games.FRAME_RATE=1/60;GodStep.Game=function(n,color,preloaderClass,setting_slot,player_slot,defaultSettings,type,w,h){this.ANTIALIAS=true;GodStep.Game.AUDIOEVENT=false;GodStep.IMAGE_RESOLUTION=GodStep.IMAGE_RESOLUTION||1;this.TRANSPARENT=GodStep.Game.TRANSPARENT;this.FULLPAGE=GodStep.Game.FULLPAGE;GodStep.Game.MUTED=false;switch(type){case'auto':break;case'canvas':this.CANVAS=true;break;case'webgl':this.WEBGL=true;break;}
 this.MW=w||1536;this.MH=h||1854;this.align='centerG';this.isRunning=false;this.PLAYER_SLOT=player_slot;this.SETTINGS_SLOT=setting_slot;this.preloaderClass=preloaderClass;this.defaultSettings=defaultSettings;Games.SOUND=true;GodStep.Game.instance=this;this.stageColor=GodStep.COLOR_STAGE=color;if(window.navigator){var useragent=window.navigator.userAgent;if(useragent.search('NOKIA')!=-1&&useragent.search('635')!=-1){this.isNokia635=true;}
  function isStock(){var matches=useragent.match(/Android.*AppleWebKit\/([\d.]+)/);return matches&&matches[1]<537;}
  var ua=useragent.toLowerCase();this.isSharpMiniStock=((/SHL24/i).test(ua))&&isStock();this.isXperiaAStock=((/SO-04E/i).test(ua))&&isStock();this.isFujitsu=((/F-01F/i).test(ua))&&isStock();this.isSharp=((/SH-01F/i).test(ua))&&isStock();this.isS4=((/GT-I9505/i).test(ua))||((/GT-I9502/i).test(ua))||((/GT-I9500/i).test(ua))||((/T530/i).test(ua));this.isAndroid=useragent.indexOf('Android')>=0;var webkitVer=parseInt((/WebKit\/([0-9]+)/.exec(navigator.appVersion)||0)[1],10)||void 0;this.isNativeAndroid=this.isAndroid&&webkitVer<=534&&navigator.vendor.indexOf('Google')==0;trace('useragent'+" "+useragent+" "+this.isS4);}
 if(this.isS4){this.DISABLE_SOUND=true;}
 GodStep.Mejdu.call(this,n);this.SW=this.W;this.SH=this.H;if(this.RIGHTCLICK){if(this.canvas){this.canvas.view.oncontextmenu=function(e){e.preventDefault();};}
  if(this.webgl){this.webgl.view.oncontextmenu=function(e){e.preventDefault();};}}};extend(GodStep.Game,GodStep.Mejdu);GodStep.Game.FULLPAGE=true;pro.update=function(){this.beginFps();GodStep.Mejdu.prototype.update.call(this);this.endFps();};pro.start=function(){this.storage=new GodStep.LocalStorage();this.settingsDATA=GodStep.LoadLocal(this.SETTINGS_SLOT);if(this.settingsDATA){}else{GodStep.SaveLocal(GodStep.LoadText(this.defaultSettings),this.SETTINGS_SLOT);this.settingsDATA=GodStep.LoadLocal(this.SETTINGS_SLOT);trace('default settings');}
 this.resizeWindow(this.W,this.H);this.addFrame(this.assets=new this.preloaderClass(this));addEvent(this.assets,GodStep.ASSETS_LOADED,this.h_asssets);h_resize();this.reposition();this.assets.load();this.assets.Place=new PIXI.Point((this.OW-this.W)/2,(this.OH-this.H)/2);this.initSleepDetector();};pro.initSleepDetector=function(){var isIE=false;if(navigator){if(navigator.appName.indexOf("Internet Explorer")!=-1||navigator.appName.indexOf("Netscape")!=-1){isIE=true}}
 if(!isIE){if(!GodStep.Game.sleepLoop){GodStep.Game.lastSeen=Date.now();GodStep.Game.sleepLoop=function(){var d=Date.now()-GodStep.Game.lastSeen;GodStep.Game.lastSeen=Date.now();setTimeout(GodStep.Game.sleepLoop,50);if(d>350&&!GodStep.Game.MUTED){if(!GodStep.Game.SOUND_MUTE){trace('MUTED');GodStep.muteSound(null,0);GodStep.Game.SOUND_MUTE=true;}}else{if(GodStep.Game.SOUND_MUTE){trace('UNMUTED');GodStep.muteSound(null,1);GodStep.Game.SOUND_MUTE=false;}}};GodStep.Game.sleepLoop();}}else{var hidden="hidden";if(hidden in document)
  document.addEventListener("visibilitychange",onchange);else if((hidden="mozHidden")in document)
  document.addEventListener("mozvisibilitychange",onchange);else if((hidden="webkitHidden")in document)
  document.addEventListener("webkitvisibilitychange",onchange);else if((hidden="msHidden")in document)
  document.addEventListener("msvisibilitychange",onchange);else if("onfocusin"in document)
  document.onfocusin=document.onfocusout=onchange;else
  window.onpageshow=window.onpagehide=window.onfocus=window.onblur=onchange;function onchange(evt){var v="visible",h="hidden",evtMap={focus:v,focusin:v,pageshow:v,blur:h,focusout:h,pagehide:h};evt=evt||window.event;var isHidden=false;if(evt.type in evtMap)
  isHidden=evtMap[evt.type];else{isHidden=this[hidden];}
  if(isHidden){GodStep.Game.SOUND_MUTE=true;trace('MUTED');GodStep.muteSound(null,0);}else{GodStep.Game.SOUND_MUTE=false;trace('UNMUTED');GodStep.muteSound(null,1);}}}};pro.reposition=function(){var p;switch(this.align){case'centerG':p=new PIXI.Point((this.OW-this.W)/2,(this.OH-this.H)/2);p.y=Math.max(0,p.y);break;case'left':p=new PIXI.Point();break;}
 for(var i=0;i<this.frames.length;i++){this.frames[i].Place=p;this.frames[i].Scale=this.assets.Scale;}};pro.screenTo=function(arr,last){this.transmission.start(arr,last)};pro.resizeWindow=function(w,h){if(this.FULLRESIZE){if(this.MW/this.MH>w/h){if(this.FULLPAGE)this.div.style.position='relative';this.resize(w,w*this.MH/this.MW,w,h);}else{if(this.FULLPAGE)this.div.style.position='relative';this.resize(h*this.MW/this.MH,h,w,h);}
 this.S=this.W/this.MW;if(this.startS==null){if(this.assets){this.assets.Scale=this.S/this.startS;}else{this.startS=this.S;}}else{this.assets.Scale=this.S/this.startS;this.reposition();}}else{if(this.MW/this.MH>w/h){if(this.FULLPAGE)this.div.style.position='relative';this.resize(w,w*this.MH/this.MW,w,h);}else{if(this.FULLPAGE)this.div.style.position='relative';this.resize(h*this.MW/this.MH,h,w,h);}
 this.S=this.W/this.MW;if(!this.isRunning){if(this.assets){this.assets.Scale=this.S/this.startS;}else{this.startS=this.S;}
  this.reposition();}else{if(this.assets)this.assets.Scale=this.S/this.startS;this.reposition();}}};function h_resize(){GodStep.RESIZE_REQUEST=false;var game=GodStep.Game.instance;if(!game.FULLPAGE)return;var height;if(typeof(window.innerWidth)=='number'){height=window.innerHeight;}else{if(document.documentElement&&(document.documentElement.clientWidth||document.documentElement.clientHeight)){height=document.documentElement.clientHeight;}else{if(document.body&&(document.body.clientWidth||document.body.clientHeight)){height=document.body.clientHeight;}}}
 game.resizeWindow(document.body.clientWidth,height);}
pro.initResizeEvents=function(){var supportsOrientationChange=false;var orientationEvent=supportsOrientationChange?"orientationchange":"resize";window.addEventListener("resize",function(){setTimeout(h_resize,50);},false);window.addEventListener(orientationEvent,function(){setTimeout(function(){h_resize();var orientation=window.orientation;if(GodStep.Game.instance.orientation){if(orientation!=undefined){if(orientation==90||orientation==-90){GodStep.Game.instance.orientation.visible=true;}else{GodStep.Game.instance.orientation.visible=false;}}}},50);},false);};pro.run=function(){trace('running');};pro.h_asssets=function(e){switch(e.type){case GodStep.ASSETS_LOADED:this.soul.run();break;}};GodStep.volumeSound=function(name,isVol){if(GodStep.Game.instance.DISABLE_SOUND)return;var sound=GodStep.Game.instance.sound;if(!sound)return;if(sound.AVAILABLE){if(GodStep.Game.instance.AUDIOTAG){for(var i=0;i<sound.needLoaded.length;i++){if(name){if(sound.needLoaded[i].src==name){sound.sounds[i].volume=isVol?1:0;}}else{sound.sounds[i].volume=isVol?1:0;}}}else{if(createjs){if(createjs.Sound)createjs.Sound.stop();}}}};GodStep.muteSound=function(name,v){if(GodStep.Game.instance.DISABLE_SOUND)return;var sound=GodStep.Game.instance.sound;if(!sound)return;if(sound.AVAILABLE){if(GodStep.Game.instance.AUDIOTAG){for(var i=0;i<sound.needLoaded.length;i++){if(name){if(sound.needLoaded[i].src==name){sound.sounds[i].volume=v;}}else{if(sound.sounds[i]){sound.sounds[i].volume=v;}}}}else{createjs.Sound.setMute(v==0);}}};GodStep.playSound=function(name,repeat,isOk){if(GodStep.Game.instance.DISABLE_SOUND)return;var sound=GodStep.Game.instance.sound;if(sound.AVAILABLE){if(GodStep.Game.instance.AUDIOTAG){if(isOk){for(var i=0;i<sound.needLoaded.length;i++){if(sound.needLoaded[i].src==name){sound.sounds[i].currentTime=0;sound.sounds[i].play();}}}}else{var repeatCount=-1;if(repeat!=null){repeatCount=repeat;}
 if(isOk){var s=createjs.Sound.play(name,createjs.Sound.PLAY_SUCCEEDED,0,0,repeatCount);s.superName=name;s.superRepeat=repeatCount;if(GodStep.Game.AUDIOEVENT){addEvent(s,'loop',GodStep.loopEvent);}}}}else{trace('not available');}};GodStep.loopEvent=function(e){var WS=e.target;createjs.Sound.stop();delEvent(WS,'loop',GodStep.loopEvent);GodStep.playSound(WS.superName,WS.superRepeat,true);};GodStep.PIXIEvent=PIXI.Event;PIXI.Event=function(target,name,data){GodStep.PIXIEvent.call(this,target,name,data);this.stopped=true;};//Mejdu FrameWork powered by PIXI

var M3=M3||{};
/*!
 SoundJS
 Visit /createjs.com/ for documentation, updates and examples.

 Copyright (c) 2010 gskinner.com, inc.

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without
 restriction, including without limitation the rights to use,
 copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following
 conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.
*/
this.createjs=this.createjs||{};
(function(){
var s=createjs.SoundJS=createjs.SoundJS||{};
s.version="NEXT";
s.buildDate="Thu, 11 Dec 2014 23:16:15 GMT";
})();
this.createjs=this.createjs||{};
createjs.extend=function(subclass,superclass){
"use strict";
function o(){this.constructor=subclass;}
o.prototype=superclass.prototype;
return(subclass.prototype=new o());
};
this.createjs=this.createjs||{};
createjs.promote=function(subclass,prefix){
"use strict";
var subP=subclass.prototype,supP=(Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;
if(supP){
subP[(prefix+="_")+"constructor"]=supP.constructor;
for(var n in supP){
if(subP.hasOwnProperty(n)&&(typeof supP[n]=="function")){subP[prefix+n]=supP[n];}
}
}
return subclass;
};
this.createjs=this.createjs||{};
createjs.indexOf=function(array,searchElement){
"use strict";
for(var i=0,l=array.length;i<l;i++){
if(searchElement===array[i]){
return i;
}
}
return-1;
};
this.createjs=this.createjs||{};
(function(){
"use strict";
createjs.proxy=function(method,scope){
var aArgs=Array.prototype.slice.call(arguments,2);
return function(){
return method.apply(scope,Array.prototype.slice.call(arguments,0).concat(aArgs));
};
}
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var t=Object.defineProperty?true:false;
var foo={};
try{
Object.defineProperty(foo,"bar",{
get:function(){
return this._bar;
},
set:function(value){
this._bar=value;
}
});
}catch(e){
t=false;
}
createjs.definePropertySupported=t;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function BrowserDetect(){
throw"BrowserDetect cannot be instantiated";
};
var agent=BrowserDetect.agent=window.navigator.userAgent;
BrowserDetect.isWindowPhone=(agent.indexOf("IEMobile")>-1)||(agent.indexOf("Windows Phone")>-1);
BrowserDetect.isFirefox=(agent.indexOf("Firefox")>-1);
BrowserDetect.isOpera=(window.opera!=null);
BrowserDetect.isChrome=(agent.indexOf("Chrome")>-1);
BrowserDetect.isIOS=(agent.indexOf("iPod")>-1||agent.indexOf("iPhone")>-1||agent.indexOf("iPad")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isAndroid=(agent.indexOf("Android")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isBlackberry=(agent.indexOf("Blackberry")>-1);
createjs.BrowserDetect=BrowserDetect;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function EventDispatcher(){
this._listeners=null;
this._captureListeners=null;
}
var p=EventDispatcher.prototype;
EventDispatcher.initialize=function(target){
target.addEventListener=p.addEventListener;
target.on=p.on;
target.removeEventListener=target.off=p.removeEventListener;
target.removeAllEventListeners=p.removeAllEventListeners;
target.hasEventListener=p.hasEventListener;
target.dispatchEvent=p.dispatchEvent;
target._dispatchEvent=p._dispatchEvent;
target.willTrigger=p.willTrigger;
};
p.addEventListener=function(type,listener,useCapture){
var listeners;
if(useCapture){
listeners=this._captureListeners=this._captureListeners||{};
}else{
listeners=this._listeners=this._listeners||{};
}
var arr=listeners[type];
if(arr){this.removeEventListener(type,listener,useCapture);}
arr=listeners[type];
if(!arr){listeners[type]=[listener];}
else{arr.push(listener);}
return listener;
};
p.on=function(type,listener,scope,once,data,useCapture){
if(listener.handleEvent){
scope=scope||listener;
listener=listener.handleEvent;
}
scope=scope||this;
return this.addEventListener(type,function(evt){
listener.call(scope,evt,data);
once&&evt.remove();
},useCapture);
};
p.removeEventListener=function(type,listener,useCapture){
var listeners=useCapture?this._captureListeners:this._listeners;
if(!listeners){return;}
var arr=listeners[type];
if(!arr){return;}
for(var i=0,l=arr.length;i<l;i++){
if(arr[i]==listener){
if(l==1){delete(listeners[type]);}
else{arr.splice(i,1);}
break;
}
}
};
p.off=p.removeEventListener;
p.removeAllEventListeners=function(type){
if(!type){this._listeners=this._captureListeners=null;}
else{
if(this._listeners){delete(this._listeners[type]);}
if(this._captureListeners){delete(this._captureListeners[type]);}
}
};
p.dispatchEvent=function(eventObj){
if(typeof eventObj=="string"){
var listeners=this._listeners;
if(!listeners||!listeners[eventObj]){return false;}
eventObj=new createjs.Event(eventObj);
}else if(eventObj.target&&eventObj.clone){
eventObj=eventObj.clone();
}
try{eventObj.target=this;}catch(e){}
if(!eventObj.bubbles||!this.parent){
this._dispatchEvent(eventObj,2);
}else{
var top=this,list=[top];
while(top.parent){list.push(top=top.parent);}
var i,l=list.length;
for(i=l-1;i>=0&&!eventObj.propagationStopped;i--){
list[i]._dispatchEvent(eventObj,1+(i==0));
}
for(i=1;i<l&&!eventObj.propagationStopped;i++){
list[i]._dispatchEvent(eventObj,3);
}
}
return eventObj.defaultPrevented;
};
p.hasEventListener=function(type){
var listeners=this._listeners,captureListeners=this._captureListeners;
return!!((listeners&&listeners[type])||(captureListeners&&captureListeners[type]));
};
p.willTrigger=function(type){
var o=this;
while(o){
if(o.hasEventListener(type)){return true;}
o=o.parent;
}
return false;
};
p.toString=function(){
return"[EventDispatcher]";
};
p._dispatchEvent=function(eventObj,eventPhase){
var l,listeners=(eventPhase==1)?this._captureListeners:this._listeners;
if(eventObj&&listeners){
var arr=listeners[eventObj.type];
if(!arr||!(l=arr.length)){return;}
try{eventObj.currentTarget=this;}catch(e){}
try{eventObj.eventPhase=eventPhase;}catch(e){}
eventObj.removed=false;
arr=arr.slice();
for(var i=0;i<l&&!eventObj.immediatePropagationStopped;i++){
var o=arr[i];
if(o.handleEvent){o.handleEvent(eventObj);}
else{o(eventObj);}
if(eventObj.removed){
this.off(eventObj.type,o,eventPhase==1);
eventObj.removed=false;
}
}
}
};
createjs.EventDispatcher=EventDispatcher;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Event(type,bubbles,cancelable){
this.type=type;
this.target=null;
this.currentTarget=null;
this.eventPhase=0;
this.bubbles=!!bubbles;
this.cancelable=!!cancelable;
this.timeStamp=(new Date()).getTime();
this.defaultPrevented=false;
this.propagationStopped=false;
this.immediatePropagationStopped=false;
this.removed=false;
}
var p=Event.prototype;
p.preventDefault=function(){
this.defaultPrevented=this.cancelable&&true;
};
p.stopPropagation=function(){
this.propagationStopped=true;
};
p.stopImmediatePropagation=function(){
this.immediatePropagationStopped=this.propagationStopped=true;
};
p.remove=function(){
this.removed=true;
};
p.clone=function(){
return new Event(this.type,this.bubbles,this.cancelable);
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
p.toString=function(){
return"[Event (type="+this.type+")]";
};
createjs.Event=Event;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function ErrorEvent(title,message,data){
this.Event_constructor("error");
this.title=title;
this.message=message;
this.data=data;
}
var p=createjs.extend(ErrorEvent,createjs.Event);
p.clone=function(){
return new createjs.ErrorEvent(this.title,this.message,this.data);
};
createjs.ErrorEvent=createjs.promote(ErrorEvent,"Event");
}());
this.createjs=this.createjs||{};
(function(scope){
"use strict";
function ProgressEvent(loaded,total){
this.Event_constructor("progress");
this.loaded=loaded;
this.total=(total==null)?1:total;
this.progress=(total==0)?0:this.loaded/this.total;
};
var p=createjs.extend(ProgressEvent,createjs.Event);
p.clone=function(){
return new createjs.ProgressEvent(this.loaded,this.total);
};
createjs.ProgressEvent=createjs.promote(ProgressEvent,"Event");
}(window));
this.createjs=this.createjs||{};
(function(){
"use strict";
function LoadItem(){
this.src=null;
this.type=null;
this.id=null;
this.maintainOrder=false;
this.callback=null;
this.data=null;
this.method=createjs.LoadItem.GET;
this.values=null;
this.headers=null;
this.withCredentials=false;
this.mimeType=null;
this.crossOrigin="Anonymous";
this.loadTimeout=8000;
};
var p=LoadItem.prototype={};
var s=LoadItem;
s.create=function(value){
if(typeof value=="string"){
var item=new LoadItem();
item.src=value;
return item;
}else if(value instanceof s){
return value;
}else if(value instanceof Object){
return value;
}else{
throw new Error("Type not recognized.");
}
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
createjs.LoadItem=s;
}());
(function(){
var s={};
s.ABSOLUTE_PATT=/^(?:\w+:)?\/{2}/i;
s.RELATIVE_PATT='';
s.EXTENSION_PATT=/\/?[^/]+\.(\w{1,5})$/i;
s.parseURI=function(path){
var info={absolute:false,relative:false};
if(path==null){return info;}
var queryIndex=path.indexOf("?");
if(queryIndex>-1){
path=path.substr(0,queryIndex);
}
var match;
if(s.ABSOLUTE_PATT.test(path)){
info.absolute=true;
}else if(s.RELATIVE_PATT.test(path)){
info.relative=true;
}
if(match=path.match(s.EXTENSION_PATT)){
info.extension=match[1].toLowerCase();
}
return info;
};
s.formatQueryString=function(data,query){
if(data==null){
throw new Error('You must specify data.');
}
var params=[];
for(var n in data){
params.push(n+'='+escape(data[n]));
}
if(query){
params=params.concat(query);
}
return params.join('&');
};
s.buildPath=function(src,data){
if(data==null){
return src;
}
var query=[];
var idx=src.indexOf('?');
if(idx!=-1){
var q=src.slice(idx+1);
query=query.concat(q.split('&'));
}
if(idx!=-1){
return src.slice(0,idx)+'?'+this._formatQueryString(data,query);
}else{
return src+'?'+this._formatQueryString(data,query);
}
};
s.isCrossDomain=function(item){
var target=document.createElement("a");
target.href=item.src;
var host=document.createElement("a");
host.href=location.href;
var crossdomain=(target.hostname!="")&&
(target.port!=host.port||
target.protocol!=host.protocol||
target.hostname!=host.hostname);
return crossdomain;
};
s.isLocal=function(item){
var target=document.createElement("a");
target.href=item.src;
return target.hostname==""&&target.protocol=="file:";
};
s.isBinary=function(type){
switch(type){
case createjs.AbstractLoader.IMAGE:
case createjs.AbstractLoader.BINARY:
return true;
default:
return false;
}
};
s.isImageTag=function(item){
return item instanceof HTMLImageElement;
};
s.isAudioTag=function(item){
if(window.HTMLAudioElement){
return item instanceof HTMLAudioElement;
}else{
return false;
}
};
s.isVideoTag=function(item){
if(window.HTMLVideoElement){
return item instanceof HTMLVideoElement;
}else{
false;
}
};
s.isText=function(type){
switch(type){
case createjs.AbstractLoader.TEXT:
case createjs.AbstractLoader.JSON:
case createjs.AbstractLoader.MANIFEST:
case createjs.AbstractLoader.XML:
case createjs.AbstractLoader.CSS:
case createjs.AbstractLoader.SVG:
case createjs.AbstractLoader.JAVASCRIPT:
return true;
default:
return false;
}
};
s.getTypeByExtension=function(extension){
if(extension==null){
return createjs.AbstractLoader.TEXT;
}
switch(extension.toLowerCase()){
case"jpeg":
case"jpg":
case"gif":
case"png":
case"webp":
case"bmp":
return createjs.AbstractLoader.IMAGE;
case"ogg":
case"mp3":
case"webm":
return createjs.AbstractLoader.SOUND;
case"mp4":
case"webm":
case"ts":
return createjs.AbstractLoader.VIDEO;
case"json":
return createjs.AbstractLoader.JSON;
case"xml":
return createjs.AbstractLoader.XML;
case"css":
return createjs.AbstractLoader.CSS;
case"js":
return createjs.AbstractLoader.JAVASCRIPT;
case'svg':
return createjs.AbstractLoader.SVG;
default:
return createjs.AbstractLoader.TEXT;
}
};
createjs.RequestUtils=s;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractLoader(loadItem,preferXHR,type){
this.EventDispatcher_constructor();
this.loaded=false;
this.canceled=false;
this.progress=0;
this.type=type;
this.resultFormatter=null;
if(loadItem){
this._item=createjs.LoadItem.create(loadItem);
}else{
this._item=null;
}
this._preferXHR=preferXHR;
this._result=null;
this._rawResult=null;
this._loadedItems=null;
this._tagSrcAttribute=null;
this._tag=null;
};
var p=createjs.extend(AbstractLoader,createjs.EventDispatcher);
var s=AbstractLoader;
s.POST="POST";
s.GET="GET";
s.BINARY="binary";
s.CSS="css";
s.IMAGE="image";
s.JAVASCRIPT="javascript";
s.JSON="json";
s.JSONP="jsonp";
s.MANIFEST="manifest";
s.SOUND="sound";
s.VIDEO="video";
s.SPRITESHEET="spritesheet";
s.SVG="svg";
s.TEXT="text";
s.XML="xml";
p.getItem=function(){
return this._item;
};
p.getResult=function(raw){
return raw?this._rawResult:this._result;
};
p.getTag=function(){
return this._tag;
};
p.setTag=function(tag){
this._tag=tag;
};
p.load=function(){
this._createRequest();
this._request.on("complete",this,this);
this._request.on("progress",this,this);
this._request.on("loadStart",this,this);
this._request.on("abort",this,this);
this._request.on("timeout",this,this);
this._request.on("error",this,this);
var evt=new createjs.Event("initialize");
evt.loader=this._request;
this.dispatchEvent(evt);
this._request.load();
};
p.cancel=function(){
this.canceled=true;
this.destroy();
};
p.destroy=function(){
if(this._request){
this._request.removeAllEventListeners();
this._request.destroy();
}
this._request=null;
this._item=null;
this._rawResult=null;
this._result=null;
this._loadItems=null;
this.removeAllEventListeners();
};
p.getLoadedItems=function(){
return this._loadedItems;
};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.TagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._createTag=function(src){return null;};
p._sendLoadStart=function(){
if(this._isCanceled()){return;}
this.dispatchEvent("loadstart");
};
p._sendProgress=function(value){
if(this._isCanceled()){return;}
var event=null;
if(typeof(value)=="number"){
this.progress=value;
event=new createjs.ProgressEvent(this.progress);
}else{
event=value;
this.progress=value.loaded/value.total;
event.progress=this.progress;
if(isNaN(this.progress)||this.progress==Infinity){this.progress=0;}
}
this.hasEventListener("progress")&&this.dispatchEvent(event);
};
p._sendComplete=function(){
if(this._isCanceled()){return;}
this.loaded=true;
var event=new createjs.Event("complete");
event.rawResult=this._rawResult;
if(this._result!=null){
event.result=this._result;
}
this.dispatchEvent(event);
};
p._sendError=function(event){
if(this._isCanceled()||!this.hasEventListener("error")){return;}
if(event==null){
event=new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY");
}
this.dispatchEvent(event);
};
p._isCanceled=function(){
if(window.createjs==null||this.canceled){
return true;
}
return false;
};
p.resultFormatter=null;
p.handleEvent=function(event){
switch(event.type){
case"complete":
this._rawResult=event.target._response;
var result=this.resultFormatter&&this.resultFormatter(this);
var _this=this;
if(result instanceof Function){
result(function(result){
_this._result=result;
_this._sendComplete();
});
}else{
this._result=result||this._rawResult;
this._sendComplete();
}
break;
case"progress":
this._sendProgress(event);
break;
case"error":
this._sendError(event);
break;
case"loadstart":
this._sendLoadStart();
break;
case"abort":
case"timeout":
if(!this._isCanceled()){
this.dispatchEvent(event.type);
}
break;
}
};
p.buildPath=function(src,data){
return createjs.RequestUtils.buildPath(src,data);
};
p.toString=function(){
return"[PreloadJS AbstractLoader]";
};
createjs.AbstractLoader=createjs.promote(AbstractLoader,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractMediaLoader(loadItem,preferXHR,type){
this.AbstractLoader_constructor(loadItem,preferXHR,type);
this.resultFormatter=this._formatResult;
this._tagSrcAttribute="src";
};
var p=createjs.extend(AbstractMediaLoader,createjs.AbstractLoader);
p.load=function(){
if(!this._tag){
this._tag=this._createTag(this._item.src);
}
this._tag.preload="auto";
this._tag.load();
this.AbstractLoader_load();
};
p._createTag=function(){};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.MediaTagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._formatResult=function(loader){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
if(this._preferXHR){
loader.getTag().src=loader.getResult(true);
}
return loader.getTag();
};
createjs.AbstractMediaLoader=createjs.promote(AbstractMediaLoader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractRequest=function(item){
this._item=item;
};
var p=createjs.extend(AbstractRequest,createjs.EventDispatcher);
p.load=function(){};
p.destroy=function(){};
p.cancel=function(){};
createjs.AbstractRequest=createjs.promote(AbstractRequest,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
this._addedToDOM=false;
this._startTagVisibility=null;
};
var p=createjs.extend(TagRequest,createjs.AbstractRequest);
p.load=function(){
if(this._tag.parentNode==null){
window.document.body.appendChild(this._tag);
this._addedToDOM=true;
}
this._tag.onload=createjs.proxy(this._handleTagComplete,this);
this._tag.onreadystatechange=createjs.proxy(this._handleReadyStateChange,this);
var evt=new createjs.Event("initialize");
evt.loader=this._tag;
this.dispatchEvent(evt);
this._hideTag();
this._tag[this._tagSrcAttribute]=this._item.src;
};
p.destroy=function(){
this._clean();
this._tag=null;
this.AbstractRequest_destroy();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleTagComplete=function(){
this._rawResult=this._tag;
this._result=this.resultFormatter&&this.resultFormatter(this)||this._rawResult;
this._clean();
this._showTag();
this.dispatchEvent("complete");
};
p._clean=function(){
this._tag.onload=null;
this._tag.onreadystatechange=null;
if(this._addedToDOM&&this._tag.parentNode!=null){
this._tag.parentNode.removeChild(this._tag);
}
};
p._hideTag=function(){
this._startTagVisibility=this._tag.style.visibility;
this._tag.style.visibility="hidden";
};
p._showTag=function(){
this._tag.style.visibility=this._startTagVisibility;
};
p._handleStalled=function(){
};
createjs.TagRequest=createjs.promote(TagRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function MediaTagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
};
var p=createjs.extend(MediaTagRequest,createjs.TagRequest);
var s=MediaTagRequest;
p.load=function(){
this._tag.onstalled=createjs.proxy(this._handleStalled,this);
this._tag.onprogress=createjs.proxy(this._handleProgress,this);
this._tag.addEventListener&&this._tag.addEventListener("canplaythrough",this._loadedHandler,false);
this.TagRequest_load();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleStalled=function(){
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._clean=function(){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
this._tag.onprogress=null;
this.TagRequest__clean();
};
createjs.MediaTagRequest=createjs.promote(MediaTagRequest,"TagRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function XHRRequest(item){
this.AbstractRequest_constructor(item);
this._request=null;
this._loadTimeout=null;
this._xhrLevel=1;
this._response=null;
this._rawResponse=null;
this._canceled=false;
this._handleLoadStartProxy=createjs.proxy(this._handleLoadStart,this);
this._handleProgressProxy=createjs.proxy(this._handleProgress,this);
this._handleAbortProxy=createjs.proxy(this._handleAbort,this);
this._handleErrorProxy=createjs.proxy(this._handleError,this);
this._handleTimeoutProxy=createjs.proxy(this._handleTimeout,this);
this._handleLoadProxy=createjs.proxy(this._handleLoad,this);
this._handleReadyStateChangeProxy=createjs.proxy(this._handleReadyStateChange,this);
if(!this._createXHR(item)){
}
};
var p=createjs.extend(XHRRequest,createjs.AbstractRequest);
XHRRequest.ACTIVEX_VERSIONS=[
"Msxml2.XMLHTTP.6.0",
"Msxml2.XMLHTTP.5.0",
"Msxml2.XMLHTTP.4.0",
"MSXML2.XMLHTTP.3.0",
"MSXML2.XMLHTTP",
"Microsoft.XMLHTTP"
];
p.getResult=function(raw){
if(raw&&this._rawResponse){
return this._rawResponse;
}
return this._response;
};
p.cancel=function(){
this.canceled=true;
this._clean();
this._request.abort();
};
p.load=function(){
if(this._request==null){
this._handleError();
return;
}
this._request.addEventListener("loadstart",this._handleLoadStartProxy,false);
this._request.addEventListener("progress",this._handleProgressProxy,false);
this._request.addEventListener("abort",this._handleAbortProxy,false);
this._request.addEventListener("error",this._handleErrorProxy,false);
this._request.addEventListener("timeout",this._handleTimeoutProxy,false);
this._request.addEventListener("load",this._handleLoadProxy,false);
this._request.addEventListener("readystatechange",this._handleReadyStateChangeProxy,false);
if(this._xhrLevel==1){
this._loadTimeout=setTimeout(createjs.proxy(this._handleTimeout,this),this._item.loadTimeout);
}
try{
if(!this._item.values||this._item.method==createjs.AbstractLoader.GET){
this._request.send();
}else if(this._item.method==createjs.AbstractLoader.POST){
this._request.send(createjs.RequestUtils.formatQueryString(this._item.values));
}
}catch(error){
this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND",null,error));
}
};
p.setResponseType=function(type){
this._request.responseType=type;
};
p.getAllResponseHeaders=function(){
if(this._request.getAllResponseHeaders instanceof Function){
return this._request.getAllResponseHeaders();
}else{
return null;
}
};
p.getResponseHeader=function(header){
if(this._request.getResponseHeader instanceof Function){
return this._request.getResponseHeader(header);
}else{
return null;
}
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._handleLoadStart=function(event){
clearTimeout(this._loadTimeout);
this.dispatchEvent("loadstart");
};
p._handleAbort=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED",null,event));
};
p._handleError=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent(event.message));
};
p._handleReadyStateChange=function(event){
if(this._request.readyState==4){
this._handleLoad();
}
};
p._handleLoad=function(event){
if(this.loaded){
return;
}
this.loaded=true;
var error=this._checkError();
if(error){
this._handleError(error);
return;
}
this._response=this._getResponse();
this._clean();
this.dispatchEvent(new createjs.Event("complete"));
};
p._handleTimeout=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT",null,event));
};
p._checkError=function(){
var status=parseInt(this._request.status);
switch(status){
case 404:
case 0:
return new Error(status);
}
return null;
};
p._getResponse=function(){
if(this._response!=null){
return this._response;
}
if(this._request.response!=null){
return this._request.response;
}
try{
if(this._request.responseText!=null){
return this._request.responseText;
}
}catch(e){
}
try{
if(this._request.responseXML!=null){
return this._request.responseXML;
}
}catch(e){
}
return null;
};
p._createXHR=function(item){
var crossdomain=createjs.RequestUtils.isCrossDomain(item);
var headers={};
var req=null;
if(window.XMLHttpRequest){
req=new XMLHttpRequest();
if(crossdomain&&req.withCredentials===undefined&&window.XDomainRequest){
req=new XDomainRequest();
}
}else{
for(var i=0,l=s.ACTIVEX_VERSIONS.length;i<l;i++){
var axVersion=s.ACTIVEX_VERSIONS[i];
try{
req=new ActiveXObject(axVersions);
break;
}catch(e){}
}
if(req==null){return false;}
}
if(item.mimeType&&req.overrideMimeType){
req.overrideMimeType(item.mimeType);
}
this._xhrLevel=(typeof req.responseType==="string")?2:1;
var src=null;
if(item.method==createjs.AbstractLoader.GET){
src=createjs.RequestUtils.buildPath(item.src,item.values);
}else{
src=item.src;
}
req.open(item.method||createjs.AbstractLoader.GET,src,true);
if(crossdomain&&req instanceof XMLHttpRequest&&this._xhrLevel==1){
headers["Origin"]=location.origin;
}
if(item.values&&item.method==createjs.AbstractLoader.POST){
headers["Content-Type"]="application/x-www-form-urlencoded";
}
if(!crossdomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";
}
if(item.headers){
for(var n in item.headers){
headers[n]=item.headers[n];
}
}
for(n in headers){
req.setRequestHeader(n,headers[n])
}
if(req instanceof XMLHttpRequest&&item.withCredentials!==undefined){
req.withCredentials=item.withCredentials;
}
this._request=req;
return true;
};
p._clean=function(){
clearTimeout(this._loadTimeout);
this._request.removeEventListener("loadstart",this._handleLoadStartProxy);
this._request.removeEventListener("progress",this._handleProgressProxy);
this._request.removeEventListener("abort",this._handleAbortProxy);
this._request.removeEventListener("error",this._handleErrorProxy);
this._request.removeEventListener("timeout",this._handleTimeoutProxy);
this._request.removeEventListener("load",this._handleLoadProxy);
this._request.removeEventListener("readystatechange",this._handleReadyStateChangeProxy);
};
p.toString=function(){
return"[PreloadJS XHRRequest]";
};
createjs.XHRRequest=createjs.promote(XHRRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function SoundLoader(loadItem,preferXHR){
this.AbstractMediaLoader_constructor(loadItem,preferXHR,createjs.AbstractLoader.SOUND);
if(createjs.RequestUtils.isAudioTag(loadItem)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.src)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.tag)){
this._tag=createjs.RequestUtils.isAudioTag(loadItem)?loadItem:loadItem.src;
}
if(this._tag!=null){
this._preferXHR=false;
}
};
var p=createjs.extend(SoundLoader,createjs.AbstractMediaLoader);
var s=SoundLoader;
s.canLoadItem=function(item){
return item.type==createjs.AbstractLoader.SOUND;
};
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.SoundLoader=createjs.promote(SoundLoader,"AbstractMediaLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Sound(){
throw"Sound cannot be instantiated";
}
var s=Sound;
s.INTERRUPT_ANY="any";
s.INTERRUPT_EARLY="early";
s.INTERRUPT_LATE="late";
s.INTERRUPT_NONE="none";
s.PLAY_INITED="playInited";
s.PLAY_SUCCEEDED="playSucceeded";
s.PLAY_INTERRUPTED="playInterrupted";
s.PLAY_FINISHED="playFinished";
s.PLAY_FAILED="playFailed";
s.SUPPORTED_EXTENSIONS=["mp3","ogg","mpeg","wav","m4a","mp4","aiff","wma","mid"];
s.EXTENSION_MAP={
m4a:"mp4"
};
s.FILE_PATTERN=/^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/;
s.defaultInterruptBehavior=s.INTERRUPT_NONE;
s.alternateExtensions=[];
s.activePlugin=null;
s._pluginsRegistered=false;
s._lastID=0;
s._masterVolume=1;
s._masterMute=false;
s._instances=[];
s._idHash={};
s._preloadHash={};
s.addEventListener=null;
s.removeEventListener=null;
s.removeAllEventListeners=null;
s.dispatchEvent=null;
s.hasEventListener=null;
s._listeners=null;
createjs.EventDispatcher.initialize(s);
s.getPreloadHandlers=function(){
return{
callback:createjs.proxy(s.initLoad,s),
types:["sound"],
extensions:s.SUPPORTED_EXTENSIONS
};
};
s._handleLoadComplete=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=true;
if(!s.hasEventListener("fileload")){continue;}
var event=new createjs.Event("fileload");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._handleLoadError=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=false;
if(!s.hasEventListener("fileerror")){continue;}
var event=new createjs.Event("fileerror");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._registerPlugin=function(plugin){
if(plugin.isSupported()){
s.activePlugin=new plugin();
return true;
}
return false;
};
s.registerPlugins=function(plugins){
s._pluginsRegistered=true;
for(var i=0,l=plugins.length;i<l;i++){
if(s._registerPlugin(plugins[i])){
return true;
}
}
return false;
};
s.initializeDefaultPlugins=function(){
if(s.activePlugin!=null){return true;}
if(s._pluginsRegistered){return false;}
if(s.registerPlugins([createjs.WebAudioPlugin,createjs.HTMLAudioPlugin])){return true;}
return false;
};
s.isReady=function(){
return(s.activePlugin!=null);
};
s.getCapabilities=function(){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities;
};
s.getCapability=function(key){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities[key];
};
s.initLoad=function(loadItem){
return s._registerSound(loadItem);
};
s._registerSound=function(loadItem){
if(!s.initializeDefaultPlugins()){return false;}
var details=s._parsePath(loadItem.src);
if(details==null){return false;}
loadItem.src=details.src;
loadItem.type="sound";
var data=loadItem.data;
var numChannels=s.activePlugin.defaultNumChannels||null;
if(data!=null){
if(!isNaN(data.channels)){
numChannels=parseInt(data.channels);
}else if(!isNaN(data)){
numChannels=parseInt(data);
}
if(data.audioSprite){
var sp;
for(var i=data.audioSprite.length;i--;){
sp=data.audioSprite[i];
s._idHash[sp.id]={src:loadItem.src,startTime:parseInt(sp.startTime),duration:parseInt(sp.duration)};
}
}
}
if(loadItem.id!=null){s._idHash[loadItem.id]={src:loadItem.src}};
var loader=s.activePlugin.register(loadItem,numChannels);
SoundChannel.create(loadItem.src,numChannels);
if(data==null||!isNaN(data)){
loadItem.data=numChannels||SoundChannel.maxPerChannel();
}else{
loadItem.data.channels=numChannels||SoundChannel.maxPerChannel();
}
if(loader.type){loadItem.type=loader.type;}
return loader;
};
s.registerSound=function(src,id,data,basePath){
var loadItem={src:src,id:id,data:data};
if(src instanceof Object){
basePath=id;
loadItem=src;
}
loadItem=createjs.LoadItem.create(loadItem);
if(basePath!=null){loadItem.src=basePath+src;}
var loader=s._registerSound(loadItem);
if(!loader){return false;}
if(!s._preloadHash[loadItem.src]){s._preloadHash[loadItem.src]=[];}
s._preloadHash[loadItem.src].push(loadItem);
if(s._preloadHash[loadItem.src].length==1){
loader.on("complete",createjs.proxy(this._handleLoadComplete,this));
loader.on("error",createjs.proxy(this._handleLoadError,this));
s.activePlugin.preload(loader);
}else{
if(s._preloadHash[loadItem.src][0]==true){return true;}
}
return loadItem;
};
s.registerSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.registerSound(sounds[i].src,sounds[i].id,sounds[i].data,basePath);
}
return returnValues;
};
s.registerManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.registerManifest is deprecated, please use createjs.Sound.registerSounds.")
}catch(error){
};
return this.registerSounds(manifest,basePath);
};
s.removeSound=function(src,basePath){
if(s.activePlugin==null){return false;}
if(src instanceof Object){src=src.src;}
src=s._getSrcById(src).src;
if(basePath!=null){src=basePath+src;}
var details=s._parsePath(src);
if(details==null){return false;}
src=details.src;
for(var prop in s._idHash){
if(s._idHash[prop].src==src){
delete(s._idHash[prop]);
}
}
SoundChannel.removeSrc(src);
delete(s._preloadHash[src]);
s.activePlugin.removeSound(src);
return true;
};
s.removeSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.removeSound(sounds[i].src,basePath);
}
return returnValues;
};
s.removeManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.removeManifest is deprecated, please use createjs.Sound.removeSounds.");
}catch(error){
};
return s.removeSounds(manifest,basePath);
};
s.removeAllSounds=function(){
s._idHash={};
s._preloadHash={};
SoundChannel.removeAll();
if(s.activePlugin){s.activePlugin.removeAllSounds();}
};
s.loadComplete=function(src){
if(!s.isReady()){return false;}
var details=s._parsePath(src);
if(details){
src=s._getSrcById(details.src).src;
}else{
src=s._getSrcById(src).src;
}
return(s._preloadHash[src][0]==true);
};
s._parsePath=function(value){
if(typeof(value)!="string"){value=value.toString();}
var match=value.match(s.FILE_PATTERN);
if(match==null){return false;}
var name=match[4];
var ext=match[5];
var c=s.getCapabilities();
var i=0;
while(!c[ext]){
ext=s.alternateExtensions[i++];
if(i>s.alternateExtensions.length){return null;}
}
value=value.replace("."+match[5],"."+ext);
var ret={name:name,src:value,extension:ext};
return ret;
};
s.play=function(src,interrupt,delay,offset,loop,volume,pan,startTime,duration){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
startTime=interrupt.startTime;
duration=interrupt.duration;
interrupt=interrupt.interrupt;
}
var instance=s.createInstance(src,startTime,duration);
var ok=s._playInstance(instance,interrupt,delay,offset,loop,volume,pan);
if(!ok){instance._playFailed();}
return instance;
};
s.createInstance=function(src,startTime,duration){
if(!s.initializeDefaultPlugins()){return new createjs.DefaultSoundInstance(src,startTime,duration);}
src=s._getSrcById(src);
var details=s._parsePath(src.src);
var instance=null;
if(details!=null&&details.src!=null){
SoundChannel.create(details.src);
if(startTime==null){startTime=src.startTime;}
instance=s.activePlugin.create(details.src,startTime,duration||src.duration);
}else{
instance=new createjs.DefaultSoundInstance(src,startTime,duration);;
}
instance.uniqueId=s._lastID++;
return instance;
};
s.setVolume=function(value){
if(Number(value)==null){return false;}
value=Math.max(0,Math.min(1,value));
s._masterVolume=value;
if(!this.activePlugin||!this.activePlugin.setVolume||!this.activePlugin.setVolume(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterVolume(value);
}
}
};
s.getVolume=function(){
return s._masterVolume;
};
s.setMute=function(value){
if(value==null){return false;}
this._masterMute=value;
if(!this.activePlugin||!this.activePlugin.setMute||!this.activePlugin.setMute(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterMute(value);
}
}
return true;
};
s.getMute=function(){
return this._masterMute;
};
s.stop=function(){
var instances=this._instances;
for(var i=instances.length;i--;){
instances[i].stop();
}
};
s._playInstance=function(instance,interrupt,delay,offset,loop,volume,pan){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
interrupt=interrupt.interrupt;
}
interrupt=interrupt||s.defaultInterruptBehavior;
if(delay==null){delay=0;}
if(offset==null){offset=instance.getPosition();}
if(loop==null){loop=instance.loop;}
if(volume==null){volume=instance.volume;}
if(pan==null){pan=instance.pan;}
if(delay==0){
var ok=s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
if(!ok){return false;}
}else{
var delayTimeoutId=setTimeout(function(){
s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
},delay);
instance.delayTimeoutId=delayTimeoutId;
}
this._instances.push(instance);
return true;
};
s._beginPlaying=function(instance,interrupt,offset,loop,volume,pan){
if(!SoundChannel.add(instance,interrupt)){
return false;
}
var result=instance._beginPlaying(offset,loop,volume,pan);
if(!result){
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
return false;
}
return true;
};
s._getSrcById=function(value){
return s._idHash[value]||{src:value};
};
s._playFinished=function(instance){
SoundChannel.remove(instance);
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
};
createjs.Sound=Sound;
function SoundChannel(src,max){
this.init(src,max);
}
SoundChannel.channels={};
SoundChannel.create=function(src,max){
var channel=SoundChannel.get(src);
if(channel==null){
SoundChannel.channels[src]=new SoundChannel(src,max);
return true;
}
return false;
};
SoundChannel.removeSrc=function(src){
var channel=SoundChannel.get(src);
if(channel==null){return false;}
channel._removeAll();
delete(SoundChannel.channels[src]);
return true;
};
SoundChannel.removeAll=function(){
for(var channel in SoundChannel.channels){
SoundChannel.channels[channel]._removeAll();
}
SoundChannel.channels={};
};
SoundChannel.add=function(instance,interrupt){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
return channel._add(instance,interrupt);
};
SoundChannel.remove=function(instance){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
channel._remove(instance);
return true;
};
SoundChannel.maxPerChannel=function(){
return p.maxDefault;
};
SoundChannel.get=function(src){
return SoundChannel.channels[src];
};
var p=SoundChannel.prototype;
p.constructor=SoundChannel;
p.src=null;
p.max=null;
p.maxDefault=100;
p.length=0;
p.init=function(src,max){
this.src=src;
this.max=max||this.maxDefault;
if(this.max==-1){this.max=this.maxDefault;}
this._instances=[];
};
p._get=function(index){
return this._instances[index];
};
p._add=function(instance,interrupt){
if(!this._getSlot(interrupt,instance)){return false;}
this._instances.push(instance);
this.length++;
return true;
};
p._remove=function(instance){
var index=createjs.indexOf(this._instances,instance);
if(index==-1){return false;}
this._instances.splice(index,1);
this.length--;
return true;
};
p._removeAll=function(){
for(var i=this.length-1;i>=0;i--){
this._instances[i].stop();
}
};
p._getSlot=function(interrupt,instance){
var target,replacement;
if(interrupt!=Sound.INTERRUPT_NONE){
replacement=this._get(0);
if(replacement==null){
return true;
}
}
for(var i=0,l=this.max;i<l;i++){
target=this._get(i);
if(target==null){
return true;
}
if(target.playState==Sound.PLAY_FINISHED||
target.playState==Sound.PLAY_INTERRUPTED||
target.playState==Sound.PLAY_FAILED){
replacement=target;
break;
}
if(interrupt==Sound.INTERRUPT_NONE){
continue;
}
if((interrupt==Sound.INTERRUPT_EARLY&&target.getPosition()<replacement.getPosition())||
(interrupt==Sound.INTERRUPT_LATE&&target.getPosition()>replacement.getPosition())){
replacement=target;
}
}
if(replacement!=null){
replacement._interrupt();
this._remove(replacement);
return true;
}
return false;
};
p.toString=function(){
return"[Sound SoundChannel]";
};
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractSoundInstance=function(src,startTime,duration,playbackResource){
this.EventDispatcher_constructor();
this.src=src;
this.uniqueId=-1;
this.playState=null;
this.delayTimeoutId=null;
this._startTime=Math.max(0,startTime||0);
this._volume=1;
if(createjs.definePropertySupported){
Object.defineProperty(this,"volume",{
get:this.getVolume,
set:this.setVolume
});
}
this._pan=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"pan",{
get:this.getPan,
set:this.setPan
});
}
this._duration=Math.max(0,duration||0);
if(createjs.definePropertySupported){
Object.defineProperty(this,"duration",{
get:this.getDuration,
set:this.setDuration
});
}
this._playbackResource=null;
if(createjs.definePropertySupported){
Object.defineProperty(this,"playbackResource",{
get:this.getPlaybackResource,
set:this.setPlaybackResource
});
}
if(playbackResource!==false&&playbackResource!==true){this.setPlaybackResource(playbackResource);}
this._position=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"position",{
get:this.getPosition,
set:this.setPosition
});
}
this._loop=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"loop",{
get:this.getLoop,
set:this.setLoop
});
}
this._muted=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"muted",{
get:this.getMuted,
set:this.setMuted
});
}
this._paused=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"paused",{
get:this.getPaused,
set:this.setPaused
});
}
};
var p=createjs.extend(AbstractSoundInstance,createjs.EventDispatcher);
p.play=function(interrupt,delay,offset,loop,volume,pan){
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
if(interrupt instanceof Object){
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
}
if(offset!=null){this.setPosition(offset)}
if(loop!=null){this.setLoop(loop);}
if(volume!=null){this.setVolume(volume);}
if(pan!=null){this.setPan(pan);}
if(this._paused){this.setPaused(false);}
return;
}
this._cleanUp();
createjs.Sound._playInstance(this,interrupt,delay,offset,loop,volume,pan);
return this;
};
p.pause=function(){
if(this._paused||this.playState!=createjs.Sound.PLAY_SUCCEEDED){return false;}
this.setPaused(true);
return true;
};
p.resume=function(){
if(!this._paused){return false;}
this.setPaused(false);
return true;
};
p.stop=function(){
this._position=0;
this._paused=false;
this._handleStop();
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
return this;
};
p.destroy=function(){
this._cleanUp();
this.src=null;
this.playbackResource=null;
this.removeAllEventListeners();
};
p.toString=function(){
return"[AbstractSoundInstance]";
};
p.getPaused=function(){
return this._paused;
};
p.setPaused=function(value){
if((value!==true&&value!==false)||this._paused==value){return;}
if(value==true&&this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._paused=value;
if(value){
this._pause();
}else{
this._resume();
}
clearTimeout(this.delayTimeoutId);
return this;
};
p.setVolume=function(value){
if(value==this._volume){return this;}
this._volume=Math.max(0,Math.min(1,value));
if(!this._muted){
this._updateVolume();
}
return this;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this.setMuted(value);
};
p.getMute=function(){
return this._muted;
};
p.setMuted=function(value){
if(value!==true&&value!==false){return;}
this._muted=value;
this._updateVolume();
return this;
};
p.getMuted=function(){
return this._muted;
};
p.setPan=function(value){
if(value==this._pan){return this;}
this._pan=Math.max(-1,Math.min(1,value));
this._updatePan();
return this;
};
p.getPan=function(){
return this._pan;
};
p.getPosition=function(){
if(!this._paused&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
return this._calculateCurrentPosition();
}
return this._position;
};
p.setPosition=function(value){
this._position=Math.max(0,value);
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._updatePosition();
}
return this;
};
p.getDuration=function(){
return this._duration;
};
p.setDuration=function(value){
if(value==this._duration){return this;}
this._duration=Math.max(0,value||0);
this._updateDuration();
return this;
};
p.setPlaybackResource=function(value){
this._playbackResource=value;
if(this._duration==0){this._setDurationFromSource();}
return this;
};
p.getPlaybackResource=function(){
return this._playbackResource;
};
p.getLoop=function(){
return this._loop;
};
p.setLoop=function(value){
if(this._playbackResource!=null){
if(this._loop!=0&&value==0){
this._removeLooping(value);
}
if(this._loop==0&&value!=0){
this._addLooping(value);
}
}
this._loop=value;
};
p._sendEvent=function(type){
var event=new createjs.Event(type);
this.dispatchEvent(event);
};
p._cleanUp=function(){
clearTimeout(this.delayTimeoutId);
this._handleCleanUp();
this._paused=false;
createjs.Sound._playFinished(this);
};
p._interrupt=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_INTERRUPTED;
this._sendEvent("interrupted");
};
p._beginPlaying=function(offset,loop,volume,pan){
this.setPosition(offset);
this.setLoop(loop);
this.setVolume(volume);
this.setPan(pan);
if(this._playbackResource!=null&&this._position<this._duration){
this._paused=false;
this._handleSoundReady();
this.playState=createjs.Sound.PLAY_SUCCEEDED;
this._sendEvent("succeeded");
return true;
}else{
this._playFailed();
return false;
}
};
p._playFailed=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_FAILED;
this._sendEvent("failed");
};
p._handleSoundComplete=function(event){
this._position=0;
if(this._loop!=0){
this._loop--;
this._handleLoop();
this._sendEvent("loop");
return;
}
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
this._sendEvent("complete");
};
p._handleSoundReady=function(){
};
p._updateVolume=function(){
};
p._updatePan=function(){
};
p._updateDuration=function(){
};
p._setDurationFromSource=function(){
};
p._calculateCurrentPosition=function(){
};
p._updatePosition=function(){
};
p._removeLooping=function(){
};
p._addLooping=function(){
};
p._pause=function(){
};
p._resume=function(){
};
p._handleStop=function(){
};
p._handleCleanUp=function(){
};
p._handleLoop=function(){
};
createjs.AbstractSoundInstance=createjs.promote(AbstractSoundInstance,"EventDispatcher");
createjs.DefaultSoundInstance=createjs.AbstractSoundInstance;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractPlugin=function(){
this._capabilities=null;
this._loaders={};
this._audioSources={};
this._soundInstances={};
this._loaderClass;
this._soundInstanceClass;
};
var p=AbstractPlugin.prototype;
AbstractPlugin._capabilities=null;
AbstractPlugin.isSupported=function(){
return true;
};
p.register=function(loadItem,instances){
this._audioSources[loadItem.src]=true;
this._soundInstances[loadItem.src]=[];
if(this._loaders[loadItem.src]){return this._loaders[loadItem.src];}
var loader=new this._loaderClass(loadItem);
loader.on("complete",createjs.proxy(this._handlePreloadComplete,this));
this._loaders[loadItem.src]=loader;
return loader;
};
p.preload=function(loader){
loader.on("error",createjs.proxy(this._handlePreloadError,this));
loader.load();
};
p.isPreloadStarted=function(src){
return(this._audioSources[src]!=null);
};
p.isPreloadComplete=function(src){
return(!(this._audioSources[src]==null||this._audioSources[src]==true));
};
p.removeSound=function(src){
if(!this._soundInstances[src]){return;}
for(var i=this._soundInstances[src].length;i--;){
var item=this._soundInstances[src][i];
item.destroy();
}
delete(this._soundInstances[src]);
delete(this._audioSources[src]);
if(this._loaders[src]){this._loaders[src].destroy();}
delete(this._loaders[src]);
};
p.removeAllSounds=function(){
for(var key in this._audioSources){
this.removeSound(key);
}
};
p.create=function(src,startTime,duration){
if(!this.isPreloadStarted(src)){
this.preload(this.register(src));
}
var si=new this._soundInstanceClass(src,startTime,duration,this._audioSources[src]);
this._soundInstances[src].push(si);
return si;
};
p.setVolume=function(value){
this._volume=value;
this._updateVolume();
return true;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this._updateVolume();
return true;
};
p.toString=function(){
return"[AbstractPlugin]";
};
p._handlePreloadComplete=function(event){
var src=event.target.getItem().src;
this._audioSources[src]=event.result;
for(var i=0,l=this._soundInstances[src].length;i<l;i++){
var item=this._soundInstances[src][i];
item.setPlaybackResource(this._audioSources[src]);
}
};
p._handlePreloadError=function(event){
};
p._updateVolume=function(){
};
createjs.AbstractPlugin=AbstractPlugin;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Loader(loadItem){
this.AbstractLoader_constructor(loadItem,true,createjs.AbstractLoader.SOUND);
};
var p=createjs.extend(Loader,createjs.AbstractLoader);
Loader.context=null;
p.toString=function(){
return"[WebAudioLoader]";
};
p._createRequest=function(){
this._request=new createjs.XHRRequest(this._item,false);
this._request.setResponseType("arraybuffer");
};
p._sendComplete=function(event){
Loader.context.decodeAudioData(this._rawResult,
createjs.proxy(this._handleAudioDecoded,this),
createjs.proxy(this._handleError,this));
};
p._handleAudioDecoded=function(decodedAudio){
this._result=decodedAudio;
this.AbstractLoader__sendComplete();
};
createjs.WebAudioLoader=createjs.promote(Loader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this.gainNode=s.context.createGain();
this.panNode=s.context.createPanner();
this.panNode.panningModel=s._panningModel;
this.panNode.connect(this.gainNode);
this.sourceNode=null;
this._soundCompleteTimeout=null;
this._sourceNodeNext=null;
this._playbackStartTime=0;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
};
var p=createjs.extend(WebAudioSoundInstance,createjs.AbstractSoundInstance);
var s=WebAudioSoundInstance;
s.context=null;
s.destinationNode=null;
s._panningModel="equalpower";
p.destroy=function(){
this.AbstractSoundInstance_destroy();
this.panNode.disconnect(0);
this.panNode=null;
this.gainNode.disconnect(0);
this.gainNode=null;
};
p.toString=function(){
return"[WebAudioSoundInstance]";
};
p._updatePan=function(){
this.panNode.setPosition(this._pan,0,-0.5);
};
p._removeLooping=function(){
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
};
p._addLooping=function(){
if(this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
};
p._setDurationFromSource=function(){
this._duration=this.playbackResource.duration*1000;
};
p._handleCleanUp=function(){
if(this.sourceNode&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
}
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
this._playbackStartTime=0;
};
p._cleanUpAudioNode=function(audioNode){
if(audioNode){
audioNode.stop(0);
audioNode.disconnect(0);
audioNode=null;
}
return audioNode;
};
p._handleSoundReady=function(event){
this.gainNode.connect(s.destinationNode);
var dur=this._duration*0.001;
var pos=this._position*0.001;
this.sourceNode=this._createAndPlayAudioNode((s.context.currentTime-dur),pos);
this._playbackStartTime=this.sourceNode.startTime-pos;
this._soundCompleteTimeout=setTimeout(this._endedHandler,(dur-pos)*1000);
if(this._loop!=0){
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
}
};
p._createAndPlayAudioNode=function(startTime,offset){
var audioNode=s.context.createBufferSource();
audioNode.buffer=this.playbackResource;
audioNode.connect(this.panNode);
var dur=this._duration*0.001;
audioNode.startTime=startTime+dur;
audioNode.start(audioNode.startTime,offset+(this._startTime*0.001),dur-offset);
return audioNode;
};
p._pause=function(){
this._position=(s.context.currentTime-this._playbackStartTime)*1000;
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
};
p._resume=function(){
this._handleSoundReady();
};
p._updateVolume=function(){
var newVolume=this._muted?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
p._calculateCurrentPosition=function(){
return((s.context.currentTime-this._playbackStartTime)*1000);
};
p._updatePosition=function(){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
clearTimeout(this._soundCompleteTimeout);
if(!this._paused){this._handleSoundReady();}
};
p._handleLoop=function(){
this._cleanUpAudioNode(this.sourceNode);
this.sourceNode=this._sourceNodeNext;
this._playbackStartTime=this.sourceNode.startTime;
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
this._soundCompleteTimeout=setTimeout(this._endedHandler,this._duration);
};
p._updateDuration=function(){
this._pause();
this._resume();
};
createjs.WebAudioSoundInstance=createjs.promote(WebAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioPlugin(){
this.AbstractPlugin_constructor();
this._panningModel=s._panningModel;;
this._volume=1;
this.context=s.context;
this.dynamicsCompressorNode=this.context.createDynamicsCompressor();
this.dynamicsCompressorNode.connect(this.context.destination);
this.gainNode=this.context.createGain();
this.gainNode.connect(this.dynamicsCompressorNode);
createjs.WebAudioSoundInstance.destinationNode=this.gainNode;
this._capabilities=s._capabilities;
this._loaderClass=createjs.WebAudioLoader;
this._soundInstanceClass=createjs.WebAudioSoundInstance;
this._addPropsToClasses();
}
var p=createjs.extend(WebAudioPlugin,createjs.AbstractPlugin);
var s=WebAudioPlugin;
s._capabilities=null;
s._panningModel="equalpower";
s.context=null;
s.isSupported=function(){
var isMobilePhoneGap=createjs.BrowserDetect.isIOS||createjs.BrowserDetect.isAndroid||createjs.BrowserDetect.isBlackberry;
if(location.protocol=="file:"&&!isMobilePhoneGap&&!this._isFileXHRSupported()){return false;}
s._generateCapabilities();
if(s.context==null){return false;}
return true;
};
s.playEmptySound=function(){
var source=s.context.createBufferSource();
source.buffer=s.context.createBuffer(1,1,22050);
source.connect(s.context.destination);
source.start(0,0,0);
};
s._isFileXHRSupported=function(){
var supported=true;
var xhr=new XMLHttpRequest();
try{
xhr.open("GET","WebAudioPluginTest.fail",false);
}catch(error){
supported=false;
return supported;
}
xhr.onerror=function(){supported=false;};
xhr.onload=function(){supported=this.status==404||(this.status==200||(this.status==0&&this.response!=""));};
try{
xhr.send();
}catch(error){
supported=false;
}
return supported;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
if(s.context==null){
if(window.AudioContext){
s.context=new AudioContext();
}else if(window.webkitAudioContext){
s.context=new webkitAudioContext();
}else{
return null;
}
}
s._compatibilitySetUp();
s.playEmptySound();
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
if(s.context.destination.numberOfChannels<2){
s._capabilities.panning=false;
}
};
s._compatibilitySetUp=function(){
s._panningModel="equalpower";
if(s.context.createGain){return;}
s.context.createGain=s.context.createGainNode;
var audioNode=s.context.createBufferSource();
audioNode.__proto__.start=audioNode.__proto__.noteGrainOn;
audioNode.__proto__.stop=audioNode.__proto__.noteOff;
s._panningModel=0;
};
p.toString=function(){
return"[WebAudioPlugin]";
};
p._addPropsToClasses=function(){
var c=this._soundInstanceClass;
c.context=this.context;
c.destinationNode=this.gainNode;
c._panningModel=this._panningModel;
this._loaderClass.context=this.context;
};
p._updateVolume=function(){
var newVolume=createjs.Sound._masterMute?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
createjs.WebAudioPlugin=createjs.promote(WebAudioPlugin,"AbstractPlugin");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagPool(src){
this.src=src;
this.length=0;
this.available=0;
this.tags=[];
this.duration=0;
};
var p=TagPool.prototype;
p.constructor=TagPool;
var s=TagPool;
s.tags={};
s.get=function(src){
var channel=s.tags[src];
if(channel==null){
channel=s.tags[src]=new TagPool(src);
}
return channel;
};
s.remove=function(src){
var channel=s.tags[src];
if(channel==null){return false;}
channel.removeAll();
delete(s.tags[src]);
return true;
};
s.getInstance=function(src){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.get();
};
s.setInstance=function(src,tag){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.set(tag);
};
s.getDuration=function(src){
var channel=s.tags[src];
if(channel==null){return 0;}
return channel.getDuration();
};
p.add=function(tag){
this.tags.push(tag);
this.length++;
this.available++;
};
p.removeAll=function(){
var tag;
while(this.length--){
tag=this.tags[this.length];
if(tag.parentNode){
tag.parentNode.removeChild(tag);
}
delete(this.tags[this.length]);
}
this.src=null;
this.tags.length=0;
};
p.get=function(){
if(this.tags.length==0){return null;}
this.available=this.tags.length;
var tag=this.tags.pop();
if(tag.parentNode==null){document.body.appendChild(tag);}
return tag;
};
p.set=function(tag){
var index=createjs.indexOf(this.tags,tag);
if(index==-1){this.tags.push(tag);}
this.available=this.tags.length;
};
p.getDuration=function(){
if(!this.duration){this.duration=this.tags[this.tags.length-1].duration*1000;}
return this.duration;
};
p.toString=function(){
return"[HTMLAudioTagPool]";
};
createjs.HTMLAudioTagPool=TagPool;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this._audioSpriteStopTime=null;
this._delayTimeoutId=null;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
this._readyHandler=createjs.proxy(this._handleTagReady,this);
this._stalledHandler=createjs.proxy(this.playFailed,this);
this._audioSpriteEndHandler=createjs.proxy(this._handleAudioSpriteLoop,this);
this._loopHandler=createjs.proxy(this._handleSoundComplete,this);
if(duration){
this._audioSpriteStopTime=(startTime+duration)*0.001;
}else{
this._duration=createjs.HTMLAudioTagPool.getDuration(this.src);
}
}
var p=createjs.extend(HTMLAudioSoundInstance,createjs.AbstractSoundInstance);
p.setMasterVolume=function(value){
this._updateVolume();
};
p.setMasterMute=function(isMuted){
this._updateVolume();
};
p.toString=function(){
return"[HTMLAudioSoundInstance]";
};
p._removeLooping=function(){
if(this._playbackResource==null){return;}
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._addLooping=function(){
if(this._playbackResource==null||this._audioSpriteStopTime){return;}
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
};
p._handleCleanUp=function(){
var tag=this._playbackResource;
if(tag!=null){
tag.pause();
tag.loop=false;
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
try{
tag.currentTime=this._startTime;
}catch(e){
}
createjs.HTMLAudioTagPool.setInstance(this.src,tag);
this._playbackResource=null;
}
};
p._beginPlaying=function(offset,loop,volume,pan){
this._playbackResource=createjs.HTMLAudioTagPool.getInstance(this.src);
return this.AbstractSoundInstance__beginPlaying(offset,loop,volume,pan);
};
p._handleSoundReady=function(event){
if(this._playbackResource.readyState!==4){
var tag=this._playbackResource;
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.preload="auto";
tag.load();
return;
}
this._updateVolume();
this._playbackResource.currentTime=(this._startTime+this._position)*0.001;
if(this._audioSpriteStopTime){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}else{
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
if(this._loop!=0){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
}
}
this._playbackResource.play();
};
p._handleTagReady=function(event){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
this._handleSoundReady();
};
p._pause=function(){
this._playbackResource.pause();
};
p._resume=function(){
this._playbackResource.play();
};
p._updateVolume=function(){
if(this._playbackResource!=null){
var newVolume=(this._muted||createjs.Sound._masterMute)?0:this._volume*createjs.Sound._masterVolume;
if(newVolume!=this._playbackResource.volume){this._playbackResource.volume=newVolume;}
}
};
p._calculateCurrentPosition=function(){
return(this._playbackResource.currentTime*1000)-this._startTime;
};
p._updatePosition=function(){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
try{
this._playbackResource.currentTime=(this._position+this._startTime)*0.001;
}catch(error){
this._handleSetPositionSeek(null);
}
};
p._handleSetPositionSeek=function(event){
if(this._playbackResource==null){return;}
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._handleAudioSpriteLoop=function(event){
if(this._playbackResource.currentTime<=this._audioSpriteStopTime){return;}
this._playbackResource.pause();
if(this._loop==0){
this._handleSoundComplete(null);
}else{
this._position=0;
this._loop--;
this._playbackResource.currentTime=this._startTime*0.001;
if(!this._paused){this._playbackResource.play();}
this._sendEvent("loop");
}
};
p._handleLoop=function(event){
if(this._loop==0){
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
}
};
p._updateDuration=function(){
this._audioSpriteStopTime=(startTime+duration)*0.001;
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}
};
createjs.HTMLAudioSoundInstance=createjs.promote(HTMLAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioPlugin(){
this.AbstractPlugin_constructor();
this.defaultNumChannels=2;
this._capabilities=s._capabilities;
this._loaderClass=createjs.SoundLoader;
this._soundInstanceClass=createjs.HTMLAudioSoundInstance;
}
var p=createjs.extend(HTMLAudioPlugin,createjs.AbstractPlugin);
var s=HTMLAudioPlugin;
s.MAX_INSTANCES=30;
s._AUDIO_READY="canplaythrough";
s._AUDIO_ENDED="ended";
s._AUDIO_SEEKED="seeked";
s._AUDIO_STALLED="stalled";
s._TIME_UPDATE="timeupdate";
s._capabilities=null;
s.enableIOS=false;
s.isSupported=function(){
s._generateCapabilities();
if(s._capabilities==null){return false;}
return true;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
};
p.register=function(loadItem,instances){
var channel=createjs.HTMLAudioTagPool.get(loadItem.src);
var tag=null;
for(var i=0;i<instances;i++){
tag=this._createTag(loadItem.src);
channel.add(tag);
}
var loader=this.AbstractPlugin_register(loadItem,instances);
loader.setTag(tag);
return loader;
};
p.removeSound=function(src){
this.AbstractPlugin_removeSound(src);
createjs.HTMLAudioTagPool.remove(src);
};
p.create=function(src,startTime,duration){
var si=this.AbstractPlugin_create(src,startTime,duration);
si.setPlaybackResource(null);
return si;
};
p.toString=function(){
return"[HTMLAudioPlugin]";
};
p.setVolume=p.getVolume=p.setMute=null;
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.HTMLAudioPlugin=createjs.promote(HTMLAudioPlugin,"AbstractPlugin");
}());
GodStep.FPS=function(soul,color,alpha){
GodStep.Frame.call(this,'FPS',soul.W,soul.H);
this.addChild(this.text=new GodStep.Text('0',55*this.startS,'Arial','left',color||0x000000));
this.startTime=Date.now();
this.addString((soul.CANVAS)?'C':'W');
this.alpha=alpha;
this.soul=soul;
this.prevTime=this.startTime;
this.msMin=Infinity;
this.msMax=0;
this.fpsMin=Infinity;
this.fpsMax=0;
this.frames=0;
this.lastValue=0;
if(alpha==0)visible=false;
};
extend(GodStep.FPS,GodStep.Frame);
pro.addString=function(v){
this.plusString=v;
};
pro.end=function(){
var time=Date.now();
var ms=time-this.startTime;
this.msMin=Math.min(this.msMin,ms);
this.msMax=Math.max(this.msMax,ms);
if(time>this.prevTime+100){
var fps=Math.round((this.frames*1000)/(time-this.prevTime));
this.lastValue+=(fps-this.lastValue)*.3;
this.fpsMin=Math.min(this.fpsMin,this.lastValue);
this.fpsMax=Math.max(this.fpsMax,this.lastValue);
this.text.setText(Math.round(this.lastValue)+" "+this.plusString);
this.prevTime=time;
this.frames=0;
}
this.frames++;
};
pro.begin=function(){
this.startTime=Date.now();
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=1;
this.text.updateText();
this.y=this.soul.H-this.text.height+(this.soul.OH-this.soul.H)+this.soul.H*.015*this.soul.startS;
this.x=this.soul.W*.02*this.soul.startS;
}
});
GodStep.Text=function(t,size,font,align,color){
this.font=font||'Arial';
this.size=size||15;
this.align=(align||"center");
PIXI.Text.call(this,t,{font:this.size+"px "+this.font,align:this.align,fill:(color)?('#'+color.toString(16)):'#000000'});
};
extend(GodStep.Text,PIXI.Text);
pro.place=function(x,y){
this.x=x;
this.y=y;
};
pro.centerX=function(w,y){
this.y=y;
this.x=w/2-this.width/2;
};
pro.setColor=function(color){
this.style.fill='#'+color.toString(16);
};
pro.setFont=function(font){
this.font=font;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
pro.setSize=function(size){
this.size=size;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
GodStep.LFrame=function(soul,name){
GodStep.Frame.call(this,name||('LFrame '+GodStep.Frame.frameCount++),soul.SW,soul.SH);
this.OH=soul.OH;
this.OW=soul.OW;
this.s=soul.startS;
this.soul=soul;
this.visible=false;
};extend(GodStep.LFrame,GodStep.Frame);
pro.init=function(){
this.visible=true;
};
pro.initLiquid=function(w,h,d){
this.isLiquid=true;
if(!GodStep.lqobjects){
GodStep.lqobjects=[];
GodStep.lqobjects[0]=[];
}
if(!GodStep.lqobjects[this.name]){
GodStep.lqobjects[0].push(this);
this.isTemplate=true;
this.addChild(this.view=new PIXI.Sprite(this.source=new PIXI.RenderTexture(w,h)));
GodStep.lqobjects[this.name]=this;
this.template=this;
this.brothers=[];
this.passes=[new LQ.Pass(LQ.PASS_LOOP,[1],[new LQ.Pass(LQ.PASS_FILL,[0,0]),new LQ.Pass(LQ.PASS_CIRCLE,[0,0]),new LQ.Pass(LQ.PASS_DRAW,[0])])];
this.states=[new GodStep.State()];
this.colors=[];
this.points=[];
this.params=[];
}else{
GodStep.lqobjects[this.name].brothers.push(this);
this.template=GodStep.lqobjects[this.name];
this.addChild(this.view=new PIXI.Sprite(this.source=this.template.source));
}
this.view.anchor=new PIXI.Point(.5,.5);
this.w=w;
this.h=h;
this.d=d||0;
};
pro.applyToState=function(s){
};
pro.applyState=function(s){
var cur=0;
var i;
var points=this.points;
var colors=this.colors;
var params=this.params;
var values=s.values;
var w=this.w;
var h=this.h;
var d=this.d;
for(i=0;i<points.length;i++){
var p=points[i];
p.x=w*values[cur];
p.y=h*values[cur+1];
p.z=d*values[cur+2];
cur+=3;
}
for(i=0;i<colors.length;i++){
var c=colors[i];
c.r=parseInt(255*values[cur]);
c.g=parseInt(255*values[cur+1]);
c.b=parseInt(255*values[cur+2]);
c.calcHex();
cur+=3;
}
for(i=0;i<params.length;i++){
params[i]=values[cur];
cur++;
}
};
pro.pushParam=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,0,0);
}
this.params.push(0);
};
pro.pushColor=function(c){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
if(c){
values.splice(cur,0,c.r/255);
values.splice(cur+1,c.g/255);
values.splice(cur+2,0,c.b/255);
}else{
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
}
if(c){
this.colors.push(c);
}else{
this.colors.push(new GodStep.Color());
}
};
pro.removeColor=function(c){
var id=this.colors.indexOf(c);
var states=this.states;
var sl=states.length;
var values;
var cur=this.points.length*3;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur+id*3,3);
}
this.colors.splice(id,1);
};
pro.removeParam=function(){
if(this.params.length>0){
this.params.splice(this.params.length-1,1);
}
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length-1;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,1);
}
};
pro.pushPoint=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
this.points.push(new GodStep.Point());
};
pro.pushState=function(s){
if(s){
this.states.push(s);
}
else{
this.states.push(this.states[0].clone());
}
};
pro.passAll=function(){
LQ.Liquid.passAll(this);
};
pro.getAllValues=function(){
var states=this.states;
var sl=states.length;
var values=[];
for(var i=0;i<sl;i++){
values=values.concat(states[i].values);
}
return values;
};
pro.setData=function(d){
if(this.isTemplate){
this.name=d.name;
this.passes=[];
for(var i=0;i<d.passes.length;i++){
this.passes.push(LQ.Pass.parse(d.passes[i]));
}
this.states=[];
this.colors=[];
this.params=[];
this.points=[];
var state;
var values=d.values;
var sl=values.length/d.sc;
for(var id=0;id<d.dc;id++){
this.points.push(new GodStep.Point());
}
for(var ic=0;ic<d.cc;ic++){
this.colors.push(new GodStep.Color());
}
for(var p=0;p<d.pc;p++){
this.params.push(0);
}
for(var s=0;s<d.sc;s++){
this.states.push(state=new GodStep.State());
state.pushValues(values,sl);
values.splice(0,sl);
}
}
};
pro.getData=function(){
var d={};
d.name=this.name;
d.passes=[];
d.values=this.getAllValues();
d.sc=this.states.length;
d.cc=this.colors.length;
d.dc=this.points.length;
d.pc=this.params.length;
for(var i=0;i<this.passes.length;i++){
var passData=this.passes[i].getData();
d.passes.push(passData);
}
return d;
};
GodStep.LocalStorage=function(){
GodStep.LocalStorage.instance=this;
try{
if('localStorage'in window&&window['localStorage']!==null){
this.storage=window['localStorage'];
window.addEventListener("storage",this.h_storage,false);
this.isAvailable=true;
}
}catch(e){
this.isAvailable=false;
}
};
extend(GodStep.LocalStorage,Object);
pro.getData=function(slot){
if(!this.isAvailable){
return null;
}
var data=this.storage.getItem(slot||"data");
if(data!=null)return JSON.parse(data);
else{
trace('no data');
return null;
}
};
pro.setData=function(data,slot){
if(!this.isAvailable)return;
var d=JSON.stringify(data);
trace('local storage ['+(slot||'data')+']');
trace(d);
try{
this.storage.setItem(slot||"data",d);
}catch(e){
trace('LOCAL STORAGE ERROR');
}
};
GodStep.Clear=function(slot){
GodStep.LocalStorage.instance.setData(null,slot);
};
GodStep.SaveLocal=function(data,slot){
GodStep.LocalStorage.instance.setData(data,slot);
};
GodStep.LoadText=function(text){
return JSON.parse(text);
};
GodStep.LoadLocal=function(slot){
return GodStep.LocalStorage.instance.getData(slot);
};
pro.h_storage=function(e){
trace('storage'+e);
};
GodStep.Keyboard=function(soul){
this.soul=soul;
if(!GodStep.Keyboard.instance){
GodStep.Keyboard.instance=this;
PIXI.EventTarget.call(this);
document.addEventListener('keydown',this.h_keydown);
document.addEventListener('keyup',this.h_keyup);
this.keys=[];
GodStep.KEY_CONSOLE=192;
GodStep.KEY_1=49;
GodStep.KEY_2=50;
GodStep.KEY_3=51;
GodStep.KEY_4=52;
GodStep.KEY_SHIFT=16;
GodStep.KEY_CTRL=17;
GodStep.KEY_ALT=18;
GodStep.KEY_F3=114;
GodStep.KEY_W=87;
GodStep.KEY_A=65;
GodStep.KEY_S=83;
GodStep.KEY_D=68;
GodStep.KEY_LEFT=37;
GodStep.KEY_RIGHT=39;
GodStep.KEY_TOP=38;
GodStep.KEY_BOT=40;
}
};
pro=GodStep.Keyboard.prototype=Object.create(Object.prototype);
pro.h_keyup=function(e){
var inst=GodStep.Keyboard.instance;
inst.keys[e.keyCode]=0;
GodStep.dispatch(inst,GodStep.KEYUP,e.keyCode);
};
pro.h_keydown=function(e){
var inst=GodStep.Keyboard.instance;
if(!inst.keys[e.keyCode]){
inst.keys[e.keyCode]=1;
dispatch(inst,GodStep.KEYPRESS,e.keyCode);
}
else{
inst.keys[e.keyCode]++;
GodStep.dispatch(inst,GodStep.KEYDOWN,e.keyCode);
}
};
pro.focus=function(){
trace('canvas focused');
this.soul.soulview.setAttribute('tabindex','0');
this.soul.soulview.focus();
};
GodStep.IsKeyPressed=function(key){
var old=GodStep.Keyboard.instance.keys[key];
if(old==1){
GodStep.Keyboard.instance.keys[key]=2;
}
return old==1;
};
Games.Cell=function(xi,yi,w,h){
this.xi=xi;
this.yi=yi;
this.guests=[];
GodStep.Frame.call(this,'Cell['+xi+", "+yi+']',w,h);
GodStep.IDownUp.call(this,w,h);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
Games.CELL_UP='cellup';
Games.CELL_DOWN='celldown';
Games.CELL_CLICK='cellclick';
extend(Games.Cell,GodStep.Frame);
pro.h_mouse=function(e){
var t=e.target;
switch(e.type){
case GodStep.FRAME_UP:
dispatch(t,Games.CELL_UP);
break;
case GodStep.FRAME_DOWN:
dispatch(t,Games.CELL_DOWN);
break;
}
};
Games.CellField=function(xc,yc,w,h,cellClass,startS){
GodStep.Frame.call(this,'CellField',w,h);
GodStep.IDownUp.call(this,w,h);
this.startS=startS;
this.cellCountX=xc;
this.cellCountY=yc;
this.cellClass=cellClass;
this.addChild(this.cellContainer=new PIXI.DisplayObjectContainer());
this.addChild(this.objectContainer=new PIXI.DisplayObjectContainer());
this.initField();
};extend(Games.CellField,GodStep.Frame);
pro.initField=function(countX,countY,cW,cH){
var row;
this.cells=[];
this.cellsXY=[];
var cellW=this.cellW=cW||this.W/this.cellCountX;
var cellH=this.cellH=cH||this.H/this.cellCountY;
this.cellCountX=countX||this.cellCountX;
this.cellCountY=countY||this.cellCountY;
var maxW=0,maxH=0;
for(var i=0;i<this.cellCountY;i++){
this.cellsXY.push(row=[]);
for(var j=0;j<this.cellCountX;j++){
if(this.cellClass){
var cell=new this.cellClass(j,i,cellW,cellH,this.startS);
this.addCell(cell,cellW,cellH);
maxW=Math.max(cell.x,maxW);
maxH=Math.max(cell.y,maxH);
addEvent(cell,Games.CELL_UP,this.h_cells);
addEvent(cell,Games.CELL_DOWN,this.h_cells);
}
}
}
};
pro.addCell=function(cell,cellW,cellH){
this.cells.push(cell);this.cellsXY[cell.yi][cell.xi]=cell;
this.addFrame(cell,this.cellContainer);
cell.x=cell.xi*cellW;
cell.y=cell.yi*cellH;
};
pro.getCell=function(xi,yi){
return this.cells[xi+yi*this.cellCountX];
};
pro.h_cells=function(e){
var t=e.target;
var p=t.parent.parent;
switch(e.type){
case Games.CELL_DOWN:
dispatch(p,Games.CELL_DOWN,t);
break;
case Games.CELL_UP:
dispatch(p,Games.CELL_UP,t);
break;
}
};
Games.Transmission=function(soul,speed,color){
this.soul=soul;
this.color=color||GodStep.COLOR_STAGE;
GodStep.Frame.call(this,'Transmission',soul.SW,soul.SH);
this.startS=this.soul.startS;
this.create();
this.timerCache=-1;
this.speed=speed||0.1;
this.cacheAsBitmap=true;
this.visible=false;
this.graphics.scale.y=this.graphics.oS=this.soul.SH/this.graphics.height;
};
extend(Games.Transmission,GodStep.Frame);
pro.create=function(){
this.createGraphics();
this.rect(this.W,this.H,this.color,1,0,0);
};
pro.start=function(screenArr,outScreen){
if(!this.isStarted){
this.screens=screenArr;
this.outScreen=outScreen;
this.isStarted=true;
this.isGoesUp=true;
this.alpha=0;
this.visible=true;
}
};
pro.update=function(){
if(this.timerCache--==0){
this.timerCache=-1;
var vis=this.visible;
var a=this.alpha;
this.cacheAsBitmap=false;
this.visible=true;
this.alpha=1;
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
}
if(this.isStarted){
if(this.isGoesUp){
this.alpha+=this.speed;
if(this.alpha>1){
this.alpha=1;
this.isGoesUp=false;
if(this.outScreen.isOnlyOneView){
this.outScreen.destrukt();
}
this.outScreen.visible=false;
for(var s in this.screens){
this.screens[s].init();
}
}
}else{
this.alpha-=this.speed;
if(this.alpha<=0){
this.alpha=0;
this.visible=false;
this.isStarted=false;
}
}
}
};
pro.reskin=function(c){
this.cacheAsBitmap=false;
var vis=this.visible;
this.visible=true;
var a=this.alpha;
this.alpha=1;
this.graphics.clear();
this.rect(this.W,this.H,c,1,0,0);
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.cacheAsBitmap=false;
this.timerCache=25;
this.graphics.y=(this.FULLRESIZE)?0:-(this.soul.OH-this.soul.H)*.5/value;
this.graphics.scale.y=this.graphics.oS*this.soul.OH/this.soul.H;
this.graphics.scale.x=this.graphics.oS*(this.soul.FULLRESIZE?(this.soul.OW/this.soul.W):1);
}
});
Games.TextButton=function(text,size,color,px,py){
GodStep.Frame.call(this,null,0,0);
this.color=color;
this.addChild(this.back=new PIXI.Graphics());
this.addChild(this.text=new GodStep.Text(text,size*2,'Arial','left',0xffffff));
this.text.x=-this.text.width/2;
this.text.y=-this.text.height/2;
this.W=this.text.width*1.5;
this.H=this.text.height*1.5;
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.isSelected=false;
this.redraw();
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.TextButton,GodStep.Frame);
pro.destroy=function(){
this.removeChild(this.back);
this.removeChild(this.text);
return this;
};
pro.redraw=function(){
var g=this.back;
g.clear();
g.beginFill(this.color,1);
if(this.isSelected){
g.lineStyle(2,0xffffff,1);
}
g.drawRect(-this.W/2,-this.H/2,this.W,this.H);
g.endFill();
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
this.Scale=.9;
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,Games.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=.9;
}
break;
}
};
Object.defineProperty(pro,'Selected',{
get:function(){
return this.isSelected;
},
set:function(value){
this.isSelected=value;
this.redraw();
}
});
Games.ImgButton=function(img,parent,scaleS,px,py){
var tex=GodStep.textures[img];
var startS=scaleS;
GodStep.Frame.call(this,null,tex.width*startS,tex.height*startS);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS;
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.isCheched=false;
this.downScale=.9;
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.ImgButton,GodStep.Frame);
Games.ImgButton.CLICK='clickImg';
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(!this.isCheched){
this.Scale=this.downScale;
}
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,Games.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=this.downScale;
}
break;
}
};
M3.Assets=function(soul){
GodStep.DONT_RESIZE=['Font2'];
GodStep.Preloader.call(this,soul);
this.isOnlyOneView=true;
this.fontLoaderClass=M3.FontLoader;
};
extend(M3.Assets,GodStep.Preloader);
pro.load=function(){
this.addChild(this.back=GodStep.Image.fromImage(M3.IMAGE_PATH+'back_fundemic1.jpg',this.h_preload));
this.addChild(this.logo=GodStep.Image.fromImage(M3.IMAGE_PATH+'fundemic_logo.png',this.h_preload));
this.addChild(this.loading=GodStep.Image.fromImage(M3.IMAGE_PATH+'loading.png',this.h_preload));
var countLoaded=0;
if(this.back.texture.baseTexture.hasLoaded){
this.back.Scale=this.startS;
this.back.anchor=new PIXI.Point(0.5,0.5);
this.back.place(this.W/2,this.H*.5);
this.back.scale.y=this.soul.OH/this.soul.H*this.startS;
this.back.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.logo.texture.baseTexture.hasLoaded){
this.logo.Scale=this.startS;
this.logo.anchor=new PIXI.Point(0.5,0.5);
this.logo.place(this.W/2,this.H*.3);
this.logo.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.loading.texture.baseTexture.hasLoaded){
this.loading.Scale=this.startS;
this.loading.anchor=new PIXI.Point(0.5,0.5);
this.loading.place(this.W/2,this.H*.7);
this.loading.texture.baseTexture.isLoader=true;
if(countLoaded==2){
this.init();
}
}
};
pro.init=function(){
var pngs=['block','cell','dirt','blue','yellow','red','purple','green','cristal','delete','bonusVert','bonusGor',
'Font2','back_menu','b_more','b_play','b_options','logo','field_button','b_more','sheriff','simbol','pers_back','pers_front','play_shadow','b_shadow',
'back_o','b_back','tutorial_off','tutorial_on','pers_o','off','on','icon_music','icon_sound',
'l_shadow','back_l','lock','unlock','pers_l','slider_1','slider_2','score','move','field_game',
'back_1','back_2','back_3','sq1_2','sq3_2','sq3_1','sq2_2','sq1_1','sq2_1','e_1','e_2','e_3','egg','o_1','b_pause',
'1_1mud_1','1_2mud_1','1_3mud_1','2_1mud_1','2_2mud_1','2_3mud_1','1mud_2','1mud_3','1mud_4','2mud_2','2mud_3','2mud_4','3mud_2','3mud_3','3mud_4',
'star_game','i_1_1','i_1_2','i_1_3','i_2_1','b_rplay','field_record','field','pers_r','back_r','star_shadow','star2',
'back_t1','back_t2','back_t3','pers_start_2','pers_start_1','pers_start_3','field_tutorial','bubble','star','icon_2_1','icon_1_2','icon_1_3','icon_1_1','b_shadow_p',
'back_end','b_menu','b_next','b_replay','pers_e_3','pers_e_2','field_end','e_shadow','b_back_p','b_replay_p','b_menu_p','icon_sound_p','icon_music_p','pers_p_1','pers_p_2',
'field_pause_2','field_pause','tutorial_sheriff','frame_tutorial','arm_1','arm_2','back_pause','off_p','on_p','pers_1_end_fail','pers_2_end_fail','win_1','win_2','field_win',
'win_p','fail_p','b_end_fail','back_end_fail'
];
var i,j;
for(i=1;i<4;i++){
pngs.push(i+'_new');
pngs.push('effect_'+i);
pngs.push('f_'+i);
if(i<3){
for(j=1;j<7;j++){
pngs.push('bonus_'+i+'_'+j);
}
}
}
for(i=1;i<6;i++){
pngs.push(i+'p_1');
pngs.push(i+'p_2');
pngs.push(i+'p_3');
pngs.push(i+'p_4');
pngs.push(i+'_1');
pngs.push(i+'_2');
pngs.push(i+'_3');
pngs.push(i+'d1');
pngs.push(i+'d2');
pngs.push(i+'d3');
pngs.push(i+'d4');
pngs.push(i+'d5');
pngs.push(i+'a1');
pngs.push(i+'a2');
pngs.push(i+'a3');
pngs.push(i+'a4');
pngs.push(i+'a5');
}
GodStep.Preloader.prototype.loadAll.call(this,
M3.IMAGE_PATH,pngs,[],
M3.SOUND_PATH,['button','bamboo','bonus_appear','bonus_row','bonus_turn','crystal','dirt','loss','match','select','start','theme','victory'],['Font2.fnt']);
};
pro.h_preload=function(e){
var img=this.image;
var p=img.parent;
img.Scale=p.startS;
img.anchor=new PIXI.Point(0.5,0.5);
p.preloadState++;
switch(img){
case p.back:
p.back.scale.y=p.soul.OH/p.soul.H*p.startS;
p.back.place(p.W/2,p.H*.5);
p.back.texture.baseTexture.isLoader=true;
break;
case p.logo:
p.logo.place(p.W/2,p.H*.3);
p.logo.texture.baseTexture.isLoader=true;
break;
case p.loading:
p.loading.place(p.W/2,p.H*.7);
p.loading.texture.baseTexture.isLoader=true;
break;
}
if(p.preloadState==2){
p.init();
}
};
M3.StartMenu=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'StartMenu',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.isFirstTime=true;
this.addChild(this.back=new M3.Background(this,'back_menu'));
this.addChild(this.simbol=new M3.Img('simbol',S,0,0,new PIXI.Point(.5,0)));
this.addChild(this.pers1=new M3.Img('pers_front',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.pers2=new M3.Img('pers_back',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.pers3=new M3.Img('sheriff',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.footer=new M3.Img('field_button',S,0,0,new PIXI.Point(.5,1)));
this.addChild(this.logo=new M3.Img('logo',S,0,0,new PIXI.Point(.5,0)));
this.addChild(this.b_play=new M3.ImgButton('b_play','play_shadow',1.1,this,S,this.W*.5,this.H*.6,null,null,null,null));
this.addChild(this.b_more=new M3.ImgButton('b_more','b_shadow',1.1,this,S,this.W*.2,this.H*.7,null,null,null,null));
this.addChild(this.b_settings=new M3.ImgButton('b_options','b_shadow',1.1,this,S,this.W*.8,this.H*.7,null,null,null,null));
this.addChild(this.b_dev=new Games.TextButton('dev',33*S,0xfa66466,soul.W*.9,soul.H*.05));
addEvent(this.b_dev,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_settings,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_more,Games.ImgButton.CLICK,this.h_buttons);
this.visible=false;
this.b_dev.visible=false;
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
extend(M3.StartMenu,GodStep.Frame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
this.soul.showLogo(true);
if(this.isFirstTime){
this.isFirstTime=false;
GodStep.playSound('theme2',null,M3.MUSIC);
}
this.visible=true;
};
pro.h_mouse=function(e){
var t=e.content.target;
switch(e.type){
case GodStep.FRAME_UP:
break;
case GodStep.FRAME_DOWN:
t.soul.keyboard.focus();
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_dev:
GodStep.playSound('button',0,M3.SOUND);
M3.DEVMODE=true;
s.screenTo([s.levelselect],p);
break;
case p.b_settings:
p.soul.showLogo(false);
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.settings],p);
break;
case p.b_more:
if(M3.SPIL_API){
var link=M3.SPIL_API.Branding.getLink('more_games');
link.action.call();
}
break;
case p.b_play:
p.soul.showLogo(false);
GodStep.playSound('button',0,M3.SOUND);
M3.DEVMODE=false;
s.screenTo([s.levelselect],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var sh=this.soul.H;
var osh=this.soul.OH;
var sw=this.soul.W;
var dy=osh-sh;
this.scale.x=this.scale.y=value;
this.footer.y=(osh-dy/2)/value;
this.pers1.y=this.footer.y-sh*.33/value;
this.pers2.y=this.footer.y-sh*.54/value;
this.pers3.y=this.footer.y-sh*.45/value;
this.pers1.x=sw*.165/value;
this.pers2.x=sw*.38/value;
this.pers3.x=sw*.75/value;
this.logo.y=(-dy/2+sh*.02)/value;
this.logo.x=sw*.5/value;
this.simbol.y=(-dy/2+sh*.02)/value;
this.simbol.x=this.footer.x=sw*.5/value;
this.b_play.y=this.b_more.y=this.b_settings.y=(dy/2+sh*.8)/value;
this.b_more.y=this.b_settings.y+=sh*.063/value;
this.back.rescale(value);
}
});
M3.Transmission=function(soul){
this.soul=soul;
Games.Transmission.call(this,soul,.09,0xffff55);
};
extend(M3.Transmission,Games.Transmission);
M3.Img=function(name,scale,px,py,anchor){
GodStep.Image.call(this,GodStep.textures[name]);
this.Scale=scale/GodStep.IMAGE_RESOLUTION*M3.SCALE;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(M3.Img,GodStep.Image);
pro.setTexture=function(name){
PIXI.Sprite.prototype.setTexture.call(this,GodStep.textures[name]);
};
GodStep.Slider=function(w,h,s,type,min,max,val,n){
GodStep.Frame.call(this,'Slider');
GodStep.IOverOut.call(this);
GodStep.IDownUp.call(this);
this.CW=20;
this.min=min||0;
this.max=max||1;
this.delta=this.max-this.min;
this.W=w;
this.H=h*s;
this.type=type;
this.isFloat=(type>0&&type<1);
this.back=this.createGraphics('back');
this.cursor=this.createGraphics('cursor');
this.label=this.addFrame(new GodStep.Text(n||'',h*s,'Arial','left',0xffffff));
this.valueText=this.addFrame(new GodStep.Text(val||'',h*s,'Arial','left',0xffffff));
this.valueText.y=this.label.y=-this.H;
GodStep.IDownUp.call(this.cursor);
GodStep.addEvent(this,GodStep.FRAME_OUT,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_OVER,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_UP,this.h_cursor);
GodStep.addEvent(this,GodStep.FRAME_MOVE,this.h_move);
GodStep.addEvent(this.cursor,GodStep.FRAME_DOWN,this.h_cursor);
this.setHitArea(0,0,this.W,this.H);
this.setHitArea(0,0,this.CW,this.H,this.cursor);
this.redrawBack();
this.redraw();
this.Value=val;
};
extend(GodStep.Slider,GodStep.Frame);
pro.redrawBack=function(){
if(!this.cursor.IsDown){
this.back.clear();
this.rect(this.W,this.H,(this.IsOver)?0xff4444:0xffaaaa,.8,0,0,this.back);
}
};
pro.redraw=function(){
this.cursor.clear();
this.rect(this.CW,this.H,(this.cursor.IsDown)?0x00ff00:0xffffff,.8,0,0,this.cursor);
};
pro.h_back=function(e){
e.target.redrawBack();
};
pro.h_move=function(e){
var t=e.content.t;
var power;
var dv;
if(e.content.getLocalPosition){
var point=e.content.getLocalPosition(t);
if(t.cursor.IsDown){
power=1;
t.cursor.position.x=Math.max(0,Math.min(point.x-t.cursor.downPoint.x,t.W-t.CW));
dv=(t.cursor.position.x/(t.W-t.CW))*(t.delta)+t.min-t.lastValue;
trace(power);
t.value=t.lastValue+dv*power;
GodStep.dispatch(t,GodStep.FRAME_CHANGED);
if(t.type=='int'){
t.value=parseInt(t.value);
}else{
if(t.isFloat){
t.value=parseInt(t.value/t.type)*t.type;
}else{
t.value=parseInt(t.value/t.type)*t.type;
}
}
t.valueText.setText(t.value);
t.valueText.updateText();
t.valueText.x=t.W-t.valueText.width;
t.updateCursor();
}
}
};
pro.h_cursor=function(e){
if(e.content.t instanceof GodStep.Slider){
e.content.t.cursor.IsDown=false;
e.content.t.redraw();
e.content.t.lastValue=e.content.t.value;
}else{
e.content.t.parent.redraw();
e.content.t.lastValue=e.content.t.value;
}
};
pro.updateCursor=function(){
this.cursor.x=((this.value-this.min)/(this.delta))*(this.W-this.CW);
};
Object.defineProperty(GodStep.Slider.prototype,'IsDown',{
set:function(value){
this.cursor.IsDown=false;
this.redraw();
this.redrawBack();
}
});
Object.defineProperty(GodStep.Slider.prototype,'Value',{
get:function(){
return this.value;
},
set:function(value){
this.value=value;
if(this.type=='int'){
this.value=parseInt(this.value);
}else{
if(this.isFloat){
this.value=parseInt(this.value/this.type)*this.type;
}else{
this.value=parseInt(this.value/this.type)*this.type;
}
}
this.lastValue=this.value;
this.valueText.setText(this.value);
this.valueText.updateText();
this.valueText.x=this.W-this.valueText.width;
this.updateCursor();
}
});
M3.Dev=function(soul){
this.soul=soul;
GodStep.LFrame.call(this,soul,'Dev');
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addFrame(this.b_back=new Games.TextButton('back',30*S,0x562466,soul.W*.1,soul.H*.05));
this.addFrame(this.b_test=new Games.TextButton('[test]',30*S,0x562466,soul.W*.9,soul.H*.125));
this.addFrame(this.b_save=new Games.TextButton('save',30*S,0x562466,soul.W*.9,soul.H*.05));
this.addChild(this.text=new GodStep.Text('Level ID: ',30*S,'Arial','left',0xffffff));
this.standart=[];
for(var i=0;i<M3.Cell.STANDART.length;i++){
var cell=new Games.ImgButton(M3.Cell.STANDART[i],this,this.W*.06,this.H*.07*i+this.H*.3);
this.addChild(cell);
this.standart.push(cell);
addEvent(cell,Games.ImgButton.CLICK,this.h_colors);
}
this.addChild(this.buttonBlock=new Games.ImgButton('block',this,this.W*.94,this.H*.07+this.H*.3));
this.addChild(this.buttonDelete=new Games.ImgButton('delete',this,this.W*.94,this.H*.07*2+this.H*.3));
this.addChild(this.buttonDirt=new Games.ImgButton('dirt',this,this.W*.94,this.H*.07*3+this.H*.3));
this.addChild(this.buttonBonus=new Games.ImgButton('bonusGor',this,this.W*.94,this.H*.07*4+this.H*.3));
addEvent(this.buttonBlock,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonDelete,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonDirt,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonBonus,Games.ImgButton.CLICK,this.h_instrument);
this.clearSelectionInstruments();
var sliderW=soul.W*.6;
var sliderH=35;
this.addFrame(this.s_pointsLimit=new GodStep.Slider(sliderW,sliderH,S,500,0,100000,0,'score target'));
this.addFrame(this.s_itemsLimit=new GodStep.Slider(sliderW,sliderH,S,'int',0,30,0,'items target'));
this.addFrame(this.s_stepLimit=new GodStep.Slider(sliderW,sliderH,S,'int',0,200,0,'steps target'));
this.addFrame(this.s_bonusCount=new GodStep.Slider(sliderW,sliderH,S,'int',0,10,0,'bonus count'));
this.s_bonusCount.x=this.s_stepLimit.x=this.s_itemsLimit.x=this.s_pointsLimit.x=(this.W-sliderW)*.5;
this.s_pointsLimit.y=(this.H*.05);
this.s_itemsLimit.y=this.s_pointsLimit.y+this.s_pointsLimit.H*2;
this.s_stepLimit.y=this.s_itemsLimit.y+this.s_itemsLimit.H*2;
this.s_bonusCount.y=this.s_stepLimit.y+this.s_stepLimit.H*2;
this.text.y=this.H*.015;
this.addFrame(this.field=new M3.Field(soul,7,9));
this.field.x=(this.W-this.field.W*M3.CELLW_SCALE)*.5;
this.field.y=this.H-this.field.x-this.field.H+this.H*.075;
addEvent(this.b_save,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_test,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
this.visible=false;
addEvent(this.field,Games.CELL_DOWN,this.h_cells);
};
extend(M3.Dev,GodStep.Frame);
pro.update=function(){
};
pro.init=function(){
this.clearSelectionInstruments();
M3.SKIN=1;
this.visible=true;
var data=GodStep.LoadLocal(this.soul.SETTINGS_SLOT);
this.text.setText('Level '+M3.LAST_LEVEL_SELECTED);
this.text.updateText();
this.text.x=(this.W*.2);
var level=data.levels[M3.LAST_LEVEL_SELECTED-1]||[];
this.field.setData(level);
this.field.reskin(M3.SKIN);
if(level.length>=1){
var params=level[level.length-1];
this.s_pointsLimit.Value=params.points;
this.s_itemsLimit.Value=params.items;
this.s_stepLimit.Value=params.steps||0;
this.s_bonusCount.Value=params.bonuses||0;
this.buttonBonus.alpha=(params.isBonus)?1:0.2;
for(var st=0;st<this.standart.length;st++){
this.standart[st].alpha=.2;
}
for(var pc=0;pc<params.colors.length;pc++){
this.standart[params.colors[pc]].alpha=1;
}
}
};
pro.clearSelectionInstruments=function(){
this.instrument='';
this.buttonBlock.alpha=this.buttonDelete.alpha=this.buttonDirt.alpha=.2;
};
pro.h_colors=function(e){
var t=e.target;
t.alpha=(t.alpha==1)?.2:1;
};
pro.h_cells=function(e){
var t=e.target;
var p=t.parent;
var cell=e.content.data;
switch(e.type){
case Games.CELL_DOWN:
if(p.instrument!=''){
p.field.addCellObject(new M3.CellObject(p.instrument,p.startS,cell));
}else{
cell.clear();
}
break;
}
};
pro.h_instrument=function(e){
var t=e.target;
var p=t.parent;
switch(t){
case p.buttonBonus:
if(p.buttonBonus.alpha==1){
p.buttonBonus.alpha=.2;
}else{
p.buttonBonus.alpha=1;
}
break;
case p.buttonDirt:
if(p.buttonDirt.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='dirt';
p.buttonDirt.alpha=1;
}
break;
case p.buttonDelete:
if(p.buttonDelete.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='delete';
p.buttonDelete.alpha=1;
}
break;
case p.buttonBlock:
if(p.buttonBlock.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='block';
p.buttonBlock.alpha=1;
}
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_test:
case p.b_save:
var data=GodStep.LoadLocal(s.SETTINGS_SLOT);
if(!data.levels){
data.levels=[];
}
var d=p.field.getData();
M3.LAST_LEVEL_DATA=data.levels[M3.LAST_LEVEL_SELECTED-1]=d;
for(var i=0;i<data.levels.length;i++){
var lev=data.levels[i];
var val=lev[lev.length-1];
var colors=[];
for(var st=0;st<p.standart.length;st++){
if(p.standart[st].alpha==1){
colors.push(st);
}
}
if(val==undefined){
val={};
}
if(val.id){
if(M3.LAST_LEVEL_SELECTED==i+1){
data.levels[i][lev.length-1]={points:p.s_pointsLimit.value,items:p.s_itemsLimit.value,colors:colors,steps:p.s_stepLimit.value,bonuses:p.s_bonusCount.value,isBonus:p.buttonBonus.alpha==1,id:i+1};
}
}else{
data.levels[i][lev.length]={points:p.s_pointsLimit.value,items:p.s_itemsLimit.value,colors:colors,steps:p.s_stepLimit.value,bonuses:p.s_bonusCount.value,isBonus:p.buttonBonus.alpha==1,id:i+1};
}
}
GodStep.SaveLocal(data,s.SETTINGS_SLOT);
if(t==p.b_test){
s.screenTo([s.gameplay],p);
}
break;
case p.b_back:
s.screenTo([s.levelselect],p);
break;
}
};
pro.h_mouse=function(e){
var t=e.content.target;
if(e.content.target){
switch(e.type){
case GodStep.FRAME_UP:
if(e.content.target.soul){
for(var i=0;i<t.standart.length;i++){
t.standart[i].Scale=1;
t.standart[i].isDown=false;
}
t.s_stepLimit.IsDown=
t.s_itemsLimit.IsDown=
t.s_bonusCount.IsDown=
t.s_pointsLimit.IsDown=false;
t.b_test.isDown=t.b_back.isDown=t.b_save.isDown=false;
t.b_test.Scale=t.b_back.Scale=t.b_save.Scale=1;
}
break;
}
}
};
M3.Cell=function(xi,yi,w,h,s){
Games.Cell.call(this,xi,yi,w,h);
this.xi=xi;
this.yi=yi;
this.guests=[];
this.addChild(this.img=new M3.Img('sq1_1',s*M3.CELL_SCALE_BACK,this.W*.5,this.H*.5,.5));
this.addFrame(this.label=new M3.Text('100',75*s,0,0,'left'));
this.label.visible=false;
};
M3.Cell.STANDART=['red','yellow','blue','purple','green'];
extend(M3.Cell,Games.Cell);
pro.animate=function(){
if(this.label.visible){
this.label.alpha+=(0-this.label.alpha)*.04;
this.label.y-=this.W*.007;
if(this.label.alpha<0.05){
this.label.visible=false;
}
}
};
pro.clear=function(){
for(var i=0;i<this.guests.length;i++){
this.guests[i].parent.parent.delCellObject(this.guests[i]);
}
this.guests=[];
};
pro.isEmpty=function(){
return this.guests.length==0;
};
pro.isDynamic=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isDynamic){
return true;
}
}
return false;
};
pro.getColored=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isColored){
return this.guests[i];
}
}
return null;
};
pro.replaceColored=function(color){
var guest=this.getColored();
if(guest){
if(guest.isColored){
var field=guest.parent.parent;
field.delCellObject(guest);
this.guests.splice(this.guests.indexOf(guest),1);
var co;
field.addCellObject(co=new M3.CellObject(color,guest.S,this));
co.applyCellPostion(true);
}
}
};
pro.replaceCellObjects=function(cell){
var c1=this.guests[0];
var c2=cell.guests[0];
this.guests[0]=c2;
cell.guests[0]=c1;
c1.cell=cell;
c2.cell=this;
c1.applyCellPostion(true);
c2.applyCellPostion(true);
};
pro.isBusy=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isObject){
return true;
}
}
return false;
};
pro.pushGuest=function(o){
this.guests.push(o);
};
pro.delGuest=function(o){
this.guests.splice(this.guests.indexOf(o),1);
};
pro.setAsGuest=function(o){
if(o.name=='player'){
this.guests.push(o);
}else{
this.guests.splice(0,0,o);
}
o.cell.guests.splice(o.cell.guests.indexOf(o),1);
o.cell=this;
};
pro.setAsSelected=function(ok){
var guests=this.guests;
var length=guests.length;
var guest;
for(var i=0;i<length;i++){
guest=guests[i];
if(guest.isColored){
guest.setAsSelected(ok);
this.isSelected=ok;
}
}
return this.isSelected;
};
pro.isEqual=function(cell){
var object,i,object2;
for(i=0;i<this.guests.length;i++){
if(this.guests[i].isDynamic){
object=this.guests[i];
}
}
for(i=0;i<cell.guests.length;i++){
if(cell.guests[i].isDynamic){
object2=cell.guests[i];
}
}
return(object.typeName==object2.typeName);
};
pro.getBonus=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isBonus){
return this.guests[i];
}
}
return null;
};
pro.removeDirt=function(){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isDirt){
if(M3.JUST_DIRT_DELETE==0){
M3.JUST_DIRT_DELETE=5;
GodStep.playSound('dirt',0,M3.SOUND);
}
obj.isKill=true;
this.setCost(500);
return obj;
}
}
return null;
};
pro.removeDynamic=function(bonusKill){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isDynamic){
this.setCost(this.cost);
if(bonusKill){
obj.isKill=false;
obj.isBonusKill=true;
obj.img.setToFrame(9);
}else{
obj.isKill=true;
obj.isBonusKill=false;
obj.img.setToFrame(4);
}
obj.animTimer=0;
return obj;
}
}
return null;
};
pro.removeBlock=function(){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isBlock){
this.setCost(50);
if(M3.JUST_BLOCK_DELETE==0){
M3.JUST_BLOCK_DELETE=5;
GodStep.playSound('bamboo',0,M3.SOUND);
}
guests.splice(i,1);i--;
return obj;
}
}
return null;
};
pro.setCost=function(c){
this.label.alpha=1;
this.label.visible=true;
this.label.setText(c+'');
this.label.updateText();
this.label.x=this.W/2-this.label.width/2;
this.label.y=this.label.height/2;
};
M3.Field=function(soul,xc,yc){
Games.CellField.call(this,xc,yc,soul.W*.95,soul.W*.95,M3.Cell,soul.startS);
this.cellObjects=[];
this.soul=soul;
this.dirts=[];
this.blocks=[];
this.deletes=[];
this.lastSameColor=null;
this.gameplay=soul.gameplay;
this.lines=[];
this.addChildAt(this.dirtField=new PIXI.DisplayObjectContainer(),this.children.length-1);
this.addChildAt(this.lineField=new PIXI.DisplayObjectContainer(),this.children.length-1);
};extend(M3.Field,Games.CellField);
pro.update=function(){
for(var i=0;i<this.cells.length;i++){
this.cells[i].animate();
}
};
pro.reskin=function(skin){
var v=1;
for(var i=0;i<this.cells.length;i++){
this.cells[i].img.setTexture('sq'+skin+'_'+v);
this.cells[i].v=v;
v=(v==1)?2:1;
}
};
pro.initField=function(countX,countY,cW,cH){
var cellW=this.W/this.cellCountX*M3.CELLW_SCALE;
Games.CellField.prototype.initField.call(this,countX,countY,cellW,cellW);
};
pro.fill=function(){
var cells=this.cells;
for(var i=0;i<cells.length;i++){
if(!cells[i].isBusy()){
this.gameplay.generate(cells[i]);
}
}
};
pro.clear=function(){
this.dirts=[];
this.blocks=[];
this.deletes=[];
while(this.cellObjects.length){
this.delFrame(this.cellObjects[0].destroy());
this.cellObjects.splice(0,1);
}
for(var i=0;i<this.cells.length;i++){
this.cells[i].clear();
}
trace('objects'+this.cellObjects.length);
};
pro.setData=function(d){
this.clear();
if(d){
var S=this.soul.startS;
for(var i=0;i<d.length;i++){
var o=d[i];
if(o.id){
}else{
this.addCellObject(new M3.CellObject(o.name,this.soul.startS,this.cells[o.xi+o.yi*this.cellCountX]));
}
}
}
};
pro.getData=function(){
var objects=[];
for(var i=0;i<this.cellObjects.length;i++){
var o=this.cellObjects[i];
var od={name:o.typeName,xi:o.cell.xi,yi:o.cell.yi};
objects.push(od);
}
return objects;
};
pro.delCellObject=function(obj){
if(obj){
this.delFrame(obj);
this.cellObjects.splice(this.cellObjects.indexOf(obj),1);
if(obj.name=='delete'){
this.deletes.splice(this.deletes.indexOf(obj),1);
}
if(obj.name=='block'){
this.blocks.splice(this.blocks.indexOf(obj),1);
}
if(obj.name=='dirt'){
this.dirts.splice(this.dirts.indexOf(obj),1);
}
return true;
}
return false;
};
pro.addCellObject=function(ob){
var o;
var isFound=false;
var isDirt=false;
switch(ob.name){
case'dirt':
isDirt=true;
this.dirts.push(ob);
break;
case'block':
this.blocks.push(ob);
break;
case'delete':
this.deletes.push(ob);
break;
}
for(var i=0;i<this.cellObjects.length;i++){
o=this.cellObjects[i];
if(o.isObject){
if(o.cell.name==ob.cell.name){
isFound=true;
}
}
}
if(!isFound){
ob.cell.pushGuest(ob);
this.cellObjects.push(ob);
if(isDirt){
this.addFrameAt(ob,this.dirtField,this.dirtField.children.length);
}else{
this.addFrameAt(ob,this.objectContainer,this.objectContainer.children.length);
}
}
};
pro.getCellByPoint=function(p,isOver){
var w=this.cellW;
var dw=w*(isOver?.125:0);
var i=Math.max(0,Math.min(this.cellCountX-1,parseInt((p.x-dw*2)/w)));
var j=Math.max(0,Math.min(this.cellCountY-1,parseInt((p.y-dw)/w)));
var cell=this.cellsXY[j][i];
if(GodStep.Point.distance(new PIXI.Point(cell.x,cell.y),new PIXI.Point(p.x,p.y))<w*(isOver?1:1)){
return cell;
}
return null;
};
pro.clearCell=function(cell){
};
pro.getEmptyCount=function(){
var c=0;
for(var i=0;i<this.cells.length;i++){
if(this.cells[i].isEmpty()){
c++;
}
}
return c;
};
pro.getDynamicCount=function(){
var c=0;
for(var i=0;i<this.cells.length;i++){
if(this.cells[i].isDynamic()){
c++;
}
}
return c;
};
pro.removeBlocksAndDirt=function(cell,bonusKill){
var xi=cell.xi;
var yi=cell.yi;
var cells=this.cellsXY;
var row;
var points=0;
cell.removeDynamic(bonusKill);
if(cell.removeDirt()){
points+=500;
}
if(row=cells[yi-1]){
if(row[xi]){
if(this.delCellObject(row[xi].removeBlock())){
points+=50;
}
}
}
if(row=cells[yi+1]){
if(row[xi]){
if(this.delCellObject(row[xi].removeBlock())){
points+=50;
}
}
}
if(cells[yi][xi-1]){
if(this.delCellObject(cells[yi][xi-1].removeBlock())){
points+=50;
}
}
if(cells[yi][xi+1]){
if(this.delCellObject(cells[yi][xi+1].removeBlock())){
points+=50;
}
}
return points;
};
pro.randomizeArea=function(colors,x,y,w,h,deleteColor){
var trueColors=[];
for(var c=0;c<colors.length;c++){
if(deleteColor!=null){
if(colors[c]!=deleteColor)trueColors.push(colors[c]);
}else{
trueColors.push(colors[c]);
}
}
var cells=this.cellsXY;
var line=[];
for(var i=x;i<x+w;i++){
for(var j=y;j<y+h;j++){
line.push(cells[j][i]);
cells[j][i].replaceColored(M3.Cell.STANDART[trueColors[parseInt(Math.random()*trueColors.length)]]);
}
}
return line;
};
pro.replaceCells=function(cell1,cell2){
var g1=cell1.guests[0];
var g2=cell2.guests[0];
cell1.guests[0]=g2;
cell2.guests[0]=g1;
g1.cell=cell2;
g2.cell=cell1;
g1.applyCellPostion(true);
g2.applyCellPostion(true);
};
pro.removeAllLines=function(){
while(this.lines.length){
this.lineField.removeChild(this.lines[0]);
this.lines.splice(0,1);
}
};
pro.removeLastLine=function(){
this.lineField.removeChild(this.lines[this.lines.length-1]);
this.lines.splice(this.lines.length-1,1);
};
pro.addLine=function(cell1,cell2){
var s=this.soul.startS;
var colored=cell1.getColored();
var p=GodStep.Point.middlePoint(cell1.Place,cell2.Place,.5);
var type;
var dx=cell1.xi-cell2.xi;
var dy=cell1.yi-cell2.yi;
var isRotate=0;
if(Math.abs(dx)+Math.abs(dy)==1){
type=colored.t+'_3';
if(Math.abs(dy)>0){
isRotate=1;
}
}else{
if(cell1.xi<cell2.xi){
if(cell1.yi>cell2.yi){
type=colored.t+'_2';
}else{
type=colored.t+'_1';
}
}else{
if(cell1.yi<cell2.yi){
type=colored.t+'_2';
}else{
type=colored.t+'_1';
}
}
}
var line=new M3.Img(type,s,p.x+cell2.W/2,p.y+cell2.H/2,.5);
if(isRotate==1){
line.rotation=Math.PI/2;
}
this.lineField.addChild(line);
this.lines.push(line);
};
pro.findSame=function(cell){
var x=cell.xi,y=cell.yi;
var count=0;
var cellsXY=this.cellsXY;
var mainType=cell.getColored().typeName;
var colored;
var cellRow;
if(cellRow=cellsXY[y-1]){
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
colored=cellRow[x].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
if(count>1)return true;
}
if(cellRow=cellsXY[y+1]){
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
colored=cellRow[x].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
if(count>1)return true;
}
cellRow=cellsXY[y];
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(count>1)return true;
return false;
};
pro.shuffle=function(cells){
var rand1;
var rand2;
trace("перемешали");
for(var i=0;i<cells.length;i++){
rand1=parseInt(Math.random()*cells.length);
rand2=parseInt(Math.random()*cells.length);
cells[rand1].replaceCellObjects(cells[rand2]);
}
};
pro.addSameColors=function(cells){
var count=1;
trace("добавили цвет");
for(var i=0;i<count;i++){
var colored=cells[i].getColored();
if(colored.typeName==this.lastSameColor){
count++;
}else{
cells[i].replaceColored(this.lastSameColor);
}
}
};
pro.findMatchThree=function(){
var cells=[];
var cell;
for(var i=0;i<this.cells.length;i++){
cell=this.cells[i];
if(cell.getColored()){
cells.push(cell);
}
}
if(cells){
if(!this.lastSameColor){
this.lastSameColor=cells[0].getColored().typeName;
}
for(var c=0;c<cells.length;c++){
if(this.findSame(cells[c])){
this.lastSameColor=null;
return;
}
}
this.shuffle(cells);
this.addSameColors(cells);
this.findMatchThree();
}
};
pro.findItem=function(){
var row;
for(var i=0;i<this.cellsXY.length;i++){
row=this.cellsXY[i];
for(var j=0;j<row.length;j++){
var cell=row[j];
for(var g=0;g<cell.guests.length;g++){
if(cell.guests[g].isItem){
return cell.guests[g];
}
}
}
}
};
M3.ImgButton=function(img,s_img,s_scale,parent,scaleS,px,py,text,textSize,tdx,tdy){
var tex=GodStep.textures[img];
if(tex==undefined||tex==null)trace('TEXTURE NOT FOUND - '+img);
var startS=this.startS=scaleS*M3.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.scaleble=true;
if(s_img){
var shadow=GodStep.textures[s_img];
this.addChild(this.shadow=new GodStep.Image(shadow));this.shadow.Scale=startS*s_scale/GodStep.IMAGE_RESOLUTION;
this.shadow.anchor=new PIXI.Point(0.5,0.5);
this.shadow.y=tex.height/2*scaleS*1.3/GodStep.IMAGE_RESOLUTION;
}
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
if(text){
this.addChild(this.label=new M3.Text(text,(textSize||100)*startS/M3.SCALE,0,0,'center'));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.ImgButton,GodStep.Frame);
M3.ImgButton.CLICK='clickImg';
pro.rescale=function(s){
if(this.no_scale)return;
if(this.label){
this.label.scale.y=this.label.scale.x=s;
this.label.x=(this.label.HW-(this.label.tdx||0))*this.label.scale.y;
this.label.y=(this.label.HH-(this.label.tdy||0))*this.label.scale.y;
}
this.img.scale.y=this.img.scale.x=s*this.startS;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,M3.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.rescale(1/GodStep.IMAGE_RESOLUTION);
break;
case GodStep.FRAME_OVER:
if(this.isDown){
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
}
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=
this.scale.y=value;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
}
});
M3.LevelSelect=function(soul){
this.soul=soul;
var S=this.startS=soul.startS;
GodStep.Frame.call(this,'LevelSelect',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
this.addChild(this.back=new M3.Background(this,'back_l'));
this.addChild(this.pers=new M3.Img('pers_l',S,this.W*.85,this.H*.2,.5));
this.addChild(this.label=new M3.Text('LEVELS',195*S,this.W*.31,this.H*.1,'left',0xffffff));
this.addChild(this.maska=new PIXI.Graphics());
this.addChild(this.container=new GodStep.Frame('Container',soul.W,soul.H));
GodStep.IDownUp.call(this.container,this.soul.W,this.soul.H);
this.addChild(this.b_back=new M3.ImgButton('b_back','l_shadow',1,this,S,this.W*.16,this.H*.12));
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
this.visible=false;
this.levels=[];
this.container.MY=this.container.y=soul.H*.23;
this.maska.beginFill(0,.1);
this.maska.drawRect(0,this.container.y,this.W,this.H);
this.container.mask=this.maska;
addEvent(this.container,GodStep.FRAME_MOVE,this.h_container);
addEvent(this.container,GodStep.FRAME_DOWN,this.h_container);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
extend(M3.LevelSelect,GodStep.Frame);
pro.init=function(data){
this.visible=true;
this.settingsDATA=data||GodStep.LoadLocal(this.soul.SETTINGS_SLOT);
var player=GodStep.LoadLocal(this.soul.PLAYER_SLOT)||{count:0};
while(this.levels.length){
this.container.removeChild(this.levels[0].destroy());
this.levels.splice(0,1);
}
M3.LEVELS=this.levels=[];
var S=this.startS;
var w=this.W/4.3;
var x,y;
var maxY=0;
var levels=this.settingsDATA.levels;
var plevels=this.soul.playerDATA.levels;
var isActivate=false;
for(var i=0;i<levels.length;i++){
y=parseInt(i/4);
x=i-y*4;
var level=new M3.LevButton('lock',S,x*w+w*.66,y*w+w/2,''+(i+1),200*S,0,this.H*.058,0x3289bf);
maxY=Math.max(maxY,level.y+level.H/2);
this.container.addChild(level);
level.ID=i+1;
level.isDisabled=true;
if(plevels[i][0]==1){
level.isDisabled=false;
level.setAsComplete();
}else{
if(!isActivate){
isActivate=true;
level.isDisabled=false;
level.setAsActive();
}
}
this.levels.push(level);
level.levelData=levels[i];
addEvent(level,M3.ImgButton.CLICK,this.h_levels);
}
if(this.newLevel){
this.container.addChild(this.newLevel.destroy());
this.newLevel=null;
}
if(M3.DEVMODE){
if(!this.b_loadDef){
this.addFrame(this.b_loadDef=new Games.TextButton('Load Default',35,0x562466,this,S,this.soul.W*.5,this.soul.H*.05));
addEvent(this.b_loadDef,Games.ImgButton.CLICK,this.h_buttons);
}
this.b_loadDef.visible=true;
y=parseInt(this.levels.length/4);
x=this.levels.length-y*4;
var newLevel=this.newLevel=new Games.TextButton('add',60,0x555555,this,S,x*w+w/2,y*w+w/2);
newLevel.ID=this.levels.length+1;
addEvent(newLevel,GodStep.FRAME_DOWN,this.h_newLevels);
this.container.addChild(newLevel);
}else{
if(this.b_loadDef){
this.b_loadDef.visible=false;
}
}
this.container.setHitArea(0,0,this.W,maxY);
this.container.MH=maxY+this.H*.1;
this.container.LH=(level)?level.H:0;
};
pro.h_levels=function(e){
var t=e.target;
var p=t.parent.parent;
var s=p.soul;
switch(e.type){
case M3.ImgButton.CLICK:
M3.LAST_LEVEL_SELECTED=t.ID;
M3.LAST_LEVEL_DATA=t.levelData;
if(M3.DEVMODE){
s.screenTo([s.dev],p);
}else{
if(!t.isDisabled){
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p);
}
}
break;
}
};
pro.h_newLevels=function(e){
var t=e.target;
var p=t.parent.parent;
var s=p.soul;
switch(e.type){
case GodStep.FRAME_DOWN:
M3.LAST_LEVEL_SELECTED=t.ID;
s.screenTo([s.dev],p);
break;
}
};
pro.h_container=function(e){
var t=e.target;
var parent=t.parent;
var s=parent.soul;
if(t.name=='Container'){
switch(e.type){
case GodStep.FRAME_MOVE:
if(t.isDown){
var p=e.content.getLocalPosition(t.parent);
var hy=(s.OH-s.H)*.5;
t.y=p.y-t.downPoint.y;
t.y=Math.max(Math.min(t.y,t.MY-hy/parent.scale.x),(s.OH-hy)/parent.scale.x-t.MH);
}
break;
}
}
};
pro.h_mouse=function(e){
var t=e.content.target;
switch(e.type){
case GodStep.FRAME_DOWN:
t.soul.keyboard.focus();
break;
case GodStep.FRAME_UP:
if(e.content.target.soul){
t.b_back.Scale=1;
t.b_back.isDown=false;
if(t.b_loadDef){
t.b_loadDef.isDown=false;
t.b_loadDef.Scale=1;
}
for(var i=0;i<t.levels.length;i++){
t.levels[i].Scale=1;
t.levels[i].isDown=false;
}
}
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_loadDef:
p.init(GodStep.LoadText(M3.DEFAULT_SETTINGS));
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.startmenu],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.maska.y=this.container.y=-(this.soul.OH-this.soul.H)*.5/value+this.soul.H*.15/value;
this.container.y-=-this.container.MY+this.soul.H*.15/value;
this.maska.y+=this.soul.H*.07/value;
this.maska.clear();
this.maska.beginFill(0,.1);
this.maska.drawRect(0,0,this.W,this.soul.OH*1.1/value-this.container.y);
var dy=this.soul.OH-this.soul.H;
this.b_back.y=(this.soul.H*.11-dy/2)/value;
this.pers.y=(this.soul.H*.113-dy/2)/value;
this.label.y=(this.soul.H*.028-dy/2)/value;
this.back.rescale(value);
}
});
M3.CellObject=function(name,S,cell){
var type=name;
GodStep.Frame.call(this,type);
this.typeName=name;
this.S=S;
this.startS=S*M3.CELL_SCALE;
this.sy=0;
switch(name){
case'item':
this.isDynamic=true;
this.isItem=true;
this.isObject=true;
this.itemTimer=20;
this.addFrame(this.img=new M3.Img('cristal',this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,.5));
break;
case'dirt':
this.animTimer=0;
this.isDirt=true;
this.addFrame(this.img=new M3.MovieClip([cell.v+'_'+M3.SKIN+'mud_1',M3.SKIN+'mud_2',M3.SKIN+'mud_3',M3.SKIN+'mud_4'],this.startS/M3.CELL_SCALE*1.03,cell.W/2,cell.H/2,new PIXI.Point(.515,.515)));
break;
case'block':
this.isBlock=true;
this.isObject=true;
this.addFrame(this.img=new M3.Img('o_1',this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,.5));
break;
case'delete':
this.isObject=true;
this.addFrame(this.img=new M3.Img(M3.SKIN+"_new",this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,new PIXI.Point(.51,.51)));
break;
case'red':
case'green':
case'purple':
case'blue':
case'yellow':
var t;
switch(name){
case'red':t=1;break;
case'green':t=2;break;
case'purple':t=3;break;
case'blue':t=4;break;
case'yellow':t=5;break;
}
this.animTimer=parseInt(Math.random()*55);
this.isColored=true;
this.isObject=true;
this.isDynamic=true;
this.t=t;
this.addFrame(this.img=new M3.MovieClip([t+'p_1',t+'p_2',t+'p_3',t+'p_4',t+'a1',t+'a2',t+'a3',t+'a4',t+'a5',t+'d1',t+'d2',t+'d3',t+'d4',t+'d5'],this.startS/M3.CELL_SCALE*1.03,cell.W/2,cell.H/2,new PIXI.Point(.515,.515)));
break;
}
this.startS=this.img.scale.x;
this.cell=cell;
this.applyCellPostion(true);
};
extend(M3.CellObject,GodStep.Frame);
M3.CellObject.COLORS=[0x0000ff,0xff0000,0x00ff00,0xffff88,0xff00ff];
pro.update=function(){
if(this.isBonus){
this.bonusanim++;
if(this.bonusanim==6){
this.bonusanim=0;
if(this.bonus){
if(this.isBonusKill){
this.bonus.alpha=0;
}
this.bonus.nextFrame();
}
}
}
if(this.isDirt){
if(this.isKill){
this.animTimer++;
if(this.animTimer==5){
this.animTimer=0;
if(this.img.nextFrame()==0){
this.isDead=true;
this.cell.delGuest(this);
this.cell.parent.parent.delCellObject(this);
}
}
}
return;
}
if(this.isColored){
if(this.isColorSelected){
}else{
if(this.isBonusKill){
this.animTimer++;
if(this.animTimer==6){
this.animTimer=0;
if(this.img.nextFrame()==0){
this.isDead=true;
}
}
}else
if(this.isKill){
this.animTimer++;
if(this.animTimer==5){
this.animTimer=0;
if(this.img.nextFrame()==8){
this.isDead=true;
}
}
}else{
this.animTimer++;
if(this.animTimer==55){
this.animTimer=0;
if(this.img.nextFrame()==3){
this.img.setToFrame(0);
}
}
}
}
}
};
pro.setAsBonus=function(){
this.isBonus=true;
this.bonusanim=0;
this.isVertical=Math.random()>.5;
if(this.isVertical){
this.addChildAt(this.bonus=new M3.MovieClip(['bonus_2_1','bonus_2_2','bonus_2_3','bonus_2_4','bonus_2_5','bonus_2_6'],this.startS*GodStep.IMAGE_RESOLUTION/M3.SCALE,this.cell.W/2,this.cell.H/2,.5),0);
}else{
this.addChildAt(this.bonus=new M3.MovieClip(['bonus_1_1','bonus_1_2','bonus_1_3','bonus_1_4','bonus_1_5','bonus_1_6'],this.startS*GodStep.IMAGE_RESOLUTION/M3.SCALE,this.cell.W/2,this.cell.H/2,.5),0);
}
var parent=this.parent;
parent.removeChild(this);
parent.addChild(this);
};
pro.removeBonus=function(){
if(this.bonus){
this.removeChild(this.bonus);this.bonus=null;
}
};
pro.setCell=function(cell){
this.cell.delGuest(this);
this.cell=cell;
cell.pushGuest(this);
this.applyCellPostion(false);
if(this.typeName=='item'){
if(cell.yi==8){
this.isItemDead=true;
}
}
};
pro.applyCellPostion=function(now){
this.nextPlace=new PIXI.Point(this.cell.x,this.cell.y);
if(now){
this.Place=this.nextPlace;
}
};
pro.destroy=function(){
this.cell.guests.splice(this.cell.guests.indexOf(this),1);
this.removeChild(this.img);
if(this.label){
this.removeChild(this.label);
}
if(this.bonus){
this.removeChild(this.bonus);
}
if(this.img1){
this.removeChild(this.img1);
this.img1=null;
}
this.img=null;
return this;
};
pro.setAsSelected=function(ok){
this.animTimer=0;
this.isColorSelected=ok;
this.img.setToFrame(ok?3:0);
};
M3.Text=function(text,size,x,y,align,tint){
PIXI.BitmapText.call(this,text,{font:parseInt(size)+"px Font2",align:align||"left"});
this.x=x;
this.y=y;
if(tint)this.tint=tint;
this.updateText();
};
extend(M3.Text,PIXI.BitmapText);
M3.GamePlay=function(soul){
this.soul=soul;
M3.GamePlay.instance=this;
GodStep.Frame.call(this,'GamePlay',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
this.visible=false;
this.OW=soul.OW;
this.OH=soul.OH;
this.selected=[];
this.isFirstTime=true;
var S=this.startS=soul.startS;
this.addChild(this.background=new M3.Background(this,'back_1'));
this.addFrame(this.field=new M3.Field(soul,7,9));this.field.gameplay=this;
this.addChild(this.hud=new PIXI.DisplayObjectContainer());
this.hud.addChild(this.field_game=new M3.Img('field_game',S,this.W*.5,0,new PIXI.Point(0.5,0)));
this.hud.addChild(this.moveField=new M3.Img('move',S,this.W*.5,this.H*.045,.5));
this.hud.addChild(this.scoreField=new M3.Img('score',S,this.W*.8,this.H*.045,.5));
this.hud.addChild(this.slider_1=new M3.Img('slider_1',S,this.W*.15,this.H*.045,.5));
this.hud.addChild(this.slider_2=new M3.Img('slider_2',S,this.W*.15,this.H*.045,.5));
this.hud.addChild(this.sliderMask=this.createGraphics('sliderMask'));
this.hud.addChild(this.targetIcon=new M3.Img('i_1_1',S,this.W*.171,this.H*.047,.5));
this.slider_2.mask=this.sliderMask;
this.sliderMask.x=-this.W*.2;
this.sliderMask.beginFill(0,1);this.sliderMask.y=this.H*.023;
this.sliderMask.drawRect(0,0,this.W*.3,this.H*.05);
this.sliderMask.endFill();
this.hud.addChild(this.stepText=new M3.Text('',S*100,this.W*.5,this.H*.0,'center'));
this.hud.addChild(this.pointText=new M3.Text('',S*67,this.W*.81,this.H*.015,'right'));
this.hud.addChild(this.needPointText=new M3.Text('',S*58,this.W*.1,this.H*.01,'left'));
this.addChild(this.b_pause=new M3.ImgButton('b_pause',null,1,this,S*.9,this.W*.5,this.H*.5));
this.addChild(this.tutorialOne=new M3.TutorialOne(soul,this));
this.addChild(this.tutorial=new M3.Tutorial(soul));
this.addChild(this.pause=new M3.Pause(soul,this));
addEvent(this.b_pause,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.field,Games.CELL_DOWN,this.h_cells);
addEvent(this.field,Games.CELL_UP,this.h_cells);
addEvent(this.field,GodStep.FRAME_UP,this.h_cells);
this.field.setHitArea(-soul.OW,-soul.OH,soul.OW*2,soul.OH*2);
this.addChild(this.console=new M3.Text('',S*80,this.W*.01,this.H*.0,'center'));
addEvent(this.field,GodStep.FRAME_MOVE,this.h_cells);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
if(M3.CHEAT){
for(var i=0;i<5;i++){
var aw;
this.addChild(aw=this['award'+(i+1)]=new Games.TextButton('award'+(1+i),25*S,0x125125,this.W*.12+this.W*.19*i,this.H*.95));
addEvent(aw,Games.ImgButton.CLICK,this.h_awards);
}
}
};
extend(M3.GamePlay,GodStep.Frame);
M3.FRAME_RATE=1/60;
pro.h_awards=function(e){
var t=e.target;
var p=t.parent;
switch(e.target){
case p['award1']:
M3.submitAward(1);
break;
case p['award2']:
M3.submitAward(2);
break;
case p['award3']:
M3.submitAward(3);
break;
case p['award4']:
M3.submitAward(4);
break;
case p['award5']:
M3.submitAward(5);
break;
}
};
pro.update=function(){
if(this.visible){
if(M3.JUST_BONUS_PWNED>0){
M3.JUST_BONUS_PWNED--;
}
if(M3.JUST_BONUS_GENERATED>0){
M3.JUST_BONUS_GENERATED--;
}
if(M3.JUST_BLOCK_DELETE>0){
M3.JUST_BLOCK_DELETE--;
}
if(M3.JUST_DIRT_DELETE>0){
M3.JUST_DIRT_DELETE--;
}
this.field.update();
this.tutorialOne.update();
if(this.tutorial.isDead){
this.tutorial.alpha+=(0-this.tutorial.alpha)*.1;
if(this.tutorial.alpha<0.05){
this.tutorial.visible=false;
}
}else{
this.tutorial.alpha+=(1-this.tutorial.alpha)*.1;
this.tutorialOne.alpha=0;
}
var fcx=this.field.cellCountX;
var fcy=this.field.cellCountY;
var cells=this.field.cellsXY;
var cell,cellRow,guests,obj,dy,downCellRow,downCell,downLeft,downRight,isMoved,isMovedDown;
var d=this.W*.015;
var t=this.W*.04;
var j,i,o;
var isAllNotInPlace=false;
this.isCanMove=true;
var dddy=0;
var justDroped=this.justDroped=false;
for(j=0;j<fcx;j++){
for(i=fcy-1;i>=0;i--){
cellRow=cells[i];
cell=cellRow[j];
guests=cell.guests;
if(i==0){
if(!cell.isBusy()){
this.generate(cell);
}
}
for(o=0;o<guests.length;o++){
obj=guests[o];
obj.update();
if(obj.isDynamic){
dy=obj.nextPlace.y-obj.y;
obj.sy*=.8;
if(dy<t){
downCellRow=cells[cell.yi+1];
if(downCellRow){
downCell=downCellRow[cell.xi];
if(!downCell.isBusy()){
obj.setCell(downCell);
isMovedDown=true;
justDroped=true;
this.stepEndTimer=290;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
if(obj.isItem){
if(obj.isItemDead){
if(obj.itemTimer--==0){
obj.isDead=true;
this.bonusWaitTimer=100;
}
}
}
if(obj.isDead){
this.field.delCellObject(obj);
this.isCanMove=false;
this.isCanFindMatchThree=true;
obj.cell.delGuest(obj);
if(obj.isItem){
GodStep.playSound('crystal',0,M3.SOUND);
this.itemCountFinished--;
if(this.itemCountFinished<=0){
this.levelEnd();
}
}
this.updateTarget();
}
}else{
isAllNotInPlace=true;
dy+=obj.sy;
obj.sy+=.17;
}
var ddy=0;
obj.x+=Math.min(Math.max(-d,(obj.nextPlace.x-obj.x)*.5),d);
obj.y+=ddy=Math.min(Math.max(-d*1.7,(dy*obj.sy)*.5),d*1.7);
dddy=Math.max(ddy,dddy);
}
}
}
}
if(!justDroped)
if(!isAllNotInPlace){
for(i=fcy-1;i>=0;i--){
cellRow=cells[i];
isMovedDown=false;
for(j=0;j<fcx;j++){
cell=cellRow[j];
guests=cell.guests;
if(i==0){
if(guests.length==0){
this.bonusWaitTimer=40;
this.generate(cell);
}
}
for(o=0;o<guests.length;o++){
isMoved=false;
obj=guests[o];
if(obj.isDynamic){
dy=obj.nextPlace.y-obj.y;
if(dy<t){
downCellRow=cells[cell.yi+1];
if(downCellRow){
downCell=downCellRow[cell.xi];
if(!downCell.isBusy()){
obj.setCell(downCell);
isMovedDown=true;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}else{
if(!isMovedDown){
downLeft=downCellRow[cell.xi-1];
downRight=downCellRow[cell.xi+1];
if(downLeft){
if(!downLeft.isBusy()){
obj.setCell(downLeft);
isMoved=true;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
if(!isMoved){
if(downRight){
if(!downRight.isBusy()){
obj.setCell(downRight);
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
}
}
}
}
}
}
}
}
}
}
if(this.isCanMove){
if(this.isCanFindMatchThree){
this.isCanFindMatchThree=false;
this.field.findMatchThree();
if(this.isHaveDirt){
if(this.field.dirts.length==0){
this.levelEnd();
}
}
}
if(this.bonusWaitTimer--==0){
if(this.bonusWaitTimer<-100){
this.bonusWaitTimer=-100;
}
this.generateBonuses();
}
}
if(this.isStepsEnded){
if(this.stepEndTimer--==170){
this.tutorial.initEnd(false);
}
if(this.stepEndTimer--<0){
this.isStepsEnded=false;
this.soul.screenTo([this.soul.replay],this);
}
}
if(this.isFinishLevel){
if(this.bonusFinalTimer--==0){
this.tutorial.initEnd(true);
this.isBonusFinalEnd=true;
this.stepText.setText('0');
}
if(this.bonusFinalTimer==100){
for(var bi=0;bi<this.field.cells.length;bi++){
var bcell=this.field.cells[bi];
if(bcell.getBonus()){
this.destroyBonusFromCell(bcell,bcell.getBonus());bcell.cost=50;
bcell.removeDynamic(true);
}
this.pointText.setText(this.points+'');
this.pointText.updateText();this.pointText.x=this.W*.827-this.pointText.width/2;
}
this.isBonuses=false;
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][0]=1;
M3.NEW_RECORD=(this.points>this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]);
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]=Math.max(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1],this.points);
}
if(this.isBonusFinalEnd){
if(this.levelEndTimer--==0){
this.soul.screenTo([this.soul.victory],this);
}
}
}
}
};
pro.updateTarget=function(){
switch(this.gameType){
case'points':
this.needPointText.setText(this.params.points+'');
this.sliderMask.x=-this.W*.2*Math.min(1,(1-Math.min(1,this.points/this.params.points)));
break;
case'items':
this.needPointText.setText((this.params.items-this.itemCountFinished)+'/'+this.params.items);
this.sliderMask.x=-this.W*.2*(1-(this.params.items-this.itemCountFinished)/this.params.items);
break;
case'dirts':
this.needPointText.setText((this.dirtCount-this.field.dirts.length)+'/'+this.dirtCount);
this.sliderMask.x=-this.W*.2*(1-(this.dirtCount-this.field.dirts.length)/this.dirtCount);
break;
}
this.needPointText.updateText();
this.needPointText.x=this.W*.19-this.needPointText.width/2;
this.needPointText.y=this.H*.019;
};
pro.init=function(){
var useragent;
if(window.navigator){
useragent=window.navigator.userAgent;
}
catched(function(){
var t=M3.GamePlay.instance;
t.isEndGenerateBonuses=false;
M3.JUST_DIRT_DELETE=0;
M3.JUST_BLOCK_DELETE=0;
M3.JUST_BONUS_GENERATED=0;
M3.JUST_BONUS_PWNED=0;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('theme',-1,M3.MUSIC);
GodStep.playSound('start',0,M3.SOUND);
M3.SKIN=Math.min(3,parseInt((M3.LAST_LEVEL_SELECTED-1)/10)+1);
t.bonusFinalTimer=0;
t.pause.visible=false;
t.background.img.setTexture('back_'+M3.SKIN);
t.field.reskin(M3.SKIN);
t.sliderMask.x=-t.W*.2;
t.pointText.setText('0');
t.pointText.updateText();
t.pointText.x=t.W*.827-t.pointText.width/2;
t.isFinishLevel=false;
t.isStepsEnded=false;
t.points=0;
t.bonusWaitTimer=40;
t.isJustInit=true;
t.itemRandomCount=parseInt(Math.random()*(t.field.cellCountX-2)+1);
t.isCanMove=false;
for(var s=0;s<t.selected.length;s++){
t.selected[s].setAsSelected(false);
}
t.selected=[];
t.visible=true;
t.isFinished=false;
t.playerDATA=GodStep.LoadLocal(t.soul.PLAYER_SLOT);
if(t.playerDATA){
}else{
t.playerDATA={};
trace('default save');
}
var leveldata=M3.LAST_LEVEL_DATA;
t.emptyCount=0;
if(leveldata){
t.field.setData(leveldata);
t.params=leveldata[leveldata.length-1];
t.colors=t.params.colors;
t.steps=t.params.steps;
t.isBonuses=t.params.isBonus;
t.bonusCount=t.params.bonuses||0;
t.stepText.setText(t.steps+'');
t.stepText.updateText();
t.stepText.x=t.W*.5-t.stepText.width/2;
t.needPointText.setText(t.params.points+'');
t.itemCountFinished=t.itemCount=t.params.items;
t.emptyCount=0;
t.field.isNowFilled=true;
t.field.fill();
t.field.findMatchThree();
t.dirtCount=t.field.dirts.length;
if(t.params.points>0){
t.gameType='points';
t.targetIcon.setTexture('star_game');
}else if(t.field.dirts.length>0){
t.gameType='dirts';
t.targetIcon.setTexture('i_1_'+M3.SKIN);
}else if(t.itemCountFinished>0){
t.gameType='items';
t.targetIcon.setTexture('i_2_1');
}
t.field.isNowFilled=false;
}
t.updateTarget();
t.tutorial.init();
t.tutorialOne.init(M3.LAST_LEVEL_SELECTED);
t.isHaveDirt=t.field.dirts.length>0;
switch(M3.LAST_LEVEL_SELECTED){
case 13:
t.itemCounter=4;
break;
}
},'INIT GAME\n'+useragent+'\nS4='+M3.MatchThree.instance.isS4);
};
pro.generate=function(cell){
var cid=this.colors[parseInt(Math.random()*this.colors.length)];
var type=M3.Cell.STANDART[cid];
if(this.isJustInit){
if(this.emptyCount==this.itemRandomCount){
if(this.itemCount>0){
this.itemCount--;
this.itemCounter=20+this.itemRandomCount;
type='item';
}
this.isJustInit=false;
}
}else{
if(this.itemCount>0&&!this.field.isNowFilled){
this.itemCounter--;
if(this.itemCounter==0){
this.itemCounter=18;
this.itemCount--;
type='item';
}
}
}
var obj;
this.field.addCellObject(obj=new M3.CellObject(type,this.startS,cell));
obj.y-=cell.H;
this.emptyCount++;
};
pro.generateBonuses=function(){
if(this.isBonuses){
if(this.isEndGenerateBonuses){
if(this.steps>0){
this.steps--;
this.bonusWaitTimer=50;
this.bonusCount+=1;
this.bonusFinalTimer=160;
this.stepText.setText(this.steps+'');
}
}
var c=parseInt(Math.random()*(this.field.cells.length-1));
while(this.bonusCount>0){
if(M3.JUST_BONUS_GENERATED==0){
M3.JUST_BONUS_GENERATED=5;
GodStep.playSound('bonus_appear',0,M3.SOUND);
}
var obj=this.field.cells[c].getColored();
if(this.tutorialOne.bonus){
obj=this.tutorialOne.bonus.getColored();
this.tutorialOne.bonus=null;
}
if(obj){
if(!obj.isBonus){
obj.setAsBonus();
c=parseInt(Math.random()*(this.field.cells.length-1));
this.bonusCount--;
}else{
c++;
}
}else{
c++;
}
if(c==this.field.cells.length){
c=0;
}
}
}
};
pro.h_mouse=function(e){
var t=e.content.target;
if(t){
switch(e.type){
case GodStep.FRAME_DOWN:
t.soul.keyboard.focus();
break;
case GodStep.FRAME_UP:
t.b_pause.isDown=false;
t.b_pause.Scale=1;
break;
}
}
};
pro.h_cells=function(e){
var cell=e.content.data;
var t=e.target;
var p=t.parent;
var point,overCell2;
var overCell,dx,dy,s,count,selected;
var cells=t.cellsXY;
if(!p.isCanMove||p.isStepsEnded||p.isFinishLevel||p.justDroped||p.pause.visible)return;
switch(e.type){
case GodStep.FRAME_MOVE:
if(p.cellDown){
if(e.content){
if(e.content.getLocalPosition){
point=e.content.getLocalPosition(t);
point=e.content.getLocalPosition(t);
overCell=t.getCellByPoint(point,true);
overCell2=t.getCellByPoint(point,false);
if(overCell){
dx=Math.abs(overCell.xi-p.cellLast.xi);
dy=Math.abs(overCell.yi-p.cellLast.yi);
if(dy<=1&&dx<=1){
if(!overCell.isSelected){
if(overCell.isEqual(p.cellDown)){
if(overCell.setAsSelected(true)){
GodStep.playSound('select',0,M3.SOUND);
p.selected.push(overCell);
count=parseInt((p.selected.length-1)/3);
overCell.cost=200+count*50;
overCell.setCost(overCell.cost);
p.field.addLine(p.cellLast,overCell);
p.cellLast=overCell;
}
}
}
}
}
if(overCell2){
if(p.selected.length>1){
var prev=p.selected[p.selected.length-2];
if(prev==overCell2){
p.cellLast.setAsSelected(false);
GodStep.playSound('select',0,M3.SOUND);
p.selected.splice(p.selected.length-1,1);
p.cellLast=p.selected[p.selected.length-1];
p.field.removeLastLine();
}
}
}
}
}
}
break;
case Games.CELL_DOWN:
if(p.selected.length==0){
p.selected=[];
if(cell.setAsSelected(true)){
GodStep.playSound('select',0,M3.SOUND);
p.cellDown=cell;
p.cellLast=cell;
cell.cost=200;
cell.setCost(cell.cost);
p.selected.push(cell);
}
}
break;
case GodStep.FRAME_UP:
case Games.CELL_UP:
p.bonusWaitTimer=40;
if(p.cellDown){
p.cellDown.setAsSelected(false);
p.cellDown=null;
}
var points=0;
var skip=false;
if(p.selected.length>2){
if(p.tutorialOne.visible){
if(p.tutorialOne.isComplete(p.selected)){
p.tutorialOne.finish();
if(M3.LAST_LEVEL_SELECTED!=1&&M3.LAST_LEVEL_SELECTED!=4&&M3.LAST_LEVEL_SELECTED!=6&&M3.LAST_LEVEL_SELECTED!=13&&M3.LAST_LEVEL_SELECTED!=21){
p.tutorial.visible=true;
p.tutorial.alpha=0;
}
}else{
for(s=0;s<p.selected.length;s++){
p.selected[s].setAsSelected(false);
}
p.field.removeAllLines();
skip=true;
}
}
if(!skip){
GodStep.playSound('match',0,M3.SOUND);
var isBonus=false;
var bonuses=[];
if(p.isBonuses){
p.bonusCount+=parseInt(p.selected.length/7);
}
for(s=0;s<p.selected.length;s++){
selected=p.selected[s];
points+=selected.cost;
selected.setAsSelected(false);
if(selected.getBonus()){
bonuses.push(selected.getBonus());
isBonus=true;
selected.getBonus().removeBonus();
}
p.points+=t.removeBlocksAndDirt(selected,(s==p.selected.length-1&&isBonus));
}
p.steps--;
if(isBonus){
for(var b=0;b<bonuses.length;b++){
p.destroyBonusFromCell(p.selected[p.selected.length-bonuses.length+b],bonuses[b]);
}
}
p.stepText.setText(p.steps+'');p.stepText.updateText();p.stepText.x=p.W*.5-p.stepText.width/2;
}
}else{
GodStep.playSound('select',0,M3.SOUND);
for(s=0;s<p.selected.length;s++){
p.selected[s].setAsSelected(false);
}
}
p.field.removeAllLines();
p.selected=[];
p.points+=points;
p.pointText.setText(p.points+'');
p.pointText.updateText();p.pointText.x=p.W*.827-p.pointText.width/2;
if(p.points>=p.params.points&&p.params.points!=0){
p.levelEnd();
}else
if(p.isHaveDirt){
if(p.steps==0){
p.gameOver();
}
}else{
if(p.steps==0){
p.gameOver();
}
}
p.isCanFindMatchThree=true;
break;
}
};
pro.gameOver=function(){
this.isStepsEnded=true;
this.stepEndTimer=290;
M3.NEW_RECORD=(this.points>this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]);
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]=Math.max(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1],this.points);
};
pro.levelEnd=function(){
if(!this.isFinishLevel){
this.isFinishLevel=true;
this.isStepsEnded=false;
this.isBonuses=true;
if(this.steps==0){
this.bonusFinalTimer=100;
}else{
this.bonusFinalTimer=230;
}
this.isBonusFinalEnd=false;
this.stepEndTimer=290;
this.levelEndTimer=90;
this.isEndGenerateBonuses=true;
}
};
pro.destroyBonusFromCell=function(c,bonus,isDestroy){
var pp;
if(!bonus){
return;
}
if(!bonus.isKilled){
if(M3.JUST_BONUS_PWNED==0){
M3.JUST_BONUS_PWNED=5;
GodStep.playSound('bonus_row',0,M3.SOUND);
}
bonus.isKilled=true;
var field=this.field;
var cells=this.field.cellsXY;
this.points+=700;
var bonusCell=c;
if(bonusCell==null){
bonusCell=bonus.cell;
}
var cell;
if(bonus.isVertical){
for(var i=0;i<field.cellCountY;i++){
cell=cells[i][bonusCell.xi];
if(i!=bonusCell.yi){
if(cell.getColored()){
this.destroyBonusFromCell(null,cell.getBonus());
pp=field.removeBlocksAndDirt(cell,true)+50;
this.points+=pp;
cell.setCost(pp);
}
}
}
}else{
for(var j=0;j<field.cellCountX;j++){
cell=cells[bonusCell.yi][j];
if(j!=bonusCell.xi){
if(cell.getColored()){
this.destroyBonusFromCell(null,cell.getBonus());
pp=field.removeBlocksAndDirt(cell,true)+50;
this.points+=pp;
cell.setCost(pp);
}
}
}
}
}
};
pro.destroyBonus=function(bonus){
var field=this.field;
var cells=this.field.cellsXY;
var cell;
if(bonus){
this.points+=700;
var bonusCell=bonus.cell;
if(bonus.isVertical){
for(var i=0;i<field.cellCountY;i++){
cell=cells[i][bonusCell.xi];
if(i!=bonusCell.yi){
if(cell.getColored()){
this.points+=field.removeBlocksAndDirt(cell);
this.points+=50;
}
}
}
}else{
for(var j=0;j<field.cellCountX;j++){
cell=cells[bonusCell.yi][j];
if(j!=bonusCell.xi){
if(cell.getColored()){
this.points+=field.removeBlocksAndDirt(cell);
this.points+=50;
}
}
}
}
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_pause:
GodStep.playSound('button',0,M3.SOUND);
if(M3.DEVMODE){
s.screenTo([s.dev],p);
}else{
p.pause.init();
}
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.tutorial.Scale=value;
this.tutorialOne.Scale=value;
this.pause.Scale=value;
this.scale.x=this.scale.y=value;
this.background.rescale(value);
var dy=this.soul.OH-this.soul.H;
this.b_pause.y=(this.soul.H*.962+dy/2)/value;
this.hud.y=(-dy/2)/value;
this.console.y=(this.soul.H*.85+dy/2)/value;
this.field.scale.x=this.field.scale.y=Math.min(1.25,1+(this.soul.OH-this.soul.H)/this.soul.H*1.13);
this.field.x=(this.W-this.field.W*M3.CELLW_SCALE*this.field.scale.x)*.5;
this.field.y=this.H-this.field.x*1.05-this.field.H*.989*this.field.scale.x;
}
});
M3.FontLoader=function(assetURLs,crossorigin){
new M3.BitmapFontLoader();
};
extend(M3.FontLoader,PIXI.AssetLoader);
M3.FontString='<font>'+
'<info face="Font2" size="71" />'+
'<common lineHeight="71" scaleW="681" scaleH="682" pages="1" />'+
'<pages>'+
'<page id="0" file="Font2.png" />'+
'</pages>'+
'<chars count="190">'+
'<char id="33" x="654" y="279" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- ! -->'+
'<char id="34" x="112" y="348" width="18" height="14" xoffset="0" yoffset="20" xadvance="22" /><!-- " -->'+
'<char id="35" x="254" y="67" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- # -->'+
'<char id="36" x="254" y="132" width="28" height="59" xoffset="0" yoffset="16" xadvance="32" /><!-- $ -->'+
'<char id="37" x="0" y="53" width="53" height="43" xoffset="0" yoffset="28" xadvance="57" /><!-- % -->'+
'<char id="38" x="160" y="456" width="32" height="53" xoffset="0" yoffset="19" xadvance="36" /><!-- & -->'+
'<char id="39" x="494" y="540" width="8" height="14" xoffset="0" yoffset="20" xadvance="12" /><!-- -->'+
'<char id="40" x="632" y="69" width="14" height="55" xoffset="0" yoffset="18" xadvance="18" /><!-- ( -->'+
'<char id="41" x="632" y="0" width="14" height="55" xoffset="0" yoffset="18" xadvance="18" /><!-- ) -->'+
'<char id="42" x="531" y="189" width="22" height="22" xoffset="0" yoffset="24" xadvance="26" /><!-- * -->'+
'<char id="43" x="211" y="100" width="18" height="18" xoffset="0" yoffset="43" xadvance="22" /><!-- + -->'+
'<char id="44" x="295" y="399" width="8" height="16" xoffset="0" yoffset="63" xadvance="12" /><!-- , -->'+
'<char id="45" x="160" y="575" width="11" height="6" xoffset="0" yoffset="53" xadvance="15" /><!-- - -->'+
'<char id="46" x="164" y="320" width="8" height="8" xoffset="0" yoffset="63" xadvance="12" /><!-- . -->'+
'<char id="47" x="418" y="239" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- / -->'+
'<char id="48" x="378" y="65" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 0 -->'+
'<char id="49" x="632" y="574" width="14" height="51" xoffset="0" yoffset="20" xadvance="18" /><!-- 1 -->'+
'<char id="50" x="376" y="408" width="26" height="52" xoffset="0" yoffset="19" xadvance="30" /><!-- 2 -->'+
'<char id="51" x="416" y="369" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 3 -->'+
'<char id="52" x="294" y="577" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- 4 -->'+
'<char id="53" x="377" y="541" width="26" height="52" xoffset="0" yoffset="20" xadvance="30" /><!-- 5 -->'+
'<char id="54" x="376" y="474" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 6 -->'+
'<char id="55" x="566" y="266" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- 7 -->'+
'<char id="56" x="335" y="399" width="27" height="53" xoffset="0" yoffset="19" xadvance="31" /><!-- 8 -->'+
'<char id="57" x="338" y="65" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 9 -->'+
'<char id="58" x="601" y="130" width="8" height="24" xoffset="0" yoffset="40" xadvance="12" /><!-- : -->'+
'<char id="59" x="567" y="449" width="8" height="31" xoffset="0" yoffset="40" xadvance="12" /><!-- ; -->'+
'<char id="60" x="567" y="169" width="19" height="34" xoffset="0" yoffset="36" xadvance="23" /><!-- < -->'+
'<char id="61" x="127" y="653" width="18" height="15" xoffset="0" yoffset="49" xadvance="22" /><!-- = -->'+
'<char id="62" x="567" y="217" width="19" height="34" xoffset="0" yoffset="36" xadvance="23" /><!-- > -->'+
'<char id="63" x="338" y="132" width="26" height="47" xoffset="0" yoffset="24" xadvance="30" /><!-- ? -->'+
'<char id="64" x="0" y="382" width="44" height="49" xoffset="0" yoffset="26" xadvance="48" /><!-- @ -->'+
'<char id="65" x="167" y="67" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- A -->'+
'<char id="66" x="297" y="0" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- B -->'+
'<char id="67" x="252" y="289" width="29" height="53" xoffset="0" yoffset="19" xadvance="33" /><!-- C -->'+
'<char id="68" x="337" y="197" width="27" height="51" xoffset="0" yoffset="20" xadvance="31" /><!-- D -->'+
'<char id="69" x="567" y="539" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- E -->'+
'<char id="70" x="567" y="331" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- F -->'+
'<char id="71" x="167" y="0" width="30" height="53" xoffset="0" yoffset="19" xadvance="34" /><!-- G -->'+
'<char id="72" x="292" y="512" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- H -->'+
'<char id="73" x="659" y="138" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- I -->'+
'<char id="74" x="602" y="372" width="15" height="51" xoffset="0" yoffset="20" xadvance="19" /><!-- J -->'+
'<char id="75" x="205" y="523" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- K -->'+
'<char id="76" x="566" y="606" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- L -->'+
'<char id="77" x="118" y="0" width="35" height="51" xoffset="0" yoffset="20" xadvance="39" /><!-- M -->'+
'<char id="78" x="339" y="0" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- N -->'+
'<char id="79" x="254" y="0" width="29" height="53" xoffset="0" yoffset="19" xadvance="33" /><!-- O -->'+
'<char id="80" x="378" y="173" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- P -->'+
'<char id="81" x="252" y="356" width="29" height="60" xoffset="0" yoffset="19" xadvance="33" /><!-- Q -->'+
'<char id="82" x="295" y="272" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- R -->'+
'<char id="83" x="295" y="205" width="28" height="53" xoffset="0" yoffset="19" xadvance="32" /><!-- S -->'+
'<char id="84" x="377" y="607" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- T -->'+
'<char id="85" x="208" y="288" width="30" height="52" xoffset="0" yoffset="20" xadvance="34" /><!-- U -->'+
'<char id="86" x="208" y="223" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- V -->'+
'<char id="87" x="0" y="445" width="44" height="51" xoffset="0" yoffset="20" xadvance="48" /><!-- W -->'+
'<char id="88" x="207" y="588" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- X -->'+
'<char id="89" x="249" y="512" width="29" height="51" xoffset="0" yoffset="20" xadvance="33" /><!-- Y -->'+
'<char id="90" x="417" y="502" width="25" height="51" xoffset="0" yoffset="20" xadvance="29" /><!-- Z -->'+
'<char id="91" x="602" y="513" width="16" height="55" xoffset="0" yoffset="18" xadvance="20" /><!-- [ -->'+
'<char id="92" x="632" y="437" width="14" height="51" xoffset="0" yoffset="20" xadvance="18" /><!--  -->'+
'<char id="93" x="602" y="0" width="16" height="55" xoffset="0" yoffset="18" xadvance="20" /><!-- ] -->'+
'<char id="94" x="55" y="649" width="23" height="19" xoffset="0" yoffset="27" xadvance="27" /><!-- ^ -->'+
'<char id="95" x="0" y="650" width="22" height="6" xoffset="0" yoffset="65" xadvance="26" /><!-- _ -->'+
'<char id="96" x="159" y="655" width="12" height="12" xoffset="0" yoffset="20" xadvance="16" /><!-- ` -->'+
'<char id="97" x="455" y="629" width="24" height="38" xoffset="0" yoffset="34" xadvance="28" /><!-- a -->'+
'<char id="98" x="456" y="502" width="24" height="52" xoffset="0" yoffset="20" xadvance="28" /><!-- b -->'+
'<char id="99" x="493" y="422" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- c -->'+
'<char id="100" x="416" y="436" width="25" height="52" xoffset="0" yoffset="20" xadvance="29" /><!-- d -->'+
'<char id="101" x="493" y="568" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- e -->'+
'<char id="102" x="601" y="604" width="17" height="49" xoffset="0" yoffset="22" xadvance="21" /><!-- f -->'+
'<char id="103" x="295" y="337" width="28" height="48" xoffset="0" yoffset="34" xadvance="32" /><!-- g -->'+
'<char id="104" x="531" y="433" width="22" height="51" xoffset="0" yoffset="20" xadvance="26" /><!-- h -->'+
'<char id="105" x="659" y="344" width="8" height="49" xoffset="0" yoffset="22" xadvance="12" /><!-- i -->'+
'<char id="106" x="632" y="502" width="14" height="58" xoffset="0" yoffset="22" xadvance="18" /><!-- j -->'+
'<char id="107" x="456" y="193" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- k -->'+
'<char id="108" x="632" y="307" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- l -->'+
'<char id="109" x="67" y="53" width="37" height="37" xoffset="0" yoffset="34" xadvance="41" /><!-- m -->'+
'<char id="110" x="530" y="606" width="22" height="37" xoffset="0" yoffset="34" xadvance="26" /><!-- n -->'+
'<char id="111" x="493" y="620" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- o -->'+
'<char id="112" x="456" y="65" width="24" height="48" xoffset="0" yoffset="34" xadvance="28" /><!-- p -->'+
'<char id="113" x="417" y="567" width="25" height="48" xoffset="0" yoffset="34" xadvance="29" /><!-- q -->'+
'<char id="114" x="601" y="79" width="17" height="37" xoffset="0" yoffset="34" xadvance="21" /><!-- r -->'+
'<char id="115" x="456" y="568" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- s -->'+
'<char id="116" x="601" y="449" width="17" height="50" xoffset="0" yoffset="22" xadvance="21" /><!-- t -->'+
'<char id="117" x="494" y="367" width="22" height="38" xoffset="0" yoffset="34" xadvance="26" /><!-- u -->'+
'<char id="118" x="418" y="147" width="24" height="37" xoffset="0" yoffset="34" xadvance="28" /><!-- v -->'+
'<char id="119" x="110" y="550" width="36" height="37" xoffset="0" yoffset="33" xadvance="40" /><!-- w -->'+
'<char id="120" x="417" y="629" width="24" height="37" xoffset="0" yoffset="33" xadvance="28" /><!-- x -->'+
'<char id="121" x="418" y="48" width="24" height="46" xoffset="0" yoffset="33" xadvance="28" /><!-- y -->'+
'<char id="122" x="567" y="79" width="20" height="37" xoffset="0" yoffset="33" xadvance="24" /><!-- z -->'+
'<char id="123" x="601" y="238" width="18" height="55" xoffset="0" yoffset="17" xadvance="22" /><!-- { -->'+
'<char id="124" x="660" y="407" width="6" height="59" xoffset="0" yoffset="15" xadvance="10" /><!-- | -->'+
'<char id="125" x="600" y="169" width="18" height="55" xoffset="0" yoffset="17" xadvance="22" /><!-- } -->'+
'<char id="126" x="92" y="655" width="21" height="9" xoffset="0" yoffset="38" xadvance="25" /><!-- ~ -->'+
'<char id="199" x="250" y="431" width="29" height="67" xoffset="0" yoffset="18" xadvance="33" /><!-- Ç -->'+
'<char id="213" x="251" y="577" width="29" height="64" xoffset="0" yoffset="7" xadvance="33" /><!-- Õ -->'+
'<char id="211" x="252" y="209" width="29" height="66" xoffset="0" yoffset="5" xadvance="33" /><!-- Ó -->'+
'<char id="231" x="530" y="367" width="23" height="52" xoffset="0" yoffset="33" xadvance="27" /><!-- ç -->'+
'<char id="237" x="631" y="372" width="14" height="51" xoffset="0" yoffset="19" xadvance="18" /><!-- í -->'+
'<char id="227" x="456" y="320" width="24" height="49" xoffset="0" yoffset="22" xadvance="28" /><!-- ã -->'+
'<char id="243" x="530" y="540" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- ó -->'+
'<char id="234" x="494" y="235" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- ê -->'+
'<char id="233" x="494" y="169" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- é -->'+
'<char id="228" x="456" y="258" width="24" height="48" xoffset="0" yoffset="23" xadvance="28" /><!-- ä -->'+
'<char id="223" x="376" y="341" width="26" height="53" xoffset="0" yoffset="18" xadvance="30" /><!-- ß -->'+
'<char id="246" x="494" y="107" width="23" height="48" xoffset="0" yoffset="23" xadvance="27" /><!-- ö -->'+
'<char id="252" x="531" y="62" width="22" height="48" xoffset="0" yoffset="23" xadvance="26" /><!-- ü -->'+
'<char id="241" x="531" y="0" width="22" height="48" xoffset="0" yoffset="22" xadvance="26" /><!-- ñ -->'+
'<char id="161" x="655" y="203" width="8" height="44" xoffset="0" yoffset="18" xadvance="12" /><!-- ¡ -->'+
'<char id="191" x="567" y="396" width="21" height="39" xoffset="0" yoffset="23" xadvance="25" /><!-- ¿ -->'+
'<char id="200" x="567" y="0" width="21" height="65" xoffset="0" yoffset="5" xadvance="25" /><!-- È -->'+
'<char id="195" x="208" y="354" width="30" height="63" xoffset="0" yoffset="7" xadvance="34" /><!-- Ã -->'+
'<char id="350" x="293" y="430" width="28" height="67" xoffset="0" yoffset="18" xadvance="32" /><!-- Ş -->'+
'<char id="220" x="210" y="132" width="30" height="63" xoffset="0" yoffset="8" xadvance="34" /><!-- Ü -->'+
'<char id="351" x="494" y="474" width="23" height="52" xoffset="0" yoffset="34" xadvance="27" /><!-- ş -->'+
'<char id="287" x="296" y="121" width="28" height="62" xoffset="0" yoffset="20" xadvance="32" /><!-- ğ -->'+
'<char id="280" x="531" y="266" width="21" height="66" xoffset="0" yoffset="20" xadvance="25" /><!-- Ę -->'+
'<char id="281" x="494" y="41" width="23" height="52" xoffset="0" yoffset="34" xadvance="27" /><!-- ę -->'+
'<char id="261" x="456" y="127" width="24" height="52" xoffset="0" yoffset="34" xadvance="28" /><!-- ą -->'+
'<char id="321" x="456" y="0" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- Ł -->'+
'<char id="322" x="602" y="307" width="16" height="51" xoffset="0" yoffset="20" xadvance="20" /><!-- ł -->'+
'<char id="324" x="531" y="124" width="22" height="51" xoffset="0" yoffset="20" xadvance="26" /><!-- ń -->'+
'<char id="323" x="378" y="238" width="26" height="65" xoffset="0" yoffset="6" xadvance="30" /><!-- Ń -->'+
'<char id="347" x="494" y="301" width="23" height="52" xoffset="0" yoffset="20" xadvance="27" /><!-- ś -->'+
'<char id="1072" x="418" y="198" width="24" height="27" xoffset="0" yoffset="45" xadvance="28" /><!-- а -->'+
'<char id="1073" x="337" y="341" width="25" height="43" xoffset="0" yoffset="29" xadvance="29" /><!-- б -->'+
'<char id="1074" x="418" y="108" width="24" height="25" xoffset="0" yoffset="46" xadvance="28" /><!-- в -->'+
'<char id="1075" x="567" y="130" width="20" height="25" xoffset="0" yoffset="46" xadvance="24" /><!-- г -->'+
'<char id="1076" x="379" y="0" width="26" height="34" xoffset="0" yoffset="46" xadvance="30" /><!-- д -->'+
'<char id="1077" x="531" y="498" width="21" height="27" xoffset="0" yoffset="45" xadvance="25" /><!-- е -->'+
'<char id="1078" x="0" y="610" width="41" height="26" xoffset="0" yoffset="45" xadvance="45" /><!-- ж -->'+
'<char id="1079" x="566" y="498" width="21" height="27" xoffset="0" yoffset="45" xadvance="25" /><!-- з -->'+
'<char id="1080" x="167" y="132" width="29" height="25" xoffset="0" yoffset="46" xadvance="33" /><!-- и -->'+
'<char id="1082" x="337" y="262" width="27" height="26" xoffset="0" yoffset="45" xadvance="31" /><!-- к -->'+
'<char id="1083" x="335" y="466" width="27" height="26" xoffset="0" yoffset="46" xadvance="31" /><!-- л -->'+
'<char id="1084" x="111" y="382" width="35" height="25" xoffset="0" yoffset="46" xadvance="39" /><!-- м -->'+
'<char id="1085" x="166" y="223" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- н -->'+
'<char id="1086" x="378" y="132" width="26" height="27" xoffset="0" yoffset="45" xadvance="30" /><!-- о -->'+
'<char id="1087" x="294" y="642" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- п -->'+
'<char id="1088" x="336" y="565" width="27" height="41" xoffset="0" yoffset="44" xadvance="31" /><!-- р -->'+
'<char id="1089" x="531" y="225" width="22" height="27" xoffset="0" yoffset="45" xadvance="26" /><!-- с -->'+
'<char id="1090" x="419" y="0" width="23" height="25" xoffset="0" yoffset="46" xadvance="27" /><!-- т -->'+
'<char id="1091" x="296" y="67" width="28" height="40" xoffset="0" yoffset="46" xadvance="32" /><!-- у -->'+
'<char id="1092" x="115" y="278" width="35" height="56" xoffset="0" yoffset="29" xadvance="39" /><!-- ф -->'+
'<char id="1093" x="118" y="171" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- х -->'+
'<char id="1094" x="211" y="52" width="29" height="34" xoffset="0" yoffset="46" xadvance="33" /><!-- ц -->'+
'<char id="1095" x="337" y="302" width="27" height="25" xoffset="0" yoffset="46" xadvance="31" /><!-- ч -->'+
'<char id="1096" x="55" y="610" width="41" height="25" xoffset="0" yoffset="46" xadvance="45" /><!-- ш -->'+
'<char id="1097" x="0" y="562" width="42" height="34" xoffset="0" yoffset="46" xadvance="46" /><!-- щ -->'+
'<char id="1100" x="456" y="383" width="24" height="25" xoffset="0" yoffset="46" xadvance="28" /><!-- ь -->'+
'<char id="1099" x="68" y="0" width="36" height="25" xoffset="0" yoffset="46" xadvance="40" /><!-- ы -->'+
'<char id="1101" x="494" y="0" width="23" height="27" xoffset="0" yoffset="45" xadvance="27" /><!-- э -->'+
'<char id="1102" x="56" y="563" width="37" height="27" xoffset="0" yoffset="45" xadvance="41" /><!-- ю -->'+
'<char id="1103" x="336" y="620" width="27" height="25" xoffset="0" yoffset="46" xadvance="31" /><!-- я -->'+
'<char id="1052" x="0" y="278" width="49" height="38" xoffset="0" yoffset="33" xadvance="53" /><!-- М -->'+
'<char id="1040" x="66" y="110" width="38" height="39" xoffset="0" yoffset="32" xadvance="42" /><!-- А -->'+
'<char id="1043" x="416" y="317" width="26" height="38" xoffset="0" yoffset="33" xadvance="30" /><!-- Г -->'+
'<char id="1047" x="334" y="511" width="27" height="40" xoffset="0" yoffset="32" xadvance="31" /><!-- З -->'+
'<char id="1048" x="59" y="330" width="39" height="38" xoffset="0" yoffset="33" xadvance="43" /><!-- И -->'+
'<char id="1053" x="0" y="510" width="42" height="38" xoffset="0" yoffset="33" xadvance="46" /><!-- Н -->'+
'<char id="1051" x="159" y="601" width="34" height="39" xoffset="0" yoffset="33" xadvance="38" /><!-- Л -->'+
'<char id="1062" x="58" y="382" width="39" height="48" xoffset="0" yoffset="33" xadvance="43" /><!-- Ц -->'+
'<char id="1059" x="110" y="496" width="36" height="40" xoffset="0" yoffset="33" xadvance="40" /><!-- У -->'+
'<char id="1050" x="117" y="215" width="35" height="39" xoffset="0" yoffset="32" xadvance="39" /><!-- К -->'+
'<char id="1041" x="166" y="171" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- Б -->'+
'<char id="1061" x="66" y="163" width="38" height="38" xoffset="0" yoffset="33" xadvance="42" /><!-- Х -->'+
'<char id="1063" x="110" y="601" width="35" height="38" xoffset="0" yoffset="33" xadvance="39" /><!-- Ч -->'+
'<char id="1044" x="111" y="421" width="35" height="48" xoffset="0" yoffset="33" xadvance="39" /><!-- Д -->'+
'<char id="1042" x="206" y="456" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- В -->'+
'<char id="1055" x="63" y="278" width="38" height="38" xoffset="0" yoffset="33" xadvance="42" /><!-- П -->'+
'<char id="1057" x="118" y="65" width="35" height="40" xoffset="0" yoffset="32" xadvance="39" /><!-- С -->'+
'<char id="1056" x="211" y="0" width="29" height="38" xoffset="0" yoffset="33" xadvance="33" /><!-- Р -->'+
'<char id="1058" x="160" y="402" width="33" height="40" xoffset="0" yoffset="31" xadvance="37" /><!-- Т -->'+
'<char id="1054" x="65" y="224" width="38" height="40" xoffset="0" yoffset="32" xadvance="42" /><!-- О -->'+
'<char id="304" x="633" y="203" width="8" height="62" xoffset="0" yoffset="9" xadvance="12" /><!-- İ -->'+
'<char id="1068" x="164" y="268" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- Ь -->'+
'<char id="1046" x="0" y="0" width="54" height="39" xoffset="0" yoffset="32" xadvance="58" /><!-- Ж -->'+
'<char id="1045" x="160" y="523" width="31" height="38" xoffset="0" yoffset="33" xadvance="35" /><!-- Е -->'+
'<char id="224" x="455" y="436" width="24" height="52" xoffset="0" yoffset="20" xadvance="28" /><!-- à -->'+
'<char id="236" x="632" y="138" width="13" height="51" xoffset="0" yoffset="20" xadvance="17" /><!-- ì -->'+
'<char id="1060" x="56" y="510" width="40" height="39" xoffset="0" yoffset="32" xadvance="44" /><!-- Ф -->'+
'<char id="1064" x="0" y="172" width="52" height="38" xoffset="0" yoffset="33" xadvance="56" /><!-- Ш -->'+
'<char id="1065" x="0" y="110" width="52" height="48" xoffset="0" yoffset="33" xadvance="56" /><!-- Щ -->'+
'<char id="1066" x="58" y="444" width="39" height="38" xoffset="0" yoffset="33" xadvance="43" /><!-- Ъ -->'+
'<char id="1067" x="0" y="330" width="45" height="38" xoffset="0" yoffset="33" xadvance="49" /><!-- Ы -->'+
'<char id="1069" x="160" y="348" width="34" height="40" xoffset="0" yoffset="32" xadvance="38" /><!-- Э -->'+
'<char id="1070" x="0" y="224" width="51" height="40" xoffset="0" yoffset="32" xadvance="55" /><!-- Ю -->'+
'<char id="1071" x="118" y="119" width="35" height="38" xoffset="0" yoffset="33" xadvance="39" /><!-- Я -->'+
'<char id="32" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="21" /><!--   -->'+
'<char id="9" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="168" /><!--   -->'+
'</chars>'+
'<kernings count="0">'+
'</kernings>'+
'</font>';
M3.BitmapFontLoader=function(){
var xmlDoc;
if(window.DOMParser)
{
var parser=new DOMParser();
xmlDoc=parser.parseFromString(M3.FontString,"text/xml");
}
else
{
xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
xmlDoc.async=false;
xmlDoc.loadXML(M3.FontString);
}
var responseXML=xmlDoc;
var textureUrl=this.baseUrl+responseXML.getElementsByTagName('page')[0].getAttribute('file');
this.texture=GodStep.textures['Font2'].baseTexture;
var data={};
var info=responseXML.getElementsByTagName('info')[0];
var common=responseXML.getElementsByTagName('common')[0];
data.font=info.getAttribute('face');
data.size=parseInt(info.getAttribute('size'),10);
data.lineHeight=parseInt(common.getAttribute('lineHeight'),10);
data.chars={};
var letters=responseXML.getElementsByTagName('char');
for(var i=0;i<letters.length;i++)
{
var charCode=parseInt(letters[i].getAttribute('id'),10);
var textureRect=new PIXI.Rectangle(
parseInt(letters[i].getAttribute('x'),10),
parseInt(letters[i].getAttribute('y'),10),
parseInt(letters[i].getAttribute('width'),10),
parseInt(letters[i].getAttribute('height'),10)
);
data.chars[charCode]={
xOffset:parseInt(letters[i].getAttribute('xoffset'),10),
yOffset:parseInt(letters[i].getAttribute('yoffset'),10)+20,
xAdvance:parseInt(letters[i].getAttribute('xadvance'),10),
kerning:{},
texture:PIXI.TextureCache[charCode]=new PIXI.Texture(this.texture,textureRect)
};
}
var kernings=responseXML.getElementsByTagName('kerning');
for(i=0;i<kernings.length;i++)
{
var first=parseInt(kernings[i].getAttribute('first'),10);
var second=parseInt(kernings[i].getAttribute('second'),10);
var amount=parseInt(kernings[i].getAttribute('amount'),10);
data.chars[second].kerning[first]=amount;
}
PIXI.BitmapText.fonts[data.font]=data;
};
extend(M3.BitmapFontLoader,PIXI.BitmapFontLoader);
M3.Background=function(parent,name){
this.soul=parent.soul;
this.p=parent;
GodStep.Frame.call(this,'Background',parent.W,parent.H);
this.addChild(this.img=new M3.Img(name,parent.startS,this.W*.5,this.H*.5,.5));
};
extend(M3.Background,GodStep.Frame);
pro.rescale=function(s){
this.scale.x=this.scale.y=this.soul.OH/this.soul.H;
this.x=+(this.soul.W-this.soul.W*this.scale.x)/2;
this.y=-(this.soul.OH-this.soul.H)*.5/s;
};
M3.Settings=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Settings',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_o'));
this.addChild(this.musicLabel=new M3.Img('icon_music',S,this.W*.23,this.H*.565,.5));
this.addChild(this.soundLabel=new M3.Img('icon_sound',S,this.W*.23,this.H*.37,.5));
this.addChild(this.pers=new M3.Img('pers_o',S,this.W*.23,this.H*.1,.5));
this.addChild(this.optLabel=new M3.Text('OPTIONS',200*S,this.W*.5,this.H*.2,'left',0xffffff));
this.addChild(this.musicLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.48,'left',0xffffff));
this.addChild(this.soundLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.29,'left',0xffffff));
this.addChild(this.b_music_on=new M3.ImgButton('on',null,null,this,S,this.W*.72,this.H*.56));
this.addChild(this.b_music_off=new M3.ImgButton('off',null,null,this,S,this.W*.72,this.H*.56));
this.addChild(this.b_sound_on=new M3.ImgButton('on',null,null,this,S,this.W*.72,this.H*.37));
this.addChild(this.b_sound_off=new M3.ImgButton('off',null,null,this,S,this.W*.72,this.H*.37));
this.addChild(this.b_back=new M3.ImgButton('b_back','b_shadow',1,this,S,this.W*.85,this.H*.12));
this.addChild(this.b_tutor_on=new M3.ImgButton('tutorial_on',null,null,this,S,this.W*.23,this.H*.75));
this.addChild(this.b_tutor_off=new M3.ImgButton('tutorial_off',null,null,this,S,this.W*.23,this.H*.75));
this.addChild(this.tutorLabel=new M3.Text('TUTORIAL ON',120*S,this.W*.35,this.H*.69,'left',0xffffff));
this.b_tutor_on.scaleble=this.b_tutor_off.scaleble=this.b_music_off.scaleble=
this.b_sound_on.scaleble=
this.b_music_on.scaleble=
this.b_sound_off.scaleble=false;
this.visible=false;
this.b_tutor_off.visible=this.b_sound_off.visible=this.b_music_off.visible=false;
addEvent(this.b_tutor_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_tutor_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Settings,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.b_music_off.visible=!M3.MUSIC;
this.b_music_on.visible=M3.MUSIC;
this.b_sound_off.visible=!M3.SOUND;
this.b_sound_on.visible=M3.SOUND;
if(M3.MUSIC){
this.musicLabel.setText('ON');this.musicLabel.updateText();
}else{
this.musicLabel.setText('OFF');this.musicLabel.updateText();
}
if(M3.SOUND){
this.soundLabel.setText('ON');this.soundLabel.updateText();
}else{
this.soundLabel.setText('OFF');this.soundLabel.updateText();
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_back.isDown=false;
t.b_back.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_tutor_off:
p.b_tutor_off.visible=false;
p.b_tutor_on.visible=true;
p.tutorLabel.setText('TUTORIAL ON');
M3.TUTORIAL=true;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_tutor_on:
p.b_tutor_on.visible=false;
p.b_tutor_off.visible=true;
p.tutorLabel.setText('TUTORIAL OFF');
M3.TUTORIAL=false;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_music_on:
M3.MUSIC=false;
GodStep.playSound('button',0,M3.SOUND);
GodStep.volumeSound('theme',M3.MUSIC);
p.b_music_on.visible=false;
p.b_music_off.visible=true;
p.musicLabel.setText('OFF');
break;
case p.b_music_off:
M3.MUSIC=true;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('theme',null,M3.MUSIC);
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.musicLabel.setText('ON');
break;
case p.b_sound_on:
M3.SOUND=false;
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
p.soundLabel.setText('OFF');
break;
case p.b_sound_off:
M3.SOUND=true;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.soundLabel.setText('ON');
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.startmenu],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.optLabel.y=this.b_back.y=-(this.soul.OH-this.soul.H)*.5/value+this.soul.H*.1/value;
this.optLabel.y-=this.soul.H*.07/value;
this.b_back.y=(this.soul.H*.88+dy/2)/value;
this.pers.y=(-dy/2+this.soul.H*.12)/value;
this.back.rescale(value);
}
});
M3.LevButton=function(img,scaleS,px,py,text,textSize,tdx,tdy,tint){
var tex=GodStep.textures[img];
var startS=scaleS*M3.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
if(text){
this.addChild(this.label=new M3.Text(text,(textSize||100),0,0,'center',tint));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.downScale=.95;
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.LevButton,GodStep.Frame);
M3.LevButton.COLORS=[0xe77719,0xb1321e,0x608b28,0xc22929,0xc1282c];
pro.setAsComplete=function(){
var id=this.ID-parseInt(this.ID/5)*5+1;
this.img.setTexture(GodStep.textures['unlock']);
this.label.tint=0;
this.isDisabled=false;
this.label.tint=0x36cffb;
this.label.updateText();
};
pro.setAsActive=function(){
var id=this.ID-parseInt(this.ID/5)*5+1;
this.img.setTexture(GodStep.textures['lock']);
this.label.tint=0xFF4079;
this.label.updateText();
this.isDisabled=false;
};
pro.destroy=function(){
this.removeChild(this.img);
delEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
delEvent(this,GodStep.FRAME_OUT,this.h_mouse);
delEvent(this,GodStep.FRAME_OVER,this.h_mouse);
delEvent(this,GodStep.FRAME_UP,this.h_mouse);
if(this.label)this.removeChild(this.label);
return this;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
this.Scale=this.downScale;
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,M3.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=this.downScale;
}
break;
}
};
M3.Replay=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Replay',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_end_fail'));
this.addChild(this.pers=new M3.Img('pers_2_end_fail',S,this.W*.3,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_1_end_fail',S,this.W*.8,this.H*.1,.5));
this.addChild(this.field=new M3.Img('field_end',S,this.W*.5,this.H*.6,.5));
this.addChild(this.field_reccord=new M3.Img('field_record',S,this.W*.5,this.H*.36,.5));
this.addChild(this.star=new M3.ImgButton('star2','star_shadow',.9,this,S,this.W*.5,this.H*.59,null,null,.1,.2));
this.field_reccord.visible=false;
this.addChild(this.b_back=new M3.ImgButton('b_menu','b_end_fail',1,this,S,this.W*.35,this.H*.83));
this.addChild(this.b_play=new M3.ImgButton('b_replay','b_end_fail',1,this,S,this.W*.65,this.H*.83));
this.addChild(this.recordLabel=new M3.Text('LEVEL',150*S,this.W*.5,this.H*.375,'left',0x465763));
this.addChild(this.levelLabel=new M3.Text('FAIL!',290*S,this.W*.5,this.H*.2,'left',0xffffff));
this.addChild(this.targetLabel=new M3.Text('TARGET',150*S,this.W*.5,this.H*.53,'left',0xffffff));
this.visible=false;
this.star.scaleble=false;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Replay,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.levelLabel.updateText();
this.levelLabel.x=this.W/2-this.levelLabel.width/2;
GodStep.playSound('loss',0,M3.SOUND);
this.recordLabel.setText('LEVEL '+(M3.LAST_LEVEL_SELECTED));
this.recordLabel.updateText();
this.recordLabel.x=this.W/2-this.recordLabel.width/2;
var leveldata=M3.LAST_LEVEL_DATA;
var dirtCount=0;
for(var i=0;i<leveldata.length-1;i++){
if(leveldata[i].name=='dirt'){
dirtCount++;
}
}
this.params=leveldata[leveldata.length-1];
var points=this.params.points+'';
var text=this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1];
this.targetLabel.setText((M3.NEW_RECORD?'NEW RECORD ':'SCORE ')+M3.Format(text+''));
if(0){
if(this.params.points>0){
this.targetLabel.setText('COLLECT '+(points.substr(0,points.length-3)+','+points.substr(points.length-3,3))+" FOR "+this.params.steps+" MOVE");
}else
if(dirtCount>0){
this.targetLabel.setText('REMOVE ALL '+dirtCount+" DIRT"+" FOR "+this.params.steps+" MOVE");
}else
if(this.params.items>0){
this.targetLabel.setText('DROP DOWN '+this.params.items+" CRYSTALS"+" FOR "+this.params.steps+" MOVE");
}
}
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2+(M3.NEW_RECORD?this.W*.11:0);
this.star.visible=M3.NEW_RECORD;
this.star.x=this.targetLabel.x-this.W*.11;
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_play.isDown=false;
t.b_back.isDown=false;
t.b_back.Scale=1;
t.b_play.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_play:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p);
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.levelselect],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.levelLabel.y=(this.soul.H*.18-dy/2)/value;
this.back.rescale(value);
}
});
M3.MovieClip=function(frames,scale,px,py,anchor){
this.frames=frames;
var tex=GodStep.textures[this.frames[0]];
GodStep.Image.call(this,tex);
this.Scale=this.startS=scale/GodStep.IMAGE_RESOLUTION*M3.SCALE;
this.currentFrame=0;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(M3.MovieClip,GodStep.Image);
pro.setToFrame=function(frame){
this.currentFrame=frame;
this.setTexture(GodStep.textures[this.frames[frame]]);
};
pro.nextFrame=function(){
this.currentFrame++;
if(this.currentFrame==this.frames.length){
this.currentFrame=0;
}
this.setTexture(GodStep.textures[this.frames[this.currentFrame]]);
return this.currentFrame;
};
M3.Tutorial=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Tutorial',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.endTimer=-1;
this.addChild(this.back=new M3.Background(this,'back_t1'));
this.addChild(this.pers=new M3.Img('pers_start_1',S,this.W*.35,this.H*.35,.5));
this.addChild(this.field=new M3.Img('field_tutorial',S,this.W*.5,this.H*.64,.5));
this.addChild(this.bubble=new M3.Img('bubble',S,this.W*.7,this.H*.3,.5));
this.addChild(this.bubbleIcon=new M3.Img('bubble',S,this.W*.7,this.H*.3,.5));
this.addChild(this.targetLabel=new M3.Text('TARGET',90*S,this.W*.5,this.H*.59,'left',0xffffff));
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
extend(M3.Tutorial,GodStep.Frame);
pro.initEnd=function(isWin){
this.isEndView=true;
this.endTimer=100;
this.visible=true;
this.alpha=0;
this.isDead=false;
this.bubbleIcon.visible=this.bubble.visible=false;
this.pers.visible=isWin;
this.targetLabel.setText(isWin?'LEVEL COMPLETE':'OUT OF MOVES');
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2;
this.field.setTexture((isWin?'win':'fail')+'_p');
};
pro.init=function(){
this.isEndView=false;
this.visible=true;
this.isDead=false;
this.alpha=1;
this.bubbleIcon.visible=this.bubble.visible=this.pers.visible=true;
this.field.setTexture('field_tutorial');
var leveldata=M3.LAST_LEVEL_DATA;
var dirtCount=0;
for(var i=0;i<leveldata.length-1;i++){
if(leveldata[i].name=='dirt'){
dirtCount++;
}
}
this.params=leveldata[leveldata.length-1];
var points=this.params.points+'';
if(this.params.points>0){
this.targetLabel.setText('Score '+M3.Format(points)+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('star');
this.pers.setTexture('pers_start_'+3);
this.back.img.setTexture('back_t'+3);
}else
if(dirtCount>0){
this.targetLabel.setText('Pop '+dirtCount+" goo-balls"+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('icon_1_'+M3.SKIN);
this.pers.setTexture('pers_start_'+1);
this.back.img.setTexture('back_t'+1);
}else
if(this.params.items>0){
this.targetLabel.setText('Collect '+this.params.items+" crystals"+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('icon_2_1');
this.pers.setTexture('pers_start_'+2);
this.back.img.setTexture('back_t'+2);
}
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2;
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
if(!t.isEndView){
t.isDead=true;
}
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.back.rescale(value);
}
});
M3.TutorialOne=function(soul,gameplay){
this.soul=soul;
this.gameplay=gameplay;
GodStep.Frame.call(this,'TutorialOne',soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.addChild(this.container2=new PIXI.DisplayObjectContainer());
this.container.addChild(this.back=new M3.Background(this,'back_menu'));this.back.alpha=.5;
this.animTimer=0;
this.animCursor=0;
this.animCount=0;
this.animLine=[];
this.container2.addChild(this.pers=new M3.Img('tutorial_sheriff',S,this.W*.29,this.H*.33,.5));
this.container2.addChild(this.frame=new M3.Img('frame_tutorial',S*1.38,this.W*.7,this.H*.25,.5));
this.container2.addChild(this.targetLabel=new M3.Text('TEXT TEXT TEXT\nTEXT TEXT\nTEXT!!!',85*S,this.W*.52,this.H*.15,'left',0xffffff));
this.addChild(this.arm=new M3.MovieClip(['arm_1','arm_2'],S,this.W*.5,this.H*.5));
this.addChild(this.maska=this.createGraphics('maska'));
var field=gameplay.field;
this.maska.clear();
this.maska.beginFill(0,1);
var v=0.03;
this.maska.drawRect(0,-this.soul.H*v,this.soul.W,this.soul.H*.555+this.soul.H*v);
this.maska.endFill();
this.visible=false;
this.texts=['Howdy!\nSwipe to wake up the\nwizzies and make magic',
'You rock!\nMake longer chains to\nfill the meter faster',
'Try a combo\nof 7+ wizzies!',
'Use charged wizzie\nto ignite the last row\nor column you touch',
'To remove sticky goo,\nconnect wizzies over it!',
'Collect jade crystals\nby letting them fall\nto the bottom!',
'Swipe next to bamboo\nstems blocking your\nway to weed them out!'
];
};
extend(M3.TutorialOne,GodStep.Frame);
pro.setText=function(v){
this.targetLabel.setText(this.texts[v]);
this.targetLabel.updateText();
this.targetLabel.x=this.W*.7-this.targetLabel.width/2;
this.targetLabel.y=this.W*.24-this.targetLabel.height/2;
};
pro.update=function(){
if(this.visible){
this.alpha+=(1-this.alpha)*.05;
var field=this.field;
var line=this.animLine;
var arm=this.arm;
var fs=field.scale.x;
var cellW2=field.cells[0].W/2;
if(this.animTimer++>40){
this.animTimer=0;
this.animCursor++;
if(this.animCursor>this.animCount){
this.animCursor=0;
}
}
switch(this.animCursor){
case 0:
this.lineCursor=1;
arm.setToFrame(0);
break;
case 1:
arm.x+=(field.x+line[0].x*fs+cellW2-arm.x)*.1;
arm.y+=(field.y+line[0].y*fs+cellW2-arm.y)*.1;
break;
case 2:
if(this.animTimer>20){
arm.setToFrame(1);
}
break;
case 3:
arm.x+=(field.x+line[this.lineCursor].x*fs+cellW2-arm.x)*.1;
arm.y+=(field.y+line[this.lineCursor].y*fs+cellW2-arm.y)*.1;
if(this.animTimer==40){
this.lineCursor++;
if(this.lineCursor<line.length){
this.animTimer=0;
}else{
this.animTimer=50;
}
}
break;
case 4:
if(this.animTimer>20){
arm.setToFrame(0);
}
break;
}
}
};
pro.finish=function(){
this.nextBlock();
};
pro.isComplete=function(selected){
var count=0;
for(var i=0;i<selected.length;i++){
for(var j=0;j<this.animLine.length;j++){
if(selected[i]==this.animLine[j]){
count++;
}
}
}
if(count>=this.animLine.length){
return true;
}else{
return false;
}
};
pro.nextBlock=function(){
this.currentBlock++;
var cell,i;
this.alpha=0;
if(this.currentBlock<=this.blocks){
this.Scale=this.Scale;
switch(M3.LAST_LEVEL_SELECTED){
case 1:
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
this.setText(1);
break;
case 4:
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
this.setText(3);
break;
case 6:
this.setText(4);
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
break;
}
}else{
this.visible=false;
}
};
pro.init=function(level){
if(M3.TUTORIAL==false)return;
this.visible=true;
this.lineCursor=0;
this.alpha=0;
var field=this.field=this.gameplay.field;
var dy=(this.soul.OH-this.soul.H)/2;
this.container.mask=this.maska;
this.animLine=[];
var levelData=M3.LAST_LEVEL_DATA;
var params=levelData[levelData.length-1];
var colors=params.colors;
this.maska.y=this.container2.y=(-dy)/this.s;
var deleteColor,deleteColor2,i;
this.bonus=null;
switch(level){
case 1:
this.setText(0);
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,5,7,3,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,6,3,1,null);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,0,7,5,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],2,2,2,1,null);
this.animLine2[0].delta=[0,1];
this.animLine2[1].delta=[0,1];
field.cellsXY[0][1].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[0][5].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[2][1].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[1][3].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[1][4].replaceColored(M3.Cell.STANDART[deleteColor2]);
this.animLine2.splice(0,0,field.cellsXY[2][1]);
this.animLine2.push(field.cellsXY[1][3]);
this.animLine2[3].delta=[0,1];
this.animLine2.push(field.cellsXY[1][4]);
this.animLine2[4].delta=[0,1];
break;
case 4:
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.animLine=field.randomizeArea([deleteColor],1,6,5,1,null);
this.animLine.splice(0,0,field.cellsXY[5][0]);
this.animLine.push(field.cellsXY[7][5]);
field.cellsXY[5][0].replaceColored(M3.Cell.STANDART[deleteColor]);
field.cellsXY[7][5].replaceColored(M3.Cell.STANDART[deleteColor]);
field.randomizeArea(colors,0,0,7,4,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],5,2,2,1,null);
this.animLine2.push(field.cellsXY[1][6]);
field.cellsXY[1][6].replaceColored(M3.Cell.STANDART[deleteColor2]);
this.bonus=field.cellsXY[1][6];
this.setText(2);
break;
case 6:
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,6,3,1,null);
field.randomizeArea(colors,0,0,7,4,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],2,2,3,1,null);
this.animLine2[0].delta=[0,1];
this.animLine2[1].delta=[0,1];
this.animLine2[2].delta=[0,1];
this.setText(4);
break;
case 13:
this.currentBlock=1;
this.blocks=1;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.setText(5);
var item=field.findItem();
var itemCell=item.cell;
field.replaceCells(item.cell,field.cellsXY[item.cell.yi+5][item.cell.xi]);
this.animLine=field.randomizeArea([deleteColor],item.cell.xi,item.cell.yi+1,1,3,null);
break;
case 21:
this.setText(6);
this.currentBlock=2;
this.Scale=this.Scale;
this.blocks=1;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,0,7,4,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,3,3,1,null);
break;
default:
this.visible=false;
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.s;
},
set:function(value){
this.s=value;
var dy=this.soul.OH-this.soul.H;
this.container2.y=this.maska.y=(-dy/2)/value+(this.currentBlock==2?this.soul.OH*.5:0)/value;
this.maska.scale.y=this.soul.OH/this.soul.H;
this.container2.y-=(this.currentBlock==2?this.soul.H*.05:0)/value;
this.back.rescale(value);
}
});
M3.Victory=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Victory',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_end'));
this.addChild(this.backAnim=new M3.MovieClip(['f_1','f_2','f_3'],S,this.W*.5,this.H*.3,.5));this.backAnim.animTimer=0;
this.addChild(this.winAnim=new M3.MovieClip(['win_1','win_2'],S,this.W*.5,this.H*.28,.5));this.winAnim.animTimer=0;
this.addChild(this.pers=new M3.Img('pers_e_2',S,this.W*.25,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_e_3',S,this.W*.8,this.H*.1,.5));
this.addChild(this.field=new M3.Img('field_end',S,this.W*.5,this.H*.6,.5));
this.addChild(this.b_back=new M3.ImgButton('b_menu','e_shadow',1,this,S,this.W*.25,this.H*.8));
this.addChild(this.b_replay=new M3.ImgButton('b_replay','e_shadow',1,this,S,this.W*.5,this.H*.8));
this.addChild(this.b_next=new M3.ImgButton('b_next','e_shadow',1,this,S,this.W*.75,this.H*.8));
this.addChild(this.star=new M3.ImgButton('star2','star_shadow',.9,this,S,this.W*.5,this.H*.59,null,null,.1,.2));
this.star.scaleble=false;
this.addChild(this.victory=new M3.Text('VICTORY!',285*S,this.W*.22,this.H*.2,'left',0xffffff));
this.addChild(this.levelLabel=new M3.Text('LEVEL',140*S,this.W*.5,this.H*.37,'left',0xCC6600));this.levelLabel.alpha=.7;
this.addChild(this.recordLabel=new M3.Text('RECORD',150*S,this.W*.5,this.H*.53,'left',0xffffff));
this.victory.x=this.W/2-this.victory.width/2;
this.visible=false;
this.total=0;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_next,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_replay,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Victory,GodStep.Frame);
pro.init=function(){
this.visible=true;
var player=this.soul.playerDATA;
this.levelLabel.setText('LEVEL '+M3.LAST_LEVEL_SELECTED);
this.levelLabel.updateText();
this.levelLabel.x=this.W/2-this.levelLabel.width/2;
this.star.visible=this.levelLabel.visible=this.victory.visible=this.backAnim.visible=this.pers.visible=this.pers2.visible=this.b_next.visible=M3.LAST_LEVEL_SELECTED<30;
this.winAnim.visible=!this.b_next.visible;
GodStep.playSound('victory',0,M3.SOUND);
var total=0;
var levels=this.soul.playerDATA.levels;
for(var l=0;l<levels.length;l++){
var lev=levels[l];
total+=lev[1];
}
if(GameAPI){
if(this.total<total){
this.total=total;
GameAPI.Score.submit(total);
}
if(M3.LAST_LEVEL_SELECTED==1){
M3.submitAward(1);
}
if(M3.LAST_LEVEL_SELECTED==5){
M3.submitAward(2);
}
if(M3.LAST_LEVEL_SELECTED==10){
M3.submitAward(3);
}
if(M3.LAST_LEVEL_SELECTED==20){
M3.submitAward(4);
}
if(M3.LAST_LEVEL_SELECTED==30){
M3.submitAward(5);
}
}
if(M3.LAST_LEVEL_SELECTED==30){
this.b_replay.x=this.W*.65;
this.b_back.x=this.W*.35;
this.recordLabel.setText('YOU WON!');
this.recordLabel.updateText();
this.recordLabel.scale.x=this.recordLabel.scale.y=1.5;
this.recordLabel.x=this.W/2-(this.recordLabel.width/2);
this.field.setTexture('field_win');
this.recordLabel.y=this.H*.49;
}else{
this.star.visible=M3.NEW_RECORD;
this.recordLabel.setText((M3.NEW_RECORD?'NEW RECORD ':'SCORE ')+M3.Format(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]+''));
this.recordLabel.scale.x=this.recordLabel.scale.y=1;
this.recordLabel.updateText();
this.recordLabel.x=this.W/2-this.recordLabel.width/2+(M3.NEW_RECORD?this.W*.11:0);
this.b_next.x=this.W*.75;
this.b_replay.x=this.W*.5;
this.b_back.x=this.W*.25;
this.field.setTexture('field_end');
this.recordLabel.y=this.H*.53;
}
this.star.x=this.recordLabel.x-this.W*.11;
if(GameAPI){
GameAPI.GameBreak.request(pauseGame,resumeGame);
}
};
pro.update=function(){
if(this.visible){
if(this.winAnim.animTimer++>15){
this.winAnim.nextFrame();this.winAnim.animTimer=0;
}
if(this.backAnim.animTimer++>10){
this.backAnim.nextFrame();this.backAnim.animTimer=0;
}
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_replay.isDown=false;
t.b_next.isDown=false;
t.b_back.isDown=false;
t.b_back.Scale=1;
t.b_replay.Scale=1;
t.b_next.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_next:
p.settingsDATA=GodStep.LoadLocal(p.soul.SETTINGS_SLOT);
M3.LAST_LEVEL_SELECTED++;
if(M3.LAST_LEVEL_SELECTED>p.settingsDATA.levels.length){
s.screenTo([s.startmenu],p);
}else{
M3.LAST_LEVEL_DATA=p.settingsDATA.levels[M3.LAST_LEVEL_SELECTED-1];
s.screenTo([s.gameplay],p);
}
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_back:
s.screenTo([s.levelselect],p);
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_replay:
p.settingsDATA=GodStep.LoadLocal(p.soul.SETTINGS_SLOT);
M3.LAST_LEVEL_DATA=p.settingsDATA.levels[M3.LAST_LEVEL_SELECTED-1];
s.screenTo([s.gameplay],p);
GodStep.playSound('button',0,M3.SOUND);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.victory.y=this.pers2.y+this.H*.05;
this.back.rescale(value);
}
});
M3.Pause=function(soul,gameplay){
this.soul=soul;
this.gameplay=gameplay;
GodStep.Frame.call(this,'Pause',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_pause'));
this.addChild(this.field1=new M3.Img('field_pause',S,this.W*.5,this.H*.2,.5));
this.addChild(this.field2=new M3.Img('field_pause_2',S,this.W*.5,this.H*.76,.5));
this.addChild(this.pers=new M3.Img('pers_p_1',S,this.W*.2,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_p_2',S,this.W*.8,this.H*.1,.5));
this.addChild(this.b_back=new M3.ImgButton('b_back_p','b_shadow_p',1,this,S,this.W*.25,this.H*.38));
this.addChild(this.b_menu=new M3.ImgButton('b_menu_p','b_shadow_p',1,this,S,this.W*.5,this.H*.38));
this.addChild(this.b_replay=new M3.ImgButton('b_replay_p','b_shadow_p',1,this,S,this.W*.75,this.H*.38));
var dy=this.H*.31;
this.addChild(this.musicLabel=new M3.Img('icon_music_p',S,this.W*.23,this.H*.525+dy,.5));
this.addChild(this.soundLabel=new M3.Img('icon_sound_p',S,this.W*.23,this.H*.37+dy,.5));
this.addChild(this.musicLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.44+dy,'left',0xffffff));
this.addChild(this.soundLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.29+dy,'left',0xffffff));
this.addChild(this.b_music_on=new M3.ImgButton('on_p',null,null,this,S,this.W*.72,this.H*.52+dy));
this.addChild(this.b_music_off=new M3.ImgButton('off_p',null,null,this,S,this.W*.72,this.H*.52+dy));
this.addChild(this.b_sound_on=new M3.ImgButton('on_p',null,null,this,S,this.W*.72,this.H*.37+dy));
this.addChild(this.b_sound_off=new M3.ImgButton('off_p',null,null,this,S,this.W*.72,this.H*.37+dy));
this.addChild(this.pauseLabel=new M3.Text('PAUSE',200*S,this.W*.33,this.H*.2,'left',0xffffff));
this.b_music_off.scaleble=
this.b_sound_on.scaleble=
this.b_music_on.scaleble=
this.b_sound_off.scaleble=false;
this.b_music_off.visible=false;
this.b_sound_off.visible=false;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_menu,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_replay,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Pause,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.b_music_off.visible=!M3.MUSIC;
this.b_music_on.visible=M3.MUSIC;
this.b_sound_off.visible=!M3.SOUND;
this.b_sound_on.visible=M3.SOUND;
if(M3.MUSIC){
this.musicLabel.setText('ON');this.musicLabel.updateText();
}else{
this.musicLabel.setText('OFF');this.musicLabel.updateText();
}
if(M3.SOUND){
this.soundLabel.setText('ON');this.soundLabel.updateText();
}else{
this.soundLabel.setText('OFF');this.soundLabel.updateText();
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_replay.isDown=false;
t.b_menu.isDown=false;
t.b_back.isDown=false;
t.b_menu.Scale=1;
t.b_replay.Scale=1;
t.b_back.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_back:
p.visible=false;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_menu:
s.screenTo([s.levelselect],p.gameplay);
GodStep.volumeSound('theme',0);
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_replay:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p.gameplay);
break;
case p.b_music_on:
M3.MUSIC=false;
GodStep.volumeSound('theme',M3.MUSIC);
p.b_music_on.visible=false;
p.b_music_off.visible=true;
p.musicLabel.setText('OFF');
break;
case p.b_music_off:
M3.MUSIC=true;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('theme',null,M3.MUSIC);
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.musicLabel.setText('ON');
break;
case p.b_sound_on:
M3.SOUND=false;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
p.soundLabel.setText('OFF');
break;
case p.b_sound_off:
M3.SOUND=true;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.soundLabel.setText('ON');
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.back.rescale(value);
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.pauseLabel.y=(-dy/2+this.soul.H*.03)/value;
this.field1.y=(-dy/2+this.soul.H*.13)/value;
}
});
M3.MatchThree=function(){
GodStep.Game.TRANSPARENT=true;
GodStep.Game.call(this,'MatchThree',0x888888,M3.Assets,'M3_settings1021','M3_player',M3.DEFAULT_SETTINGS);
M3.MatchThree.instance=this;
M3.SOUND=M3.MUSIC=true;
this.MW=1536;
this.MH=1854;
};
extend(M3.MatchThree,GodStep.Game);

M3.SCALE=1/.5;
M3.CELL_SCALE=.85;
M3.CELL_SCALE_BACK=1.06;
M3.CELLW_SCALE=.8;
M3.IMAGE_PATH='src/matchthree/img/';
M3.SOUND_PATH='src/matchthree/sounds/';
M3.DEFAULT_SETTINGS='{"levels":[[{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":6},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":6,"yi":3},{"name":"delete","xi":6,"yi":2},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":0,"yi":0},{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":0,"yi":2},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":0,"yi":6},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":2,"yi":7},{"name":"delete","xi":3,"yi":7},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":4,"yi":7},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"points":5000,"items":0,"colors":[0,1,2],"steps":7,"bonuses":0,"isBonus":false,"id":1}],[{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":3,"yi":7},{"name":"delete","xi":3,"yi":6},{"name":"delete","xi":2,"yi":5},{"name":"delete","xi":3,"yi":5},{"name":"delete","xi":4,"yi":5},{"points":10000,"items":0,"colors":[0,1,2],"steps":8,"bonuses":0,"isBonus":false,"id":2}],[{"name":"delete","xi":0,"yi":0},{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":8},{"points":20000,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":false,"id":3}],[{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":1,"yi":5},{"name":"delete","xi":5,"yi":5},{"points":24000,"items":0,"colors":[0,1,2,3],"steps":13,"bonuses":0,"isBonus":true,"id":4}],[{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":2,"yi":3},{"name":"delete","xi":4,"yi":3},{"name":"delete","xi":3,"yi":5},{"name":"delete","xi":1,"yi":6},{"name":"delete","xi":5,"yi":6},{"points":28000,"items":0,"colors":[0,1,2,3],"steps":19,"bonuses":0,"isBonus":true,"id":5}],[{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"points":0,"items":0,"colors":[0,1,2,3],"steps":10,"bonuses":0,"isBonus":true,"id":6}],[{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"name":"dirt","xi":4,"yi":4},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":2,"yi":4},{"name":"dirt","xi":2,"yi":5},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":4,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3],"steps":14,"bonuses":0,"isBonus":true,"id":7}],[{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":5,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":1,"yi":5},{"name":"dirt","xi":2,"yi":5},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":4,"yi":5},{"name":"dirt","xi":5,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":true,"id":8}],[{"name":"delete","xi":1,"yi":0},{"name":"delete","xi":1,"yi":1},{"name":"delete","xi":5,"yi":0},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"name":"dirt","xi":3,"yi":0},{"name":"dirt","xi":3,"yi":1},{"name":"dirt","xi":3,"yi":2},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":1,"yi":4},{"name":"dirt","xi":2,"yi":4},{"name":"dirt","xi":4,"yi":4},{"name":"dirt","xi":5,"yi":4},{"points":0,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":true,"id":9}],[{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":3,"yi":7},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":0,"yi":6},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":0,"yi":4},{"name":"dirt","xi":6,"yi":4},{"name":"dirt","xi":0,"yi":1},{"name":"dirt","xi":6,"yi":1},{"points":0,"items":0,"colors":[0,1,2,3],"steps":10,"bonuses":0,"isBonus":true,"id":10}],[{"points":25000,"items":0,"colors":[0,1,2,3,4],"steps":12,"bonuses":0,"isBonus":true,"id":11}],[{"points":30000,"items":0,"colors":[0,1,2,3,4],"steps":16,"bonuses":0,"isBonus":true,"id":12}],[{"points":0,"items":2,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":13}],[{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":1,"yi":1},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":1,"yi":5},{"name":"delete","xi":5,"yi":5},{"name":"delete","xi":6,"yi":5},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":14}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":3,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":6,"yi":3},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":15}],[{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":6},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":6,"yi":6},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":2},{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":4,"yi":2},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":26,"bonuses":0,"isBonus":true,"id":16}],[{"name":"delete","xi":1,"yi":2},{"name":"delete","xi":5,"yi":5},{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":8},{"name":"dirt","xi":0,"yi":3},{"name":"dirt","xi":1,"yi":3},{"name":"dirt","xi":5,"yi":6},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":0,"yi":7},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":2},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":11,"bonuses":0,"isBonus":true,"id":17}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":2,"yi":4},{"name":"delete","xi":4,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":1,"yi":2},{"name":"delete","xi":5,"yi":2},{"name":"delete","xi":1,"yi":6},{"name":"delete","xi":5,"yi":6},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":24,"bonuses":0,"isBonus":true,"id":18}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":1,"yi":4},{"name":"delete","xi":1,"yi":3},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":5,"yi":0},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"points":35000,"items":0,"colors":[0,1,2,3,4],"steps":25,"bonuses":0,"isBonus":true,"id":19}],[{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":3},{"name":"delete","xi":1,"yi":3},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":29,"bonuses":0,"isBonus":true,"id":20}],[{"name":"block","xi":0,"yi":4},{"name":"block","xi":1,"yi":4},{"name":"block","xi":2,"yi":4},{"name":"block","xi":3,"yi":4},{"name":"block","xi":4,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":6,"yi":4},{"points":17000,"items":0,"colors":[0,1,2,3,4],"steps":10,"bonuses":0,"isBonus":true,"id":21}],[{"name":"block","xi":3,"yi":0},{"name":"block","xi":3,"yi":1},{"name":"block","xi":3,"yi":2},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":4},{"name":"block","xi":3,"yi":5},{"name":"block","xi":3,"yi":6},{"name":"block","xi":3,"yi":7},{"name":"block","xi":3,"yi":8},{"name":"block","xi":2,"yi":4},{"name":"block","xi":1,"yi":4},{"name":"block","xi":0,"yi":4},{"name":"block","xi":4,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":6,"yi":4},{"points":20000,"items":0,"colors":[0,1,2,3,4],"steps":14,"bonuses":0,"isBonus":true,"id":22}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":2,"yi":0},{"name":"delete","xi":3,"yi":0},{"name":"delete","xi":4,"yi":0},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":6,"yi":3},{"name":"delete","xi":0,"yi":3},{"name":"block","xi":5,"yi":5},{"name":"block","xi":4,"yi":5},{"name":"block","xi":4,"yi":4},{"name":"block","xi":4,"yi":3},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":2},{"name":"block","xi":2,"yi":2},{"name":"block","xi":2,"yi":1},{"name":"dirt","xi":1,"yi":6},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":5,"yi":2},{"name":"dirt","xi":5,"yi":1},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":2},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":9,"bonuses":0,"isBonus":true,"id":23}],[{"name":"block","xi":0,"yi":4},{"name":"block","xi":2,"yi":4},{"name":"block","xi":3,"yi":4},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":2},{"name":"block","xi":4,"yi":4},{"name":"block","xi":6,"yi":4},{"name":"block","xi":3,"yi":0},{"name":"block","xi":3,"yi":1},{"name":"block","xi":5,"yi":5},{"name":"block","xi":1,"yi":5},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":24}],[{"name":"block","xi":6,"yi":0},{"name":"block","xi":6,"yi":1},{"name":"block","xi":5,"yi":2},{"name":"block","xi":5,"yi":3},{"name":"block","xi":4,"yi":4},{"name":"block","xi":4,"yi":5},{"name":"block","xi":3,"yi":6},{"name":"block","xi":3,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":2,"yi":8},{"name":"block","xi":3,"yi":5},{"name":"block","xi":1,"yi":8},{"name":"block","xi":0,"yi":8},{"name":"block","xi":4,"yi":3},{"name":"block","xi":5,"yi":1},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":18,"bonuses":0,"isBonus":true,"id":25}],[{"name":"block","xi":1,"yi":1},{"name":"block","xi":3,"yi":2},{"name":"block","xi":5,"yi":1},{"name":"block","xi":1,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":3,"yi":3},{"name":"block","xi":1,"yi":3},{"name":"block","xi":5,"yi":3},{"name":"block","xi":1,"yi":0},{"name":"block","xi":5,"yi":0},{"name":"block","xi":1,"yi":6},{"name":"block","xi":1,"yi":7},{"name":"block","xi":1,"yi":8},{"name":"block","xi":5,"yi":6},{"name":"block","xi":5,"yi":7},{"name":"block","xi":5,"yi":8},{"name":"block","xi":3,"yi":7},{"name":"block","xi":3,"yi":6},{"points":50000,"items":0,"colors":[0,1,2,3,4],"steps":28,"bonuses":0,"isBonus":true,"id":26}],[{"name":"dirt","xi":0,"yi":8},{"name":"dirt","xi":1,"yi":8},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":5,"yi":8},{"name":"dirt","xi":6,"yi":8},{"name":"dirt","xi":6,"yi":7},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":6,"yi":5},{"name":"dirt","xi":6,"yi":4},{"name":"dirt","xi":6,"yi":2},{"name":"dirt","xi":6,"yi":3},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":0},{"name":"dirt","xi":5,"yi":0},{"name":"dirt","xi":4,"yi":0},{"name":"dirt","xi":3,"yi":0},{"name":"dirt","xi":2,"yi":0},{"name":"dirt","xi":1,"yi":0},{"name":"dirt","xi":0,"yi":0},{"name":"dirt","xi":0,"yi":1},{"name":"dirt","xi":0,"yi":2},{"name":"dirt","xi":0,"yi":3},{"name":"dirt","xi":0,"yi":4},{"name":"dirt","xi":0,"yi":5},{"name":"dirt","xi":0,"yi":6},{"name":"dirt","xi":0,"yi":7},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":3,"yi":4},{"name":"delete","xi":3,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":27}],[{"name":"block","xi":3,"yi":8},{"name":"block","xi":0,"yi":8},{"name":"block","xi":1,"yi":8},{"name":"block","xi":2,"yi":8},{"name":"block","xi":4,"yi":8},{"name":"block","xi":5,"yi":8},{"name":"block","xi":6,"yi":8},{"name":"block","xi":0,"yi":7},{"name":"block","xi":1,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":3,"yi":7},{"name":"block","xi":4,"yi":7},{"name":"block","xi":5,"yi":7},{"name":"block","xi":6,"yi":7},{"name":"block","xi":6,"yi":6},{"name":"block","xi":5,"yi":6},{"name":"block","xi":4,"yi":6},{"name":"block","xi":3,"yi":6},{"name":"block","xi":2,"yi":6},{"name":"block","xi":1,"yi":6},{"name":"block","xi":0,"yi":6},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":28}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":1,"yi":4},{"name":"delete","xi":2,"yi":4},{"name":"delete","xi":5,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":4,"yi":4},{"name":"dirt","xi":0,"yi":8},{"name":"dirt","xi":1,"yi":8},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":5,"yi":8},{"name":"dirt","xi":6,"yi":8},{"name":"dirt","xi":5,"yi":7},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":3,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":11,"bonuses":0,"isBonus":true,"id":29}],[{"name":"block","xi":6,"yi":0},{"name":"block","xi":6,"yi":1},{"name":"block","xi":6,"yi":2},{"name":"block","xi":6,"yi":3},{"name":"block","xi":6,"yi":4},{"name":"block","xi":6,"yi":5},{"name":"block","xi":6,"yi":6},{"name":"block","xi":6,"yi":7},{"name":"block","xi":6,"yi":8},{"name":"block","xi":0,"yi":0},{"name":"block","xi":0,"yi":1},{"name":"block","xi":0,"yi":3},{"name":"block","xi":0,"yi":2},{"name":"block","xi":0,"yi":4},{"name":"block","xi":0,"yi":5},{"name":"block","xi":0,"yi":6},{"name":"block","xi":0,"yi":7},{"name":"block","xi":0,"yi":8},{"name":"block","xi":1,"yi":8},{"name":"block","xi":2,"yi":8},{"name":"block","xi":3,"yi":8},{"name":"block","xi":5,"yi":8},{"name":"block","xi":4,"yi":8},{"name":"block","xi":5,"yi":7},{"name":"block","xi":5,"yi":6},{"name":"block","xi":5,"yi":5},{"name":"block","xi":5,"yi":3},{"name":"block","xi":5,"yi":4},{"name":"block","xi":5,"yi":2},{"name":"block","xi":5,"yi":1},{"name":"block","xi":5,"yi":0},{"name":"block","xi":1,"yi":0},{"name":"block","xi":1,"yi":1},{"name":"block","xi":1,"yi":3},{"name":"block","xi":1,"yi":2},{"name":"block","xi":1,"yi":4},{"name":"block","xi":1,"yi":5},{"name":"block","xi":1,"yi":6},{"name":"block","xi":1,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":3,"yi":7},{"name":"block","xi":4,"yi":7},{"points":27000,"items":0,"colors":[0,1,2,3,4],"steps":14,"bonuses":0,"isBonus":true,"id":30}]]}';
pro.update=function(){
this.beginFps();
GodStep.Mejdu.prototype.update.call(this);
this.endFps();
};
pro.run=function(){
catched(function(){
var t=M3.MatchThree.instance;
if(!t.isRunning){
trace('running');
t.isRunning=true;
t.addFrame(t.startmenu=new M3.StartMenu(t));
t.addFrame(t.levelselect=new M3.LevelSelect(t));
t.addFrame(t.gameplay=new M3.GamePlay(t));
t.addFrame(t.settings=new M3.Settings(t));
t.addFrame(t.replay=new M3.Replay(t));
t.addFrame(t.victory=new M3.Victory(t));
t.addFrame(t.dev=new M3.Dev(t));
t.addFrame(t.fps=new GodStep.FPS(t,0x22aa00));
t.fps.addString((t.CANVAS)?'C':'W');
t.fps.visible=false;
t.addFrame(t.transmission=new M3.Transmission(t));
t.settingsDATA=GodStep.LoadLocal(t.SETTINGS_SLOT);
t.playerDATA={levels:[]};
for(var i=0;i<t.settingsDATA.levels.length;i++){
t.playerDATA.levels.push([0,0]);
}
t.screenTo([t.startmenu],t.assets);
t.keyboard=new GodStep.Keyboard(t);
t.keyboard.focus();
t.reposition();
}
},'RUN');
};
M3.Format=function(v){
if(v.length<=3)return v;
return v.substr(0,v.length-3)+','+v.substr(v.length-3,3);
};
pro.showLogo=function(v){
if(M3.LOGO){
M3.LOGO.style.visibility=v?'visible':'hidden';
}
};
pro.resizeWindow=function(w,h){
GodStep.Game.prototype.resizeWindow.call(this,w,h);
if(M3.LOGO)M3.LOGO.style.right=((this.OW-this.W)/2+10)+'px';
};
M3.submitAward=function(v){
var award={award:'award'+v};
trace(award.award);
if(GameAPI){
GameAPI.Award.submit(award);
}
};
function startMatchThree(){
if(!M3.MatchThree.instance){
var game=new M3.MatchThree();
game.div.style.margin='0 auto';
game.div.style['vertical-align']='middle';
window.addEventListener("resize",function(){
setTimeout(h_resize,500);
},false);
window.addEventListener("orientationchange",function(){
setTimeout(h_resize,500);
},false);
}
}
